package model.paint.strategy;

import java.awt.geom.AffineTransform;

import model.paint.UprightShapePaintStrategy;
import model.paint.shape.SpaceShuttlePolygonFactory;

/**
 * Paint strategy that paints a space-shuttle-shaped Polygon generated by a Fish1PolyfonFactory.
 * @author Peter
 */
public class SpaceShuttlePaintStrategy extends UprightShapePaintStrategy {

	/**
	 * No-parameter constructor that instantiates the AffineTransform for internal use.
	 */
	public SpaceShuttlePaintStrategy() {
		this(new AffineTransform());
	}

	/**
	 * Constructor that takes an external AffineTransform.
	 * @param at The AffineTransform to use for internal use.
	 */
	public SpaceShuttlePaintStrategy(AffineTransform at) {
		super(at, new SpaceShuttlePolygonFactory().makeShape(0, 0, 1, 1));
	}
}
