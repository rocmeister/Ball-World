<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_CmJ8QMFJEei0Sok_Gsjhng" name="model">
    <eAnnotations xmi:id="_DBDIgMFJEei0Sok_Gsjhng" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_DBDIgcFJEei0Sok_Gsjhng" source="codegen">
        <details xmi:id="_DBDIgsFJEei0Sok_Gsjhng" key="codegenDirectory" value="/HW05/src"/>
        <details xmi:id="_EljBIMFJEei0Sok_Gsjhng" key="AssociatedSourceCode" value="/HW05/src/model/Ball.java;938502660/1;/HW05/src/model/BallModel.java;2595290713/1;/HW05/src/model/IBallCmd.java;755622280/1;/HW05/src/model/IInteractStrategy.java;2297349390/1;/HW05/src/model/IM2VAdapter.java;3964499665/1;/HW05/src/model/IPaintStrategy.java;2855397383/1;/HW05/src/model/IPaintStrategyFac.java;2842114643/1;/HW05/src/model/IUpdateStrategy.java;1508993538/1;/HW05/src/model/IUpdateStrategyFac.java;34869891/1;/HW05/src/model/paint/ADecoratorPaintStrategy.java;2260772507/1;/HW05/src/model/paint/APaintStrategy.java;269623074/1;/HW05/src/model/paint/FixedColorDecoratorPaintStrategy.java;3510553260/1;/HW05/src/model/paint/ImagePaintStrategy.java;1104018490/1;/HW05/src/model/paint/MultiPaintStrategy.java;3852114432/1;/HW05/src/model/paint/ShapePaintStrategy.java;4161110113/1;/HW05/src/model/paint/UprightImagePaintStrategy.java;3548590847/1;/HW05/src/model/paint/UprightMultiPaintStrategy.java;2411960392/1;/HW05/src/model/paint/UprightShapePaintStrategy.java;3678993189/1;/HW05/src/model/paint/shape/EllipseShapeFactory.java;2422604491/1;/HW05/src/model/paint/shape/Fish1PolygonFactory.java;1113813204/1;/HW05/src/model/paint/shape/Fish2PolygonFactory.java;2723150543/1;/HW05/src/model/paint/shape/IShapeFactory.java;2923371689/1;/HW05/src/model/paint/shape/PolygonFactory.java;3118826364/1;/HW05/src/model/paint/shape/RectangleShapeFactory.java;3332213297/1;/HW05/src/model/paint/shape/SpaceShuttlePolygonFactory.java;822081138/1;/HW05/src/model/paint/strategy/BallPaintStrategy.java;2316891077/1;/HW05/src/model/paint/strategy/BirdSheepImagePaintStrategy.java;1489855682/1;/HW05/src/model/paint/strategy/BoxAndBallPaintStrategy.java;1378779229/1;/HW05/src/model/paint/strategy/DuckPaintStrategy.java;2074278403/1;/HW05/src/model/paint/strategy/EllipsePaintStrategy.java;1494320518/1;/HW05/src/model/paint/strategy/Fish1PaintStrategy.java;4154234962/1;/HW05/src/model/paint/strategy/Fish2PaintStrategy.java;3222624238/1;/HW05/src/model/paint/strategy/MarioSonicImagePaintStrategy.java;2477484446/1;/HW05/src/model/paint/strategy/NiceFishPaintStrategy.java;1002868742/1;/HW05/src/model/paint/strategy/PlanetImagePaintStrategy.java;1841980878/1;/HW05/src/model/paint/strategy/RectanglePaintStrategy.java;2325219002/1;/HW05/src/model/paint/strategy/SoccerImagePaintStrategy.java;2831328885/1;/HW05/src/model/paint/strategy/SpaceShuttlePaintStrategy.java;919810500/1;/HW05/src/model/paint/strategy/SquarePaintStrategy.java;2277808745/1;/HW05/src/model/strategy/AUpdateStrategy.java;3677022584/1;/HW05/src/model/strategy/AlignedStrategy.java;856861992/1;/HW05/src/model/strategy/Collide2Strategy.java;4171948557/1;/HW05/src/model/strategy/CollideExactStrategy.java;1006280403/1;/HW05/src/model/strategy/CollideStrategy.java;4194780022/1;/HW05/src/model/strategy/DelayedOverlapStrategy.java;3374601418/1;/HW05/src/model/strategy/EatStrategy.java;3140128785/1;/HW05/src/model/strategy/FlashStrategy.java;3925593205/1;/HW05/src/model/strategy/GravityStrategy.java;3542976108/1;/HW05/src/model/strategy/GrowStrategy.java;252154794/1;/HW05/src/model/strategy/KillStrategy.java;1639417983/1;/HW05/src/model/strategy/MultiInteractStrategy.java;3974500416/1;/HW05/src/model/strategy/MultiStrategy.java;925597401/1;/HW05/src/model/strategy/OverlapStrategy.java;2329378676/1;/HW05/src/model/strategy/ShrinkStrategy.java;3783763305/1;/HW05/src/model/strategy/SimilarColorStrategy.java;3452289654/1;/HW05/src/model/strategy/SpawnStrategy.java;4165654617/1;/HW05/src/model/strategy/StraightStrategy.java;272725904/1;/HW05/src/model/strategy/SwapColorStrategy.java;2476856923/1;/HW05/src/model/strategy/SwitcherStrategy.java;1734074103/1;/HW05/src/model/strategy/TakeColorStrategy.java;2236510973/1;/HW05/src/model/strategy/TeleportingStrategy.java;3000178188/1;/HW05/src/model/strategy/ZoneStrategy.java;1934974350/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_D_My0MFJEei0Sok_Gsjhng">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_D_My0cFJEei0Sok_Gsjhng">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_D_NZ4MFJEei0Sok_Gsjhng">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_D_NZ4cFJEei0Sok_Gsjhng">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_D_NZ4sFJEei0Sok_Gsjhng">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_D_NZ48FJEei0Sok_Gsjhng">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_D_NZ5MFJEei0Sok_Gsjhng">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_D_NZ5cFJEei0Sok_Gsjhng">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_D_OA8MFJEei0Sok_Gsjhng">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_D_OoAMFJEei0Sok_Gsjhng" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_D_OoAcFJEei0Sok_Gsjhng" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_D_vlYMFJEei0Sok_Gsjhng" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_ER3QIMFJEei0Sok_Gsjhng" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_ESSt8MFJEei0Sok_Gsjhng" name="Ellipse2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_ESuLwMFJEei0Sok_Gsjhng" name="Point2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_D_9n0MFJEei0Sok_Gsjhng" name="image">
          <packagedElement xmi:type="uml:Interface" xmi:id="_ESBoMcFJEei0Sok_Gsjhng" name="ImageObserver"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ERcZYMFJEei0Sok_Gsjhng" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ERdAcMFJEei0Sok_Gsjhng" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ERdngMFJEei0Sok_Gsjhng" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ERdngsFJEei0Sok_Gsjhng" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ERnYgMFJEei0Sok_Gsjhng" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ERn_kcFJEei0Sok_Gsjhng" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ESAaEMFJEei0Sok_Gsjhng" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ESBBIcFJEei0Sok_Gsjhng" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ESDdYcFJEei0Sok_Gsjhng" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ESEEccFJEei0Sok_Gsjhng" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ESMAQMFJEei0Sok_Gsjhng" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ESW_YMFJEei0Sok_Gsjhng" name="Polygon"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_D_9n0cFJEei0Sok_Gsjhng" name="lang">
        <packagedElement xmi:type="uml:DataType" xmi:id="_ESCPQcFJEei0Sok_Gsjhng" name="String"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_EBHeYMFJEei0Sok_Gsjhng" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_ES_4kMFJEei0Sok_Gsjhng" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ETAfocFJEei0Sok_Gsjhng" name="Map"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_D_PPEMFJEei0Sok_Gsjhng" name="provided">
      <packagedElement xmi:type="uml:Package" xmi:id="_D_PPEcFJEei0Sok_Gsjhng" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_D_PPEsFJEei0Sok_Gsjhng" name="dispatcher">
          <packagedElement xmi:type="uml:Package" xmi:id="_D_cqcMFJEei0Sok_Gsjhng" name="impl">
            <packagedElement xmi:type="uml:Class" xmi:id="_ERpNsMFJEei0Sok_Gsjhng" name="SequentialDispatcher"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_ERe1ocFJEei0Sok_Gsjhng" name="IDispatcher"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_ERfcscFJEei0Sok_Gsjhng" name="IObserver"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_D_cqccFJEei0Sok_Gsjhng" name="loader">
          <packagedElement xmi:type="uml:Package" xmi:id="_D_dRgMFJEei0Sok_Gsjhng" name="impl">
            <packagedElement xmi:type="uml:Class" xmi:id="_ERpNssFJEei0Sok_Gsjhng" name="ObjectLoader"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_EAjdsMFJEei0Sok_Gsjhng" name="valueGenerator">
          <packagedElement xmi:type="uml:Package" xmi:id="_EAjdscFJEei0Sok_Gsjhng" name="impl">
            <packagedElement xmi:type="uml:Class" xmi:id="_ESeUIMFJEei0Sok_Gsjhng" name="Randomizer"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_D_XK4MFJEei0Sok_Gsjhng" name="model">
      <packagedElement xmi:type="uml:Package" xmi:id="_D_cDYsFJEei0Sok_Gsjhng" name="strategy">
        <packagedElement xmi:type="uml:Class" xmi:id="_EFtqgMFJEei0Sok_Gsjhng" name="AUpdateStrategy" isAbstract="true">
          <ownedComment xmi:id="_EW5hIcFJEei0Sok_Gsjhng">
            <body>Very simple abstract class that provides invariant behavior to some IUpdateStrategies.
Simply implements the IUpdateStrategy init method as a no-op.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_ESrIcMFJEei0Sok_Gsjhng" client="_EFtqgMFJEei0Sok_Gsjhng" supplier="_EEHIAMFJEei0Sok_Gsjhng" contract="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedOperation xmi:id="_ESrvgcFJEei0Sok_Gsjhng" name="init">
            <ownedParameter xmi:id="_ESrvgsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EFvfsMFJEei0Sok_Gsjhng" name="AlignedStrategy">
          <ownedComment xmi:id="_EW5hIsFJEei0Sok_Gsjhng">
            <body>Detects if two balls' velocities are roughly aligned.
NOTE: This strategy defines a  &quot;criteria for interaction&quot;. The interaction behavior is delegated to the
interactWith methods of the individual balls.  
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <generalization xmi:id="_ESs9oMFJEei0Sok_Gsjhng" general="_EFtqgMFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EWIsIMFJEei0Sok_Gsjhng" name="epsilon" visibility="private" isLeaf="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWIsIcFJEei0Sok_Gsjhng" value="2 * Math.PI * 0.05"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWq3psFJEei0Sok_Gsjhng" name="updateState" specification="_EUwMEMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWq3p8FJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWq3qMFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>dispatcher.updateAll((other, disp) -> {
			// check if you are receiving your own command 
			if (context != other) {
				// if the balls are overlapping
				if (Math.abs(Math.atan2(context.getVelocity().getY(), context.getVelocity().getX()) -
						Math.atan2(other.getVelocity().getY(), other.getVelocity().getX())) &lt; epsilon) {
					// invoke the interaction strategies of the two interacting balls 
					context.interactWith(other, dispatcher, true);
					other.interactWith(context, dispatcher, false);
				}
			}
		});
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EUwMEMFJEei0Sok_Gsjhng" name="updateState" method="_EWq3psFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EUwMEcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUwzIMFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EFxU4MFJEei0Sok_Gsjhng" name="Collide2Strategy">
          <ownedComment xmi:id="_EW5hI8FJEei0Sok_Gsjhng">
            <body>Elastic collision implemented purely as an interaction strategy. Combine with Overlap to see bouncing balls.
NOTE: This strategy only installs a &quot;post-collision interaction behavior&quot; and thus at least needs 
to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_EWJTMcFJEei0Sok_Gsjhng" name="nudge" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWJTMsFJEei0Sok_Gsjhng" value="1.1"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_ESuy0cFJEei0Sok_Gsjhng" client="_EFxU4MFJEei0Sok_Gsjhng" supplier="_EEHIAMFJEei0Sok_Gsjhng" contract="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWq3qcFJEei0Sok_Gsjhng" name="init" specification="_ESwA8cFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWq3qsFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {

			@Override
			public void interact(Ball context, Ball other, IDispatcher&lt;IBallCmd> disp, Boolean interactFirst) {
				// IMPORTANT: this is the main difference between Collide2 and Collide.
				// Because Overlap delegates to BOTH balls interactWith methods, Collide2 uses the
				// interactFirst flag and only runs the collision mathematics on the first call.  
				if (interactFirst) {
					// the distance between the radii of the two balls
					double radiusDistance = context.getLocation().distance(other.getLocation());
					
					// Calculate the reduced mass of the two-ball system using the square of the radius as the mass of the ball (mass is proportional to the size of the ball).
					double rm = reducedMass(Math.pow(context.getRadius(), 2), Math.pow(other.getRadius(), 2));
					
					// The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a 
					// positive value. This is the amount of overlap of the balls as measured along the line between their centers.
					double deltaR = (context.getRadius() + other.getRadius()) - (radiusDistance);
					
					// Use the reduced mass and other parameters to calculate the impulse of the collision. The position of the source ball will be &quot;nudged&quot; out of collision distance during this calculation.
					Point2D.Double imp = impulse(context.getLocation(), context.getVelocity(), other.getLocation(), other.getVelocity(), rm, radiusDistance, deltaR);
					
					// Update the velocities of each ball by taking the impulse divided by the mass (square of the radius) and call its post-collision 
					// interaction behavior (the interactWith method of the Ball).   
					// Note that the same method can be used to update either the source or target balls simply by switching the parameters and negating the impulse.    
					// Careful here! This is simpler than it looks! Use all the resources available to you!
					updateCollision(context, other, imp.x, imp.y, disp);
					updateCollision(other, context, -imp.x, -imp.y, disp);
				}
			}
			
		}));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWresMFJEei0Sok_Gsjhng" name="reducedMass" specification="_EFyjAMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWrescFJEei0Sok_Gsjhng" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWressFJEei0Sok_Gsjhng" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWres8FJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (mSource == Double.POSITIVE_INFINITY)
			return mTarget;
		if (mTarget == Double.POSITIVE_INFINITY)
			return mSource;
		else
			return (mSource * mTarget) / (mSource + mTarget);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWretMFJEei0Sok_Gsjhng" name="impulse" specification="_EU0dgMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWretcFJEei0Sok_Gsjhng" name="lSource" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWretsFJEei0Sok_Gsjhng" name="vSource" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWret8FJEei0Sok_Gsjhng" name="lTarget" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWreuMFJEei0Sok_Gsjhng" name="vTarget" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWreucFJEei0Sok_Gsjhng" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWreusFJEei0Sok_Gsjhng" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWreu8FJEei0Sok_Gsjhng" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWrevMFJEei0Sok_Gsjhng" type="_ESxPEMFJEei0Sok_Gsjhng" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>// Calculate the normal vector, from source to target
		double nx = ((double) (lTarget.x - lSource.x)) / distance;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;

		// delta velocity (speed, actually) in normal direction, source to target
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

		// move the source ball beyond collision range of the target ball, along the normal direction.
		lSource.translate((int) Math.ceil(-nx * (nudge * deltaR)), (int) Math.ceil(-ny * (nudge * deltaR)));

		return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0 * reducedMass * dvn * ny);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWsFwMFJEei0Sok_Gsjhng" name="updateCollision" specification="_EU1EkMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWsFwcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWsFwsFJEei0Sok_Gsjhng" name="target" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWsFw8FJEei0Sok_Gsjhng" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWsFxMFJEei0Sok_Gsjhng" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWsFxcFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>int mContext = context.getRadius() * context.getRadius();

		context.getVelocity().translate((int) Math.round(impX / mContext), (int) Math.round(impY / mContext));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EFyjAMFJEei0Sok_Gsjhng" name="reducedMass" visibility="protected" method="_EWresMFJEei0Sok_Gsjhng">
            <ownedComment xmi:id="_EW5hJMFJEei0Sok_Gsjhng">
              <body>Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
	 * result if one of the balls has infinite mass.
	 * @param mSource Mass of the source ball.
	 * @param mTarget Mass of the target ball.
	 * @return The reduced mass of the two balls (m1*m2)/(m1+m2).</body>
            </ownedComment>
            <ownedParameter xmi:id="_EFyjAcFJEei0Sok_Gsjhng" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EFyjAsFJEei0Sok_Gsjhng" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EFyjA8FJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ESwA8cFJEei0Sok_Gsjhng" name="init" method="_EWq3qcFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ESwA8sFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUyBQsFJEei0Sok_Gsjhng" name="updateState">
            <ownedParameter xmi:id="_EUyBQ8FJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EUzPYMFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EUzPYcFJEei0Sok_Gsjhng" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_EUyoUMFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EU0dgMFJEei0Sok_Gsjhng" name="impulse" visibility="protected" method="_EWretMFJEei0Sok_Gsjhng">
            <ownedComment xmi:id="_EW5hJcFJEei0Sok_Gsjhng">
              <body>Calculates the impulse (change in momentum) of the collision in the
	 * direction from the source to the target This method calculates the
	 * impulse on the source ball. The impulse on the target ball is the
	 * negative of the result. Also moves source ball out of collision range
	 * along normal direction. The change in velocity of the source ball is the
	 * impulse divided by the source's mass. The change in velocity of the target
	 * ball is the negative of the impulse divided by the target's mass
	 * 
	 * Operational note: Even though theoretically, the difference in velocities
	 * of two balls should be co-linear with the normal line between them, the
	 * discrete nature of animations means that the point where collision is
	 * detected may not be at the same point as the theoretical contact point.
	 * This method calculates the rebound directions as if the two balls were
	 * the appropriate radii such that they had just contacted
	 * _at_the_point_of_collision_detection_. This may give slightly different
	 * rebound direction than one would calculate if they contacted at the
	 * theoretical point given by their actual radii.
	 * 
	 * @param lSource Location of the source ball
	 * @param vSource Velocity of the source ball
	 * @param lTarget Location of the target ball
	 * @param vTarget Velocity of the target ball
	 * @param reducedMass Reduced mass of the two balls
	 * @param distance Distance between the two balls.
	 * @param deltaR The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a
	 * positive value. This is the amount of overlap of the balls as measured along the line between their centers.
	 * @return Return the impulse vector.</body>
            </ownedComment>
            <ownedParameter xmi:id="_EU0dgcFJEei0Sok_Gsjhng" name="lSource" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU0dgsFJEei0Sok_Gsjhng" name="vSource" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU0dg8FJEei0Sok_Gsjhng" name="lTarget" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU0dhMFJEei0Sok_Gsjhng" name="vTarget" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU0dhcFJEei0Sok_Gsjhng" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU0dhsFJEei0Sok_Gsjhng" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU0dh8FJEei0Sok_Gsjhng" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU0diMFJEei0Sok_Gsjhng" type="_ESxPEMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EU1EkMFJEei0Sok_Gsjhng" name="updateCollision" visibility="protected" method="_EWsFwMFJEei0Sok_Gsjhng">
            <ownedComment xmi:id="_EW5hJsFJEei0Sok_Gsjhng">
              <body>Updates the velocity of the source ball, given an impulse, then uses the
	 * context's interactWith method to determine the post collision behavior, from the context
	 * ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change
	 * the velocity of the target ball, switch the source and target input
	 * parameters and negate the impulse values.   This will also run the post collision behavior from 
	 * the other perspective.
	 * 
	 * @param context The ball to update
	 * @param target The ball being collided with
	 * @param impX x-coordinate of the impulse
	 * @param impY y-coordinate of the impulse
	 * @param dispatcher The dispatcher</body>
            </ownedComment>
            <ownedParameter xmi:id="_EU1EkcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU1EksFJEei0Sok_Gsjhng" name="target" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU1Ek8FJEei0Sok_Gsjhng" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU1ElMFJEei0Sok_Gsjhng" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU1ElcFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EF2NYMFJEei0Sok_Gsjhng" name="CollideExactStrategy">
          <ownedComment xmi:id="_EW5hJ8FJEei0Sok_Gsjhng">
            <body>A physically correct elastic two-body collision model. 
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <generalization xmi:id="_ES0SYMFJEei0Sok_Gsjhng" general="_EFtqgMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWsFxsFJEei0Sok_Gsjhng" name="updateState" specification="_EU2SsMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWsFx8FJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EWsFyMFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EWsFycFJEei0Sok_Gsjhng" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_EWsFysFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>dispatcher.updateAll(new IBallCmd() {

			@Override
			public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {
				// check if you are receiving your own command 
				if (context != other) {
					double radiusDistance = context.getLocation().distance(other.getLocation());
					// if the balls are overlapping
					if ((context.getRadius() + other.getRadius()) > radiusDistance) {

						// The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a 
						// * positive value. This is the amount of overlap of the balls as measured along the line between their centers.
						double deltaR = (context.getRadius() + other.getRadius()) - (radiusDistance);
						
						double collisionTime = collisionTime(context.getLocation(), other.getLocation(), context.getVelocity(), other.getVelocity(), context.getRadius() + other.getRadius());
						
						if (-1.0 &lt;= collisionTime &amp;&amp; collisionTime &lt;= 0) {
								
							// Calculate the reduced mass of the two-ball system using the square of the radius as the mass of the ball (mass is proportional to the size of the ball).
							double rm = reducedMass(Math.pow(context.getRadius(), 2), Math.pow(other.getRadius(), 2));
							
							// Use the reduced mass and other parameters to calculate the impulse of the collision. The position of the source ball will be &quot;nudged&quot; out of collision distance during this calculation.
							Point2D.Double imp = impulse(context.getLocation(), context.getVelocity(), other.getLocation(), other.getVelocity(), rm, radiusDistance, deltaR);
													
							// Update the velocities of each ball by taking the impulse divided by the mass (square of the radius) and call its post-collision 
							// interaction behavior (the interactWith method of the Ball).   
							// Note that the same method can be used to update either the source or target balls simply by switching the parameters and negating the impulse.    
							// Careful here! This is simpler than it looks! Use all the resources available to you!
							updateCollision(context, other, imp.x, imp.y, disp, collisionTime);
							updateCollision(other, context, -imp.x, -imp.y, disp, collisionTime);
						}
					}
				}
			}
		});
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWsFy8FJEei0Sok_Gsjhng" name="collisionTime" specification="_EU4H4MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWsFzMFJEei0Sok_Gsjhng" name="x1" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWsFzcFJEei0Sok_Gsjhng" name="x2" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWsFzsFJEei0Sok_Gsjhng" name="v1" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWsFz8FJEei0Sok_Gsjhng" name="v2" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWsF0MFJEei0Sok_Gsjhng" name="minSeparation">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWsF0cFJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>Point deltaX = deltaP(x1, x2);
		Point deltaV = deltaP(v1, v2);
		double deltaX2 = deltaX.distanceSq(0.0, 0.0);
		double deltaV2 = deltaV.distanceSq(0.0, 0.0);
		double R2 = minSeparation*minSeparation;
		double dvdx = deltaV.x * deltaX.x + deltaV.y + deltaX.y;

		double root2 = dvdx * dvdx - deltaV2 * (deltaX2 - R2);

		if (root2 &lt; 0.0)
			return Double.MAX_VALUE;   // no solution for t

		double t = (-dvdx - Math.sqrt(root2)) / deltaV2;   // want most negative time solution, i.e. first contact

		return t;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWtT4MFJEei0Sok_Gsjhng" name="deltaP" specification="_EU5WAMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWtT4cFJEei0Sok_Gsjhng" name="p1" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWtT4sFJEei0Sok_Gsjhng" name="p2" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWtT48FJEei0Sok_Gsjhng" type="_ERdngsFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>return new Point(p2.x - p1.x, p2.y - p1.y);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWtT5MFJEei0Sok_Gsjhng" name="reducedMass" specification="_EF4CkMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWtT5cFJEei0Sok_Gsjhng" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWtT5sFJEei0Sok_Gsjhng" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWtT58FJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (mSource == Double.POSITIVE_INFINITY)
			return mTarget;
		if (mTarget == Double.POSITIVE_INFINITY)
			return mSource;
		else
			return (mSource * mTarget) / (mSource + mTarget);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWtT6MFJEei0Sok_Gsjhng" name="impulse" specification="_EU6kIMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWtT6cFJEei0Sok_Gsjhng" name="lSource" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWtT6sFJEei0Sok_Gsjhng" name="vSource" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWtT68FJEei0Sok_Gsjhng" name="lTarget" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWtT7MFJEei0Sok_Gsjhng" name="vTarget" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWtT7cFJEei0Sok_Gsjhng" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWtT7sFJEei0Sok_Gsjhng" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWtT78FJEei0Sok_Gsjhng" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWtT8MFJEei0Sok_Gsjhng" type="_ESxPEMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>// Calculate the normal vector, from source to target
		double nx = ((double) (lTarget.x - lSource.x)) / distance;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;

		// delta velocity (speed, actually) in normal direction, source to target
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

		return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0 * reducedMass * dvn * ny);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWt68MFJEei0Sok_Gsjhng" name="updateCollision" specification="_EU7LMMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWt68cFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWt68sFJEei0Sok_Gsjhng" name="target" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWt688FJEei0Sok_Gsjhng" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWt69MFJEei0Sok_Gsjhng" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWt69cFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWt69sFJEei0Sok_Gsjhng" name="tContact">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>int mContext = context.getRadius() * context.getRadius();

		double dx = context.getVelocity().x * tContact;
		double dy = context.getVelocity().y * tContact;
		
		context.getVelocity().translate((int) Math.round(impX / mContext),(int) Math.round(impY / mContext));
		dx += -context.getVelocity().x * tContact;
		dy += -context.getVelocity().y * tContact;
		context.getLocation().translate((int)Math.round(dx), (int)Math.round(dy));

		context.interactWith(target, dispatcher, true);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EF4CkMFJEei0Sok_Gsjhng" name="reducedMass" visibility="protected" method="_EWtT5MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EF4CkcFJEei0Sok_Gsjhng" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EF4CksFJEei0Sok_Gsjhng" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EF4Ck8FJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_EU2SsMFJEei0Sok_Gsjhng" name="updateState" method="_EWsFxsFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EU2SscFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EU25wsFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EU25w8FJEei0Sok_Gsjhng" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_EU25wMFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EU4H4MFJEei0Sok_Gsjhng" name="collisionTime" visibility="private" method="_EWsFy8FJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EU4H4cFJEei0Sok_Gsjhng" name="x1" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU4u8MFJEei0Sok_Gsjhng" name="x2" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU4u8cFJEei0Sok_Gsjhng" name="v1" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU4u8sFJEei0Sok_Gsjhng" name="v2" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU4u88FJEei0Sok_Gsjhng" name="minSeparation">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU4u9MFJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_EU5WAMFJEei0Sok_Gsjhng" name="deltaP" visibility="private" method="_EWtT4MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EU5WAcFJEei0Sok_Gsjhng" name="p1" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU59EMFJEei0Sok_Gsjhng" name="p2" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU59EcFJEei0Sok_Gsjhng" type="_ERdngsFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EU6kIMFJEei0Sok_Gsjhng" name="impulse" visibility="protected" method="_EWtT6MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EU6kIcFJEei0Sok_Gsjhng" name="lSource" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU6kIsFJEei0Sok_Gsjhng" name="vSource" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU6kI8FJEei0Sok_Gsjhng" name="lTarget" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU6kJMFJEei0Sok_Gsjhng" name="vTarget" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU6kJcFJEei0Sok_Gsjhng" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU6kJsFJEei0Sok_Gsjhng" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU6kJ8FJEei0Sok_Gsjhng" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU6kKMFJEei0Sok_Gsjhng" type="_ESxPEMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EU7LMMFJEei0Sok_Gsjhng" name="updateCollision" visibility="protected" method="_EWt68MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EU7yQMFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU7yQcFJEei0Sok_Gsjhng" name="target" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU7yQsFJEei0Sok_Gsjhng" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU7yQ8FJEei0Sok_Gsjhng" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU7yRMFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU7yRcFJEei0Sok_Gsjhng" name="tContact">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EF8UAMFJEei0Sok_Gsjhng" name="CollideStrategy">
          <ownedComment xmi:id="_EW5hKMFJEei0Sok_Gsjhng">
            <body>Collide Strategy Class.
@author Peter, Rocky</body>
          </ownedComment>
          <generalization xmi:id="_ES38wMFJEei0Sok_Gsjhng" general="_EFtqgMFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EWJ6QcFJEei0Sok_Gsjhng" name="nudge" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWKhUMFJEei0Sok_Gsjhng" value="1.1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWt698FJEei0Sok_Gsjhng" name="updateState" specification="_EU9AYMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWt6-MFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EWt6-cFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EWt6-sFJEei0Sok_Gsjhng" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_EWt6-8FJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>dispatcher.updateAll(new IBallCmd() {

			@Override
			public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {
				// check if you are receiving your own command 
				if (context != other) {
					double radiusDistance = context.getLocation().distance(other.getLocation());
					// if the balls are overlapping
					if ((context.getRadius() + other.getRadius()) > radiusDistance) {
						// Calculate the reduced mass of the two-ball system using the square of the radius as the mass of the ball (mass is proportional to the size of the ball).
						double rm = reducedMass(Math.pow(context.getRadius(), 2), Math.pow(other.getRadius(), 2));
						
						// The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a 
						// * positive value. This is the amount of overlap of the balls as measured along the line between their centers.
						double deltaR = (context.getRadius() + other.getRadius()) - (radiusDistance);
						
						// Use the reduced mass and other parameters to calculate the impulse of the collision. The position of the source ball will be &quot;nudged&quot; out of collision distance during this calculation.
						Point2D.Double imp = impulse(context.getLocation(), context.getVelocity(), other.getLocation(), other.getVelocity(), rm, radiusDistance, deltaR);
						
						// Update the velocities of each ball by taking the impulse divided by the mass (square of the radius) and call its post-collision 
						// interaction behavior (the interactWith method of the Ball).   
						// Note that the same method can be used to update either the source or target balls simply by switching the parameters and negating the impulse.    
						// Careful here! This is simpler than it looks! Use all the resources available to you!
						updateCollision(context, other, imp.x, imp.y, disp);
						updateCollision(other, context, -imp.x, -imp.y, disp);
					}
				}
			}
		});
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWt6_MFJEei0Sok_Gsjhng" name="reducedMass" specification="_EF9iIMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWt6_cFJEei0Sok_Gsjhng" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWt6_sFJEei0Sok_Gsjhng" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWt6_8FJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (mSource == Double.POSITIVE_INFINITY)
			return mTarget;
		if (mTarget == Double.POSITIVE_INFINITY)
			return mSource;
		else
			return (mSource * mTarget) / (mSource + mTarget);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWuiAMFJEei0Sok_Gsjhng" name="impulse" specification="_EU-1kMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWuiAcFJEei0Sok_Gsjhng" name="lSource" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWuiAsFJEei0Sok_Gsjhng" name="vSource" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWuiA8FJEei0Sok_Gsjhng" name="lTarget" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWuiBMFJEei0Sok_Gsjhng" name="vTarget" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWuiBcFJEei0Sok_Gsjhng" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWuiBsFJEei0Sok_Gsjhng" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWuiB8FJEei0Sok_Gsjhng" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWuiCMFJEei0Sok_Gsjhng" type="_ESxPEMFJEei0Sok_Gsjhng" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>// Calculate the normal vector, from source to target
		double nx = ((double) (lTarget.x - lSource.x)) / distance;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;

		// delta velocity (speed, actually) in normal direction, source to target
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

		// move the source ball beyond collision range of the target ball, along the normal direction.
		lSource.translate((int) Math.ceil(-nx * (nudge * deltaR)), (int) Math.ceil(-ny * (nudge * deltaR)));

		return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0 * reducedMass * dvn * ny);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWuiCcFJEei0Sok_Gsjhng" name="updateCollision" specification="_EVADsMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWuiCsFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWuiC8FJEei0Sok_Gsjhng" name="target" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWuiDMFJEei0Sok_Gsjhng" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWuiDcFJEei0Sok_Gsjhng" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWuiDsFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>int mContext = context.getRadius() * context.getRadius();

		context.getVelocity().translate((int) Math.round(impX / mContext),(int) Math.round(impY / mContext));
		context.interactWith(target, dispatcher, true);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EF9iIMFJEei0Sok_Gsjhng" name="reducedMass" visibility="protected" method="_EWt6_MFJEei0Sok_Gsjhng">
            <ownedComment xmi:id="_EW5hKcFJEei0Sok_Gsjhng">
              <body>Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
	 * result if one of the balls has infinite mass.
	 * @param mSource Mass of the source ball.
	 * @param mTarget Mass of the target ball.
	 * @return The reduced mass of the two balls (m1*m2)/(m1+m2).</body>
            </ownedComment>
            <ownedParameter xmi:id="_EF9iIcFJEei0Sok_Gsjhng" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EF9iIsFJEei0Sok_Gsjhng" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EF9iI8FJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_EU9AYMFJEei0Sok_Gsjhng" name="updateState" method="_EWt698FJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EU9ncMFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EU-OgMFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EU-OgcFJEei0Sok_Gsjhng" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_EU9nccFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EU-1kMFJEei0Sok_Gsjhng" name="impulse" visibility="protected" method="_EWuiAMFJEei0Sok_Gsjhng">
            <ownedComment xmi:id="_EW5hKsFJEei0Sok_Gsjhng">
              <body>Calculates the impulse (change in momentum) of the collision in the
	 * direction from the source to the target This method calculates the
	 * impulse on the source ball. The impulse on the target ball is the
	 * negative of the result. Also moves source ball out of collision range
	 * along normal direction. The change in velocity of the source ball is the
	 * impulse divided by the source's mass The change in velocity of the target
	 * ball is the negative of the impulse divided by the target's mass
	 * 
	 * Operational note: Even though theoretically, the difference in velocities
	 * of two balls should be co-linear with the normal line between them, the
	 * discrete nature of animations means that the point where collision is
	 * detected may not be at the same point as the theoretical contact point.
	 * This method calculates the rebound directions as if the two balls were
	 * the appropriate radii such that they had just contacted
	 * _at_the_point_of_collision_detection_. This may give slightly different
	 * rebound direction than one would calculate if they contacted at the
	 * theoretical point given by their actual radii.
	 * 
	 * @param lSource Location of the source ball
	 * @param vSource Velocity of the source ball
	 * @param lTarget Location of the target ball
	 * @param vTarget Velocity of the target ball
	 * @param reducedMass Reduced mass of the two balls
	 * @param distance Distance between the two balls.
	 * @param deltaR The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a
	 * positive value. This is the amount of overlap of the balls as measured along the line between their centers.
	 * @return Return the impulse vector.</body>
            </ownedComment>
            <ownedParameter xmi:id="_EU-1kcFJEei0Sok_Gsjhng" name="lSource" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU-1ksFJEei0Sok_Gsjhng" name="vSource" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU-1k8FJEei0Sok_Gsjhng" name="lTarget" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU_coMFJEei0Sok_Gsjhng" name="vTarget" type="_ERdngsFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EU_cocFJEei0Sok_Gsjhng" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU_cosFJEei0Sok_Gsjhng" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU_co8FJEei0Sok_Gsjhng" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EU_cpMFJEei0Sok_Gsjhng" type="_ESxPEMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVADsMFJEei0Sok_Gsjhng" name="updateCollision" visibility="protected" method="_EWuiCcFJEei0Sok_Gsjhng">
            <ownedComment xmi:id="_EW5hK8FJEei0Sok_Gsjhng">
              <body>Updates the velocity of the source ball, given an impulse, then uses the
	 * context's interactWith method to determine the post collision behavior, from the context
	 * ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change
	 * the velocity of the target ball, switch the source and target input
	 * parameters and negate the impulse values.   This will also run the post collision behavior from 
	 * the other perspective.
	 * 
	 * @param context The ball to update
	 * @param target The ball being collided with
	 * @param impX x-coordinate of the impulse
	 * @param impY y-coordinate of the impulse
	 * @param dispatcher The dispatcher</body>
            </ownedComment>
            <ownedParameter xmi:id="_EVADscFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVADssFJEei0Sok_Gsjhng" name="target" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVADs8FJEei0Sok_Gsjhng" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EVADtMFJEei0Sok_Gsjhng" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EVADtcFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGBMgMFJEei0Sok_Gsjhng" name="DelayedOverlapStrategy">
          <ownedComment xmi:id="_EW5hLMFJEei0Sok_Gsjhng">
            <body>Detects if the ball overlaps with any other balls on a delayed timer cycle.
NOTE: This strategy defines a  &quot;criteria for interaction&quot;. The interaction behavior is delegated to the
interactWith methods of the individual balls.
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <generalization xmi:id="_ES7AEMFJEei0Sok_Gsjhng" general="_EFtqgMFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EWKhUsFJEei0Sok_Gsjhng" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWLIYMFJEei0Sok_Gsjhng" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_EWLIYsFJEei0Sok_Gsjhng" name="delay" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWLIY8FJEei0Sok_Gsjhng" value="15"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWvJEMFJEei0Sok_Gsjhng" name="updateState" specification="_EVBR0MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWvJEcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWvJEsFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>if (count++ > delay) { // evaluates count > delay then increments count
			// send a command to all balls
			dispatcher.updateAll((other, disp) -> {
				// check if you are receiving your own command 
				if (context != other) {
					double radiusDistance = context.getLocation().distance(other.getLocation());
					// if the balls are overlapping
					Boolean inContact = (context.getRadius() + other.getRadius()) > radiusDistance; 
					if (inContact) {
						// invoke the interaction strategies of the two interacting balls 
						context.interactWith(other, dispatcher, true);
						other.interactWith(context, dispatcher, false); 
					}
					count = 0;
				}
			});
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EVBR0MFJEei0Sok_Gsjhng" name="updateState" method="_EWvJEMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVBR0cFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVBR0sFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGDBsMFJEei0Sok_Gsjhng" name="EatStrategy">
          <ownedComment xmi:id="_EW6IMMFJEei0Sok_Gsjhng">
            <body>Kills whomever the ball collides with and increases its area by the killed ball's area.
NOTE: This strategy only installs a &quot;post-collision interaction behavior&quot; and thus at least needs 
to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send. 
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_ES8OMMFJEei0Sok_Gsjhng" client="_EGDBsMFJEei0Sok_Gsjhng" supplier="_EEHIAMFJEei0Sok_Gsjhng" contract="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWvJE8FJEei0Sok_Gsjhng" name="init" specification="_ES81QcFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWvJFMFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>context.setInteractStrategy(
				new MultiInteractStrategy(
						context.getInteractStrategy(), 
						(contextBall, otherBall, disp, interactFirst) -> {
							// Calculate the radius of the ball needed to increase the area by the killed balls area
							double otherArea = Math.PI * otherBall.getRadius() * otherBall.getRadius();
							double thisArea = Math.PI * contextBall.getRadius() * contextBall.getRadius();				
							double desiredArea = otherArea + thisArea;
							double desiredRadius = Math.sqrt(desiredArea / Math.PI);
															
							// Kill the other ball and increase the context ball's radius 
							disp.removeObserver(otherBall);
							contextBall.setRadius((int) Math.round(desiredRadius));
						}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ES81QcFJEei0Sok_Gsjhng" name="init" method="_EWvJE8FJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ES81QsFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVDHAMFJEei0Sok_Gsjhng" name="updateState">
            <ownedParameter xmi:id="_EVDHAcFJEei0Sok_Gsjhng" name="b" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVDHAsFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGGFAMFJEei0Sok_Gsjhng" name="FlashStrategy">
          <ownedComment xmi:id="_EW6IMcFJEei0Sok_Gsjhng">
            <body>Strategy that only installs an interaction strategy and thus at least needs to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
Takes the color of other ball. 
NOTE 1: This strategy only installs a &quot;post-collision interaction behavior&quot; and thus at least needs 
to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
NOTE 2: The frequency that a ball flashes increases proportionally to the number of balls that it meets a &quot;criteria of interaction&quot; with.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.   
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_EWLvccFJEei0Sok_Gsjhng" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWLvcsFJEei0Sok_Gsjhng" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_EWMWgcFJEei0Sok_Gsjhng" name="delay" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWMWgsFJEei0Sok_Gsjhng" value="40"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_EWM9kMFJEei0Sok_Gsjhng" name="originalColor" visibility="package" type="_ERcZYMFJEei0Sok_Gsjhng" association="_EXev88FJEei0Sok_Gsjhng"/>
          <interfaceRealization xmi:id="_ES-DYMFJEei0Sok_Gsjhng" client="_EGGFAMFJEei0Sok_Gsjhng" supplier="_EEHIAMFJEei0Sok_Gsjhng" contract="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWvJFcFJEei0Sok_Gsjhng" name="init" specification="_ES-qcMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWvJFsFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>originalColor = context.getColor();
		
		context.setInteractStrategy(
				new MultiInteractStrategy(
						context.getInteractStrategy(), 			
						(contextBall, otherBall, disp,interactFirst) -> {							
							if (count &lt; delay) {
								if (count &lt; (delay / 2))
									contextBall.setColor(Color.RED);
								else
									contextBall.setColor(originalColor);
								count++;
							} else {
								count = 0;
							}
						}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ES-qcMFJEei0Sok_Gsjhng" name="init" method="_EWvJFcFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ES-qccFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVE8MMFJEei0Sok_Gsjhng" name="updateState">
            <ownedParameter xmi:id="_EVE8McFJEei0Sok_Gsjhng" name="b" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVE8MsFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGMLoMFJEei0Sok_Gsjhng" name="GravityStrategy">
          <ownedComment xmi:id="_EW6IMsFJEei0Sok_Gsjhng">
            <body>This strategy causes a ball to fall to the bottom and bounce.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_ETBtwMFJEei0Sok_Gsjhng" general="_EFtqgMFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EWNkoMFJEei0Sok_Gsjhng" name="max" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWNkocFJEei0Sok_Gsjhng" value="30"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_EWOLscFJEei0Sok_Gsjhng" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWOLssFJEei0Sok_Gsjhng" value="max"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_EWOywcFJEei0Sok_Gsjhng" name="firstUpdate" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <qualifier xmi:id="_EWQn8MFJEei0Sok_Gsjhng" type="_EWPZ0cFJEei0Sok_Gsjhng"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWOywsFJEei0Sok_Gsjhng" value="new HashMap&lt;Ball, Boolean>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWvJF8FJEei0Sok_Gsjhng" name="updateState" specification="_EVGKUMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWvJGMFJEei0Sok_Gsjhng" name="b" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWvJGcFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>if (!firstUpdate.containsKey(b) || firstUpdate.get(b) == false) {
			if (b.getVelocity().y == 0) {
				b.setVelocity(new Point(0, 1));
			}
			b.setVelocity(new Point(0, Math.abs(b.getVelocity().y)));
		}
		firstUpdate.putIfAbsent(b, true);

		if (b.getVelocity().y &lt; 0) {
			if (0 > count) {
				b.setVelocity(new Point(0, -b.getVelocity().y));
				count = max;
			} else {
				count--;
			}
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EVGKUMFJEei0Sok_Gsjhng" name="updateState" method="_EWvJF8FJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVGKUcFJEei0Sok_Gsjhng" name="b" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVGKUsFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGTgYMFJEei0Sok_Gsjhng" name="GrowStrategy">
          <ownedComment xmi:id="_EW6IM8FJEei0Sok_Gsjhng">
            <body>An update strategy that increases the radius to a certain point.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.</body>
          </ownedComment>
          <generalization xmi:id="_ETFYIMFJEei0Sok_Gsjhng" general="_EFtqgMFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EWQn8cFJEei0Sok_Gsjhng" name="firstUpdate" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <qualifier xmi:id="_EWR2EMFJEei0Sok_Gsjhng" type="_EWPZ0cFJEei0Sok_Gsjhng"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWRPAMFJEei0Sok_Gsjhng" value="new HashMap&lt;Ball, Boolean>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWvwIMFJEei0Sok_Gsjhng" name="updateState" specification="_EVH_gMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWvwIcFJEei0Sok_Gsjhng" name="b" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWvwIsFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>if (!firstUpdate.containsKey(b) || firstUpdate.get(b) == false)
			b.setRadius(2);
		firstUpdate.putIfAbsent(b, true);

		// If the ball hasn't reached its max size, grow it.
		if (b.getRadius() &lt; 100) {
			b.setRadius(b.getRadius() + 1);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EVH_gMFJEei0Sok_Gsjhng" name="updateState" method="_EWvwIMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVH_gcFJEei0Sok_Gsjhng" name="b" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVH_gsFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGWjsMFJEei0Sok_Gsjhng" name="KillStrategy">
          <ownedComment xmi:id="_EW6INMFJEei0Sok_Gsjhng">
            <body>Deletes other when it collides.
NOTE: This strategy only installs a &quot;post-collision interaction behavior&quot; and thus at least needs 
to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send. 
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_ETGmQMFJEei0Sok_Gsjhng" client="_EGWjsMFJEei0Sok_Gsjhng" supplier="_EEHIAMFJEei0Sok_Gsjhng" contract="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWwXMMFJEei0Sok_Gsjhng" name="init" specification="_ETHNUcFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWwXMcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>context.setInteractStrategy(
				new MultiInteractStrategy(
						context.getInteractStrategy(), 
						(contextBall, targetBall, disp, interactFirst) -> disp.removeObserver(targetBall)));		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ETHNUcFJEei0Sok_Gsjhng" name="init" method="_EWwXMMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ETHNUsFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVJ0sMFJEei0Sok_Gsjhng" name="updateState">
            <ownedParameter xmi:id="_EVJ0scFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVJ0ssFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGfGkMFJEei0Sok_Gsjhng" name="MultiInteractStrategy">
          <ownedComment xmi:id="_EW6INcFJEei0Sok_Gsjhng">
            <body>An interact strategy that combines two interact strategies.
@author Peter</body>
          </ownedComment>
          <ownedAttribute xmi:id="_EWR2EcFJEei0Sok_Gsjhng" name="interactStrategy1" visibility="private" type="_EDpN8MFJEei0Sok_Gsjhng" association="_EXfXAcFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EWSdIcFJEei0Sok_Gsjhng" name="interactStrategy2" visibility="private" type="_EDpN8MFJEei0Sok_Gsjhng" association="_EXf-EcFJEei0Sok_Gsjhng"/>
          <interfaceRealization xmi:id="_ETIbcMFJEei0Sok_Gsjhng" client="_EGfGkMFJEei0Sok_Gsjhng" supplier="_EDpN8MFJEei0Sok_Gsjhng" contract="_EDpN8MFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWwXMsFJEei0Sok_Gsjhng" name="MultiInteractStrategy" specification="_ETIbccFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWwXM8FJEei0Sok_Gsjhng" name="interactStrategy1" type="_EDpN8MFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWwXNMFJEei0Sok_Gsjhng" name="interactStrategy2" type="_EDpN8MFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWwXNcFJEei0Sok_Gsjhng" type="_EGfGkMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>this.interactStrategy1 = interactStrategy1;
		this.interactStrategy2 = interactStrategy2;		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWwXNsFJEei0Sok_Gsjhng" name="interact" specification="_EVLp4MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWwXN8FJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWwXOMFJEei0Sok_Gsjhng" name="target" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWwXOcFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWwXOsFJEei0Sok_Gsjhng" name="isSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>interactStrategy1.interact(context, target, disp, isSource);
		interactStrategy2.interact(context, target, disp, isSource);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ETIbccFJEei0Sok_Gsjhng" name="MultiInteractStrategy" method="_EWwXMsFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_ETJCgsFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ETJCg8FJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_EW6INsFJEei0Sok_Gsjhng">
              <body>Create a new MultiInteractStrategy.
	 * @param interactStrategy1 The first interaction strategy.
	 * @param interactStrategy2 The second interaction strategy.</body>
            </ownedComment>
            <ownedParameter xmi:id="_ETJCgMFJEei0Sok_Gsjhng" name="interactStrategy1" type="_EDpN8MFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_ETJCgcFJEei0Sok_Gsjhng" name="interactStrategy2" type="_EDpN8MFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_ETJChMFJEei0Sok_Gsjhng" type="_EGfGkMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVLp4MFJEei0Sok_Gsjhng" name="interact" method="_EWwXNsFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVLp4cFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVLp4sFJEei0Sok_Gsjhng" name="target" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVLp48FJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVLp5MFJEei0Sok_Gsjhng" name="isSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGiw8MFJEei0Sok_Gsjhng" name="MultiStrategy">
          <ownedComment xmi:id="_EW6IN8FJEei0Sok_Gsjhng">
            <body>An update strategy that combines two update strategies.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter</body>
          </ownedComment>
          <ownedAttribute xmi:id="_EWSdI8FJEei0Sok_Gsjhng" name="s1" visibility="private" type="_EEHIAMFJEei0Sok_Gsjhng" association="_EXglIcFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EWTEMsFJEei0Sok_Gsjhng" name="s2" visibility="private" type="_EEHIAMFJEei0Sok_Gsjhng" association="_EXhMMMFJEei0Sok_Gsjhng"/>
          <interfaceRealization xmi:id="_ETK3sMFJEei0Sok_Gsjhng" client="_EGiw8MFJEei0Sok_Gsjhng" supplier="_EEHIAMFJEei0Sok_Gsjhng" contract="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWwXO8FJEei0Sok_Gsjhng" name="MultiStrategy" specification="_ETMF0MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWwXPMFJEei0Sok_Gsjhng" name="s1" type="_EEHIAMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWwXPcFJEei0Sok_Gsjhng" name="s2" type="_EEHIAMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWwXPsFJEei0Sok_Gsjhng" type="_EGiw8MFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>this.s1 = s1;
		this.s2 = s2;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWw-QMFJEei0Sok_Gsjhng" name="updateState" specification="_EVNfEMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWw-QcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWw-QsFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>s1.updateState(context, disp);
		s2.updateState(context, disp);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWw-Q8FJEei0Sok_Gsjhng" name="init" specification="_ETN7AMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWw-RMFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>s1.init(host);
		s2.init(host);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ETMF0MFJEei0Sok_Gsjhng" name="MultiStrategy" method="_EWwXO8FJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_ETMF08FJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ETMF1MFJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_EW6vQMFJEei0Sok_Gsjhng">
              <body>Creates a new MultiStrategy.
	 * @param s1 The first update strategy.
	 * @param s2 The second update strategy.</body>
            </ownedComment>
            <ownedParameter xmi:id="_ETMF0cFJEei0Sok_Gsjhng" name="s1" type="_EEHIAMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_ETMF0sFJEei0Sok_Gsjhng" name="s2" type="_EEHIAMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_ETMF1cFJEei0Sok_Gsjhng" type="_EGiw8MFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ETN7AMFJEei0Sok_Gsjhng" name="init" method="_EWw-Q8FJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ETN7AcFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVNfEMFJEei0Sok_Gsjhng" name="updateState" method="_EWw-QMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVNfEcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVNfEsFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGnCYMFJEei0Sok_Gsjhng" name="OverlapStrategy">
          <ownedComment xmi:id="_EW7WUMFJEei0Sok_Gsjhng">
            <body>Detects if the ball overlaps with any other balls. Does not detect an overlap between a ball and its most recently overlapped ball!
NOTE: This strategy defines a  &quot;criteria for interaction&quot;. The interaction behavior is delegated to the
interactWith methods of the individual balls.
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_ETPJIMFJEei0Sok_Gsjhng" client="_EGnCYMFJEei0Sok_Gsjhng" supplier="_EEHIAMFJEei0Sok_Gsjhng" contract="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWw-RcFJEei0Sok_Gsjhng" name="init" specification="_ETQXQMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWw-RsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>host.setPrevInteraction(host);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWw-R8FJEei0Sok_Gsjhng" name="updateState" specification="_EVPUQMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWw-SMFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWw-ScFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>dispatcher.updateAll((other, disp) -> {

			// check if you are receiving your own command 
			if (context != other) {
				double radiusDistance = context.getLocation().distance(other.getLocation());
				Boolean isOverlapping = context.getRadius() + other.getRadius() > radiusDistance; 
				
				// if the balls are overlapping
				if (isOverlapping) {
					
					// if the other ball isn't the most recent ball that the context ball interacted with 
					if (context.getPrevInteraction() != other) {
						// invoke the interaction strategies of the two interacting balls 
						context.interactWith(other, dispatcher, true);
						other.interactWith(context, dispatcher, false);

						// set the previous interaction fields of each ball 
						context.setPrevInteraction(other);
						other.setPrevInteraction(context);
					}
				}
			}
		});
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ETQXQMFJEei0Sok_Gsjhng" name="init" method="_EWw-RcFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ETQXQcFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVPUQMFJEei0Sok_Gsjhng" name="updateState" method="_EWw-R8FJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVPUQcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVPUQsFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGo3kMFJEei0Sok_Gsjhng" name="ShrinkStrategy">
          <ownedComment xmi:id="_EW7WUcFJEei0Sok_Gsjhng">
            <body>An update strategy that shrinks the radius to a certain size.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_ETRlYMFJEei0Sok_Gsjhng" general="_EFtqgMFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EWTrQsFJEei0Sok_Gsjhng" name="firstUpdate" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <qualifier xmi:id="_EWU5YMFJEei0Sok_Gsjhng" type="_EWPZ0cFJEei0Sok_Gsjhng"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWUSUMFJEei0Sok_Gsjhng" value="new HashMap&lt;Ball, Boolean>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWw-SsFJEei0Sok_Gsjhng" name="updateState" specification="_EVQiYsFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWw-S8FJEei0Sok_Gsjhng" name="b" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWw-TMFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>if (!firstUpdate.containsKey(b) || firstUpdate.get(b) == false)
			b.setRadius(100);
		firstUpdate.putIfAbsent(b, true);

		if (b.getRadius() > 10) {
			b.setRadius(b.getRadius() - 1);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EVQiYsFJEei0Sok_Gsjhng" name="updateState" method="_EWw-SsFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVSXkMFJEei0Sok_Gsjhng" name="b" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVSXkcFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGrT0MFJEei0Sok_Gsjhng" name="SimilarColorStrategy">
          <ownedComment xmi:id="_EW7WUsFJEei0Sok_Gsjhng">
            <body>Detects if the ball has a similar color to that of any other ball.
NOTE: This strategy defines a  &quot;criteria for interaction&quot;. The interaction behavior is delegated to the
interactWith methods of the individual balls. 
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_ETUBoMFJEei0Sok_Gsjhng" client="_EGrT0MFJEei0Sok_Gsjhng" supplier="_EEHIAMFJEei0Sok_Gsjhng" contract="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWw-TcFJEei0Sok_Gsjhng" name="init" specification="_ETVPwMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWw-TsFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>context.setPrevInteraction(context);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWw-T8FJEei0Sok_Gsjhng" name="updateState" specification="_EVUMwMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWw-UMFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWw-UcFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>dispatcher.updateAll((other, disp) -> {
			// check if you are receiving your own command 
			if (context != other) {
				Color c1 = context.getColor();
				Color c2 = other.getColor();
				
				if (areSimilarColors(c1, c2)) {
					// invoke the interaction strategies of the two interacting balls 
					context.interactWith(other, dispatcher, true);
					other.interactWith(context, dispatcher, false);
				}
			}
		});
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWw-UsFJEei0Sok_Gsjhng" name="colorDifference" specification="_EVWB8MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWw-U8FJEei0Sok_Gsjhng" name="c1" type="_ERcZYMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWw-VMFJEei0Sok_Gsjhng" name="c2" type="_ERcZYMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWw-VcFJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>double rBar = (c1.getRed() + c2.getRed()) / 2.0;
		double deltaR = c1.getRed() - c2.getRed();
		double deltaG = c1.getGreen() - c2.getGreen();
		double deltaB = c1.getBlue() - c2.getBlue();
		double fac = (rBar * (Math.pow(deltaR, 2) - Math.pow(deltaB, 2))) / 256.0;
		
		return Math.sqrt(2 * Math.pow(deltaR, 2) + 4 * Math.pow(deltaG, 2) + 3 * Math.pow(deltaB, 2) + fac);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWxlUMFJEei0Sok_Gsjhng" name="areSimilarColors" specification="_EVWpAMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWxlUcFJEei0Sok_Gsjhng" name="c1" type="_ERcZYMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWxlUsFJEei0Sok_Gsjhng" name="c2" type="_ERcZYMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWxlU8FJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return colorDifference(c1, c2) &lt; 200.0;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ETVPwMFJEei0Sok_Gsjhng" name="init" method="_EWw-TcFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ETVPwcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVUMwMFJEei0Sok_Gsjhng" name="updateState" method="_EWw-T8FJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVUMwcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVUMwsFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVWB8MFJEei0Sok_Gsjhng" name="colorDifference" visibility="private" method="_EWw-UsFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVWB8cFJEei0Sok_Gsjhng" name="c1" type="_ERcZYMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVWB8sFJEei0Sok_Gsjhng" name="c2" type="_ERcZYMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVWB88FJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_EVWpAMFJEei0Sok_Gsjhng" name="areSimilarColors" visibility="private" method="_EWxlUMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVWpAcFJEei0Sok_Gsjhng" name="c1" type="_ERcZYMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVWpAsFJEei0Sok_Gsjhng" name="c2" type="_ERcZYMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVXQEMFJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGu-MMFJEei0Sok_Gsjhng" name="SpawnStrategy">
          <ownedComment xmi:id="_EW79YMFJEei0Sok_Gsjhng">
            <body>Strategy that both collides and interacts.
Adds an identical ball whenever it overlaps with another ball.
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <generalization xmi:id="_ETXE8MFJEei0Sok_Gsjhng" general="_EFtqgMFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EWU5YcFJEei0Sok_Gsjhng" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWU5YsFJEei0Sok_Gsjhng" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_EWVgccFJEei0Sok_Gsjhng" name="delay" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWVgcsFJEei0Sok_Gsjhng" value="100"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWxlVMFJEei0Sok_Gsjhng" name="updateState" specification="_EVX3IMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWxlVcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EWxlVsFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EWxlV8FJEei0Sok_Gsjhng" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_EWxlWMFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>if (delay &lt; count++) { 
			dispatcher.updateAll(new IBallCmd() {

				@Override
				public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {
					// check if you are receiving your own command 
					if (count != 0 &amp;&amp; context != other) {
						// if the balls are overlapping
						if ((context.getRadius() + other.getRadius()) > context.getLocation().distance(other.getLocation())) {
							// create a copy of the original ball but with a different velocity and a new spawn strategy
							disp.addObserver(new Ball(
									new Point(context.getLocation()),
									context.getRadius(), 
									new Point(-context.getVelocity().x + 1, -context.getVelocity().y + 1),
									context.getColor(),
									context.getContainer(), 
									new SpawnStrategy(), 
									context.getPaintStrategy()));
							count = 0;
							delay *= 5;
						}
					}
				}
			});
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EVX3IMFJEei0Sok_Gsjhng" name="updateState" method="_EWxlVMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVX3IcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EVX3JMFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EVYeMMFJEei0Sok_Gsjhng" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_EVX3IsFJEei0Sok_Gsjhng" name="dispatcher" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGxacMFJEei0Sok_Gsjhng" name="StraightStrategy">
          <ownedComment xmi:id="_EW79YcFJEei0Sok_Gsjhng">
            <body>An update strategy that does nothing.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter Dulworth (psd2)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_ETZhMMFJEei0Sok_Gsjhng" client="_EGxacMFJEei0Sok_Gsjhng" supplier="_EEHIAMFJEei0Sok_Gsjhng" contract="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedOperation xmi:id="_ETaIQcFJEei0Sok_Gsjhng" name="init">
            <ownedParameter xmi:id="_ETavUMFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVZsUMFJEei0Sok_Gsjhng" name="updateState">
            <ownedParameter xmi:id="_EVZsUcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVZsUsFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EGz2sMFJEei0Sok_Gsjhng" name="SwapColorStrategy">
          <ownedComment xmi:id="_EW79YsFJEei0Sok_Gsjhng">
            <body>Swaps colors with whatever ball it interacts with.
NOTE: This strategy only installs a &quot;post-collision interaction behavior&quot; and thus at least needs 
to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send. 
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_ETb9cMFJEei0Sok_Gsjhng" client="_EGz2sMFJEei0Sok_Gsjhng" supplier="_EEHIAMFJEei0Sok_Gsjhng" contract="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWxlWcFJEei0Sok_Gsjhng" name="init" specification="_ETdLkMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWxlWsFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>context.setInteractStrategy(
				new MultiInteractStrategy(
						context.getInteractStrategy(), 
						(contextBall, otherBall, disp, interactFirst) -> {
							if (interactFirst) {
								// store the colors of the ball
								Color contextColor = contextBall.getColor();
								Color otherColor = otherBall.getColor();
								
								// swap the colors
								contextBall.setColor(otherColor);
								otherBall.setColor(contextColor);
							}
						}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ETdLkMFJEei0Sok_Gsjhng" name="init" method="_EWxlWcFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ETdLkcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVa6csFJEei0Sok_Gsjhng" name="updateState">
            <ownedParameter xmi:id="_EVa6c8FJEei0Sok_Gsjhng" name="b" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVa6dMFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EG26AMFJEei0Sok_Gsjhng" name="SwitcherStrategy">
          <ownedComment xmi:id="_EW79Y8FJEei0Sok_Gsjhng">
            <body>This class is a wrapper over a single arbitrary strategy which can be changed.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter Dulworth (psd2)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_EWWHgMFJEei0Sok_Gsjhng" name="strategy" visibility="private" type="_EEHIAMFJEei0Sok_Gsjhng" association="_EXhzQMFJEei0Sok_Gsjhng">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWWukcFJEei0Sok_Gsjhng" value="new StraightStrategy&lt;TMsg>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_ETeZsMFJEei0Sok_Gsjhng" client="_EG26AMFJEei0Sok_Gsjhng" supplier="_EEHIAMFJEei0Sok_Gsjhng" contract="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWyMYMFJEei0Sok_Gsjhng" name="updateState" specification="_EVcvoMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWyMYcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWyMYsFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>this.strategy.updateState(context, disp);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWyMY8FJEei0Sok_Gsjhng" name="setStrategy" specification="_ETfn0MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWyMZMFJEei0Sok_Gsjhng" name="newStrategy" type="_EEHIAMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>this.strategy = newStrategy;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWyMZcFJEei0Sok_Gsjhng" name="init" specification="_ETgO4cFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWyMZsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>strategy.init(host);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ETfn0MFJEei0Sok_Gsjhng" name="setStrategy" method="_EWyMY8FJEei0Sok_Gsjhng">
            <ownedComment xmi:id="_EW79ZMFJEei0Sok_Gsjhng">
              <body>@param newStrategy The new strategy to set.</body>
            </ownedComment>
            <ownedParameter xmi:id="_ETfn0cFJEei0Sok_Gsjhng" name="newStrategy" type="_EEHIAMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ETgO4cFJEei0Sok_Gsjhng" name="init" method="_EWyMZcFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ETgO4sFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVcvoMFJEei0Sok_Gsjhng" name="updateState" method="_EWyMYMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVcvocFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVcvosFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EG6kYMFJEei0Sok_Gsjhng" name="TakeColorStrategy">
          <ownedComment xmi:id="_EW79ZcFJEei0Sok_Gsjhng">
            <body>Takes the color of other ball. 
NOTE: This strategy only installs a &quot;post-collision interaction behavior&quot; and thus at least needs 
to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_EThdAMFJEei0Sok_Gsjhng" client="_EG6kYMFJEei0Sok_Gsjhng" supplier="_EEHIAMFJEei0Sok_Gsjhng" contract="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWyMZ8FJEei0Sok_Gsjhng" name="init" specification="_ETirIMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWyMaMFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>context.setInteractStrategy(
				new MultiInteractStrategy(
						context.getInteractStrategy(),
						(contextBall, otherBall, disp, interactFirst) -> {
							contextBall.setColor(otherBall.getColor());
						}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ETirIMFJEei0Sok_Gsjhng" name="init" method="_EWyMZ8FJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ETirIcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EVek0MFJEei0Sok_Gsjhng" name="updateState">
            <ownedParameter xmi:id="_EVek0cFJEei0Sok_Gsjhng" name="b" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVek0sFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EG9AoMFJEei0Sok_Gsjhng" name="TeleportingStrategy">
          <ownedComment xmi:id="_EW79ZsFJEei0Sok_Gsjhng">
            <body>An update strategy that jumps to a random location.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_ETj5QMFJEei0Sok_Gsjhng" general="_EFtqgMFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EWXVocFJEei0Sok_Gsjhng" name="counter" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWXVosFJEei0Sok_Gsjhng" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_EWX8sMFJEei0Sok_Gsjhng" name="teleportPeriod" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWX8scFJEei0Sok_Gsjhng" value="100"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWyMacFJEei0Sok_Gsjhng" name="updateState" specification="_EVfy8cFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWyMasFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWyMa8FJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>counter += 1;
		if (counter % teleportPeriod == 0) {
			Point p = Randomizer.Singleton
					.randomLoc(new Dimension(context.getContainer().getWidth() - (2 * context.getRadius()),
							context.getContainer().getHeight() - (2 * context.getRadius())));
			p.x += context.getRadius(); // move p to the right by r
			p.y += context.getRadius(); // move p down by r
			context.setLocation(p);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EVfy8cFJEei0Sok_Gsjhng" name="updateState" method="_EWyMacFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EVfy8sFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EVfy88FJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EHDHQMFJEei0Sok_Gsjhng" name="ZoneStrategy">
          <ownedComment xmi:id="_EW79Z8FJEei0Sok_Gsjhng">
            <body>An update strategy that sets the color based on which quadrant the location is.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_ETlHYMFJEei0Sok_Gsjhng" general="_EFtqgMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWyzcMFJEei0Sok_Gsjhng" name="updateState" specification="_EVhoIMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWyzccFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWyzcsFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>int x = context.getLocation().x;
		int y = context.getLocation().y;
		int w = context.getContainer().getWidth();
		int h = context.getContainer().getHeight();

		// top left
		if (x > 0 &amp;&amp; x &lt;= w / 2 &amp;&amp; y > 0 &amp;&amp; y &lt;= h / 2) {
			context.setColor(Color.GREEN);
		}

		// bottom left
		if (x > 0 &amp;&amp; x &lt;= w / 2 &amp;&amp; y > h / 2 &amp;&amp; y &lt;= h) {
			context.setColor(Color.BLUE);
		}

		// top right
		if (x > w / 2 &amp;&amp; x &lt;= w &amp;&amp; y > 0 &amp;&amp; y &lt;= h / 2) {
			context.setColor(Color.RED);
		}

		// bottom right
		if (x > w / 2 &amp;&amp; x &lt;= w &amp;&amp; y > h / 2 &amp;&amp; y &lt;= h) {
			context.setColor(Color.YELLOW);
		}

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EVhoIMFJEei0Sok_Gsjhng" name="updateState" method="_EWyzcMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EViPMMFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EViPMcFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EWPZ0cFJEei0Sok_Gsjhng" name="Ball"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXev88FJEei0Sok_Gsjhng" name="" memberEnd="_EXev9MFJEei0Sok_Gsjhng _EWM9kMFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXev9MFJEei0Sok_Gsjhng" name="" type="_EGGFAMFJEei0Sok_Gsjhng" association="_EXev88FJEei0Sok_Gsjhng"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXfXAcFJEei0Sok_Gsjhng" name="" memberEnd="_EXfXAsFJEei0Sok_Gsjhng _EWR2EcFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXfXAsFJEei0Sok_Gsjhng" name="" type="_EGfGkMFJEei0Sok_Gsjhng" association="_EXfXAcFJEei0Sok_Gsjhng"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXf-EcFJEei0Sok_Gsjhng" name="" memberEnd="_EXf-EsFJEei0Sok_Gsjhng _EWSdIcFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXf-EsFJEei0Sok_Gsjhng" name="" type="_EGfGkMFJEei0Sok_Gsjhng" association="_EXf-EcFJEei0Sok_Gsjhng"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXglIcFJEei0Sok_Gsjhng" name="" memberEnd="_EXglIsFJEei0Sok_Gsjhng _EWSdI8FJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXglIsFJEei0Sok_Gsjhng" name="" type="_EGiw8MFJEei0Sok_Gsjhng" association="_EXglIcFJEei0Sok_Gsjhng"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXhMMMFJEei0Sok_Gsjhng" name="" memberEnd="_EXhMMcFJEei0Sok_Gsjhng _EWTEMsFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXhMMcFJEei0Sok_Gsjhng" name="" type="_EGiw8MFJEei0Sok_Gsjhng" association="_EXhMMMFJEei0Sok_Gsjhng"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXhzQMFJEei0Sok_Gsjhng" name="" memberEnd="_EXhzQcFJEei0Sok_Gsjhng _EWWHgMFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXhzQcFJEei0Sok_Gsjhng" name="" type="_EG26AMFJEei0Sok_Gsjhng" association="_EXhzQMFJEei0Sok_Gsjhng"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_D_yBoMFJEei0Sok_Gsjhng" name="paint">
        <packagedElement xmi:type="uml:Package" xmi:id="_EAUNIMFJEei0Sok_Gsjhng" name="shape">
          <packagedElement xmi:type="uml:Class" xmi:id="_EEzrkMFJEei0Sok_Gsjhng" name="EllipseShapeFactory">
            <ownedComment xmi:id="_EW4TAsFJEei0Sok_Gsjhng">
              <body>Concrete shape factory that instantiates Ellipse2D.Double shapes.
@author Peter</body>
            </ownedComment>
            <ownedAttribute xmi:id="_EV-7IMFJEei0Sok_Gsjhng" name="Singleton" isLeaf="true" isStatic="true" type="_EEzrkMFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXZQY8FJEei0Sok_Gsjhng">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_EV_iMMFJEei0Sok_Gsjhng" value="new EllipseShapeFactory()"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_ESTVAcFJEei0Sok_Gsjhng" client="_EEzrkMFJEei0Sok_Gsjhng" supplier="_EE8OcMFJEei0Sok_Gsjhng" contract="_EE8OcMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWlYE8FJEei0Sok_Gsjhng" name="makeShape" specification="_EE2H0MFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWlYFMFJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWlYFcFJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWlYFsFJEei0Sok_Gsjhng" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWlYF8FJEei0Sok_Gsjhng" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWlYGMFJEei0Sok_Gsjhng" type="_ESMAQMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>return new Ellipse2D.Double(x - xScale, y - yScale, 2 * xScale, 2 * yScale);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EE0SoMFJEei0Sok_Gsjhng" name="EllipseShapeFactory" visibility="private">
              <eAnnotations xmi:id="_EE05sMFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EE05scFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EE05s8FJEei0Sok_Gsjhng" type="_EEzrkMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EE2H0MFJEei0Sok_Gsjhng" name="makeShape" method="_EWlYE8FJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EE2H0cFJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EE2H0sFJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EE2H08FJEei0Sok_Gsjhng" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EE2H1MFJEei0Sok_Gsjhng" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUiwsMFJEei0Sok_Gsjhng" type="_ESMAQMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EE4kEMFJEei0Sok_Gsjhng" name="Fish1PolygonFactory">
            <ownedComment xmi:id="_EW4TA8FJEei0Sok_Gsjhng">
              <body>Concrete PolygonFactory that creates fish-shaped Polygons that have a longer tail and an open mouth.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_ESUjIcFJEei0Sok_Gsjhng" general="_EE-DoMFJEei0Sok_Gsjhng"/>
            <ownedAttribute xmi:id="_EV_iMcFJEei0Sok_Gsjhng" name="fishPoints" visibility="private" isLeaf="true" isStatic="true" type="_ERdngsFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXZ3ccFJEei0Sok_Gsjhng">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EWAJQMFJEei0Sok_Gsjhng" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWAJQsFJEei0Sok_Gsjhng" value="{ new Point(-10, -6), new Point(-10, 6), new Point(-4, 2),&#xA;&#x9;&#x9;&#x9;new Point(-2, 2), new Point(2, 6), new Point(8, 6), new Point(12, 2), new Point(10, 0), new Point(12, -2),&#xA;&#x9;&#x9;&#x9;new Point(8, -6), new Point(2, -6), new Point(-2, -2), new Point(-4, -2) }"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_EWBXYMFJEei0Sok_Gsjhng" name="scale" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWBXYcFJEei0Sok_Gsjhng" value="1.0 / 12.0"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_ESUjIMFJEei0Sok_Gsjhng" client="_EE4kEMFJEei0Sok_Gsjhng" supplier="_EE8OcMFJEei0Sok_Gsjhng" contract="_EE8OcMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWlYGcFJEei0Sok_Gsjhng" name="Fish1PolygonFactory" specification="_EE5LIMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWlYGsFJEei0Sok_Gsjhng" type="_EE4kEMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), scale, fishPoints);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EE5LIMFJEei0Sok_Gsjhng" name="Fish1PolygonFactory" method="_EWlYGcFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EE5LIcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EE5LIsFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EE5LI8FJEei0Sok_Gsjhng" type="_EE4kEMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EE6ZQMFJEei0Sok_Gsjhng" name="Fish2PolygonFactory">
            <ownedComment xmi:id="_EW4TBMFJEei0Sok_Gsjhng">
              <body>Concrete PolygonFactory that creates fish-shaped Polygons that have a longer tail and an open mouth.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_ESVxQcFJEei0Sok_Gsjhng" general="_EE-DoMFJEei0Sok_Gsjhng"/>
            <ownedAttribute xmi:id="_EWClgMFJEei0Sok_Gsjhng" name="fishPoints" visibility="private" isLeaf="true" isStatic="true" type="_ERdngsFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXaegcFJEei0Sok_Gsjhng">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EWClgcFJEei0Sok_Gsjhng" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWDMkMFJEei0Sok_Gsjhng" value="{ new Point(-10, -6), new Point(-10, 6), new Point(-8, 2),&#xA;&#x9;&#x9;&#x9;new Point(-4, 2), new Point(6, 8), new Point(12, 0), new Point(6, -8), new Point(-4, -8),&#xA;&#x9;&#x9;&#x9;new Point(-8, -2) }"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_EWDMkcFJEei0Sok_Gsjhng" name="scale" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWDMksFJEei0Sok_Gsjhng" value="1.0 / 12.0"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_ESVxQMFJEei0Sok_Gsjhng" client="_EE6ZQMFJEei0Sok_Gsjhng" supplier="_EE8OcMFJEei0Sok_Gsjhng" contract="_EE8OcMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWlYG8FJEei0Sok_Gsjhng" name="Fish2PolygonFactory" specification="_EE7AUMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWlYHMFJEei0Sok_Gsjhng" type="_EE6ZQMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), scale, fishPoints);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EE7AUMFJEei0Sok_Gsjhng" name="Fish2PolygonFactory" method="_EWlYG8FJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EE7AUcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EE7AUsFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EE7nYMFJEei0Sok_Gsjhng" type="_EE6ZQMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_EE8OcMFJEei0Sok_Gsjhng" name="IShapeFactory">
            <ownedComment xmi:id="_EW4TBcFJEei0Sok_Gsjhng">
              <body>Abstract factory that creates a Shape for use as prototype shapes in IPaintStrategies. The location of the center of the shape and the x and y scales can be specified.
@author Peter</body>
            </ownedComment>
            <ownedOperation xmi:id="_EE81gMFJEei0Sok_Gsjhng" name="makeShape">
              <ownedParameter xmi:id="_EE9ckMFJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EE9ckcFJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EE9cksFJEei0Sok_Gsjhng" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EE9ck8FJEei0Sok_Gsjhng" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUjXwMFJEei0Sok_Gsjhng" type="_ESMAQMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EE-DoMFJEei0Sok_Gsjhng" name="PolygonFactory">
            <ownedComment xmi:id="_EW4TBsFJEei0Sok_Gsjhng">
              <body>Concrete IShapeFactory that provides the invariant behavior to instantiate a Shape that is a Polygon. 
This class can be instantiated and used simply by supplying the desired points in its constructor, or sub-classed an the constructor overridden. 
Note that this class cannot be used directly by the BallWorld system because it does not have a no-parameter constructor.
@author Peter Dulworth</body>
            </ownedComment>
            <ownedAttribute xmi:id="_EWDzocFJEei0Sok_Gsjhng" name="at" visibility="private" type="_ER3QIMFJEei0Sok_Gsjhng" association="_EXbsocFJEei0Sok_Gsjhng"/>
            <ownedAttribute xmi:id="_EWEasMFJEei0Sok_Gsjhng" name="poly" visibility="private" type="_ESW_YMFJEei0Sok_Gsjhng" association="_EXcTscFJEei0Sok_Gsjhng">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWEascFJEei0Sok_Gsjhng" value="new Polygon()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_EWEas8FJEei0Sok_Gsjhng" name="scaleFactor" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_ESXmcMFJEei0Sok_Gsjhng" client="_EE-DoMFJEei0Sok_Gsjhng" supplier="_EE8OcMFJEei0Sok_Gsjhng" contract="_EE8OcMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWl_IMFJEei0Sok_Gsjhng" name="PolygonFactory" specification="_EUkl4MFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWl_IcFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWl_IsFJEei0Sok_Gsjhng" name="scaleFactor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWl_I8FJEei0Sok_Gsjhng" name="pts" type="_ERdngsFJEei0Sok_Gsjhng">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EWl_JMFJEei0Sok_Gsjhng" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWl_JcFJEei0Sok_Gsjhng" type="_EE-DoMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>this.at = at;
		this.scaleFactor = scaleFactor;
		for (Point pt : pts) {
			poly.addPoint(pt.x, pt.y);
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWl_JsFJEei0Sok_Gsjhng" name="makeShape" specification="_EFBuAMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWl_J8FJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWl_KMFJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWl_KcFJEei0Sok_Gsjhng" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWl_KsFJEei0Sok_Gsjhng" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWl_K8FJEei0Sok_Gsjhng" type="_ESMAQMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>at.setToTranslation(x, y);
		at.scale(xScale * scaleFactor, (-1.0) * yScale * scaleFactor);
		return at.createTransformedShape(poly);

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFBuAMFJEei0Sok_Gsjhng" name="makeShape" method="_EWl_JsFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EFCVEMFJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EFCVEcFJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EFCVEsFJEei0Sok_Gsjhng" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EFCVE8FJEei0Sok_Gsjhng" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUl0AMFJEei0Sok_Gsjhng" type="_ESMAQMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EUkl4MFJEei0Sok_Gsjhng" name="PolygonFactory" method="_EWl_IMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EUkl5MFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EUkl5cFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EUkl4cFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUkl4sFJEei0Sok_Gsjhng" name="scaleFactor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUkl48FJEei0Sok_Gsjhng" name="pts" type="_ERdngsFJEei0Sok_Gsjhng">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EUlM8sFJEei0Sok_Gsjhng" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUlM8cFJEei0Sok_Gsjhng" type="_EE-DoMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFGmgMFJEei0Sok_Gsjhng" name="RectangleShapeFactory">
            <ownedComment xmi:id="_EW4TB8FJEei0Sok_Gsjhng">
              <body>Concrete IShapeFactory that instantiates Rectangle2d.Double shapes.
@author Peter</body>
            </ownedComment>
            <ownedAttribute xmi:id="_EWFBwcFJEei0Sok_Gsjhng" name="Singleton" isLeaf="true" isStatic="true" type="_EFGmgMFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXc6wcFJEei0Sok_Gsjhng">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWFBwsFJEei0Sok_Gsjhng" value="new RectangleShapeFactory()"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_ESZboMFJEei0Sok_Gsjhng" client="_EFGmgMFJEei0Sok_Gsjhng" supplier="_EE8OcMFJEei0Sok_Gsjhng" contract="_EE8OcMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWl_LMFJEei0Sok_Gsjhng" name="makeShape" specification="_EFIbsMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWl_LcFJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWmmMMFJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWmmMcFJEei0Sok_Gsjhng" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWmmMsFJEei0Sok_Gsjhng" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWmmM8FJEei0Sok_Gsjhng" type="_ESMAQMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>return new Rectangle.Double(x - xScale, y - yScale, 2.0 * xScale, 2.0 * yScale);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFHNkMFJEei0Sok_Gsjhng" name="RectangleShapeFactory" visibility="private">
              <eAnnotations xmi:id="_EFHNkcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFH0oMFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFH0osFJEei0Sok_Gsjhng" type="_EFGmgMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EFIbsMFJEei0Sok_Gsjhng" name="makeShape" method="_EWl_LMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EFIbscFJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EFIbssFJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EFIbs8FJEei0Sok_Gsjhng" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EFIbtMFJEei0Sok_Gsjhng" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUmbEMFJEei0Sok_Gsjhng" type="_ESMAQMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFKQ4MFJEei0Sok_Gsjhng" name="SpaceShuttlePolygonFactory">
            <ownedComment xmi:id="_EW4TCMFJEei0Sok_Gsjhng">
              <body>Concrete PolygonFactory that creates fish-shaped Polygons that have a longer tail and an open mouth.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_ESapwMFJEei0Sok_Gsjhng" general="_EE-DoMFJEei0Sok_Gsjhng"/>
            <ownedAttribute xmi:id="_EWFo0MFJEei0Sok_Gsjhng" name="spaceShuttlePoints" visibility="private" isLeaf="true" isStatic="true" type="_ERdngsFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXdh0cFJEei0Sok_Gsjhng">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EWFo0cFJEei0Sok_Gsjhng" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWGP4MFJEei0Sok_Gsjhng" value="{ new Point(-29, 8), new Point(-35, 20), new Point(-31, 21),&#xA;&#x9;&#x9;&#x9;new Point(-29, 20), new Point(-15, 5), new Point(25, 5), new Point(27, 2), new Point(37, -3),&#xA;&#x9;&#x9;&#x9;new Point(35, -6), new Point(23, -8), new Point(-23, -8), new Point(-32, -7), new Point(-27, -4),&#xA;&#x9;&#x9;&#x9;new Point(-33, -5), new Point(-31, 1), new Point(-27, 0), new Point(-27, 2), new Point(-33, 2),&#xA;&#x9;&#x9;&#x9;new Point(-32, 7), new Point(-27, 6), new Point(-26, 7) }"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_EWGP4cFJEei0Sok_Gsjhng" name="scale" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_EWGP4sFJEei0Sok_Gsjhng" value="1.0 / 30.0"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_ESaCsMFJEei0Sok_Gsjhng" client="_EFKQ4MFJEei0Sok_Gsjhng" supplier="_EE8OcMFJEei0Sok_Gsjhng" contract="_EE8OcMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWmmNMFJEei0Sok_Gsjhng" name="SpaceShuttlePolygonFactory" specification="_EFLfAMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWmmNcFJEei0Sok_Gsjhng" type="_EFKQ4MFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), scale, spaceShuttlePoints);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFLfAMFJEei0Sok_Gsjhng" name="SpaceShuttlePolygonFactory" method="_EWmmNMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFLfAcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFLfAsFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFLfA8FJEei0Sok_Gsjhng" type="_EFKQ4MFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_EXZQY8FJEei0Sok_Gsjhng" name="" memberEnd="_EXZQZMFJEei0Sok_Gsjhng _EV-7IMFJEei0Sok_Gsjhng">
            <ownedEnd xmi:id="_EXZQZMFJEei0Sok_Gsjhng" name="" type="_EEzrkMFJEei0Sok_Gsjhng" association="_EXZQY8FJEei0Sok_Gsjhng"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_EXZ3ccFJEei0Sok_Gsjhng" name="" memberEnd="_EXZ3csFJEei0Sok_Gsjhng _EV_iMcFJEei0Sok_Gsjhng">
            <ownedEnd xmi:id="_EXZ3csFJEei0Sok_Gsjhng" name="" type="_EE4kEMFJEei0Sok_Gsjhng" association="_EXZ3ccFJEei0Sok_Gsjhng"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_EXaegcFJEei0Sok_Gsjhng" name="" memberEnd="_EXaegsFJEei0Sok_Gsjhng _EWClgMFJEei0Sok_Gsjhng">
            <ownedEnd xmi:id="_EXaegsFJEei0Sok_Gsjhng" name="" type="_EE6ZQMFJEei0Sok_Gsjhng" association="_EXaegcFJEei0Sok_Gsjhng"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_EXbsocFJEei0Sok_Gsjhng" name="" memberEnd="_EXbsosFJEei0Sok_Gsjhng _EWDzocFJEei0Sok_Gsjhng">
            <ownedEnd xmi:id="_EXbsosFJEei0Sok_Gsjhng" name="" type="_EE-DoMFJEei0Sok_Gsjhng" association="_EXbsocFJEei0Sok_Gsjhng"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_EXcTscFJEei0Sok_Gsjhng" name="" memberEnd="_EXcTssFJEei0Sok_Gsjhng _EWEasMFJEei0Sok_Gsjhng">
            <ownedEnd xmi:id="_EXcTssFJEei0Sok_Gsjhng" name="" type="_EE-DoMFJEei0Sok_Gsjhng" association="_EXcTscFJEei0Sok_Gsjhng"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_EXc6wcFJEei0Sok_Gsjhng" name="" memberEnd="_EXc6wsFJEei0Sok_Gsjhng _EWFBwcFJEei0Sok_Gsjhng">
            <ownedEnd xmi:id="_EXc6wsFJEei0Sok_Gsjhng" name="" type="_EFGmgMFJEei0Sok_Gsjhng" association="_EXc6wcFJEei0Sok_Gsjhng"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_EXdh0cFJEei0Sok_Gsjhng" name="" memberEnd="_EXdh0sFJEei0Sok_Gsjhng _EWFo0MFJEei0Sok_Gsjhng">
            <ownedEnd xmi:id="_EXdh0sFJEei0Sok_Gsjhng" name="" type="_EFKQ4MFJEei0Sok_Gsjhng" association="_EXdh0cFJEei0Sok_Gsjhng"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_EAgaYMFJEei0Sok_Gsjhng" name="strategy">
          <packagedElement xmi:type="uml:Class" xmi:id="_EFMGEMFJEei0Sok_Gsjhng" name="BallPaintStrategy">
            <ownedComment xmi:id="_EW4TCcFJEei0Sok_Gsjhng">
              <body>Paint strategy that paints a filled circle with the Ball's radius. This functionality is duplicated by the EllipsePaintStrategy. 
The class demonstrates a direct implementation of IPaintStrategy.
@author Peter</body>
            </ownedComment>
            <ownedAttribute xmi:id="_EWG28cFJEei0Sok_Gsjhng" name="at" visibility="private" type="_ER3QIMFJEei0Sok_Gsjhng" association="_EXeI4cFJEei0Sok_Gsjhng"/>
            <ownedAttribute xmi:id="_EWHeAcFJEei0Sok_Gsjhng" name="ball" visibility="private" type="_ESbQ0cFJEei0Sok_Gsjhng" association="_EXev8MFJEei0Sok_Gsjhng"/>
            <interfaceRealization xmi:id="_ESbQ0MFJEei0Sok_Gsjhng" client="_EFMGEMFJEei0Sok_Gsjhng" supplier="_EDutgMFJEei0Sok_Gsjhng" contract="_EDutgMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWmmNsFJEei0Sok_Gsjhng" name="BallPaintStrategy" specification="_EFNUMMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWmmN8FJEei0Sok_Gsjhng" type="_EFMGEMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0, 0, 1, 1);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWnNQMFJEei0Sok_Gsjhng" name="BallPaintStrategy" specification="_EUnCIMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWnNQcFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWnNQsFJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWnNQ8FJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWnNRMFJEei0Sok_Gsjhng" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWnNRcFJEei0Sok_Gsjhng" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWnNRsFJEei0Sok_Gsjhng" type="_EFMGEMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>this.at = at;
		this.ball = (Ellipse2D.Double) EllipseShapeFactory.Singleton.makeShape(x, y, width, height);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWnNR8FJEei0Sok_Gsjhng" name="paint" specification="_EUnpM8FJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWnNSMFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWnNScFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
              <language>java</language>
              <body>double scale = host.getRadius();
		at.setToTranslation(host.getLocation().x, host.getLocation().y); // happens third
		at.scale(scale, scale); // happens second
		at.rotate(host.getVelocity().x, host.getVelocity().y); // happens first 
		g.setColor(host.getColor());
		paintXfrm(g, host, this.at);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWnNSsFJEei0Sok_Gsjhng" name="paintXfrm" specification="_EUo3UsFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWnNS8FJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWnNTMFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWnNTcFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <language>java</language>
              <body>((Graphics2D) g).fill(at.createTransformedShape(this.ball));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFNUMMFJEei0Sok_Gsjhng" name="BallPaintStrategy" method="_EWmmNsFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFNUMcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFNUMsFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_EW4TCsFJEei0Sok_Gsjhng">
                <body>No parameter constructor that creates a 1 pixel radius ball at the origin. Instantiates a new AffineTransform for internal use.</body>
              </ownedComment>
              <ownedParameter xmi:id="_EFNUM8FJEei0Sok_Gsjhng" type="_EFMGEMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ESce8MFJEei0Sok_Gsjhng" name="init">
              <ownedParameter xmi:id="_ESce8cFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EUnCIMFJEei0Sok_Gsjhng" name="BallPaintStrategy" method="_EWnNQMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EUnpMMFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EUnpMcFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_EW46EMFJEei0Sok_Gsjhng">
                <body>Constructor that allows one to create the prototype ball of arbitrary dimension and location. The AffineTransform is externally supplied.
	 * @param at The AffineTransform to use for internal calculations.
	 * @param x floating point x-coordinate of center of circle.
	 * @param y floating point y-coordinate of center of circle.
	 * @param width floating point x-radius of the circle (ellipse).
	 * @param height floating point y-radius of the circle (ellipse).</body>
              </ownedComment>
              <ownedParameter xmi:id="_EUnCIcFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUnCIsFJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUnCI8FJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUnCJMFJEei0Sok_Gsjhng" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUnCJcFJEei0Sok_Gsjhng" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUnpMsFJEei0Sok_Gsjhng" type="_EFMGEMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EUnpM8FJEei0Sok_Gsjhng" name="paint" method="_EWnNR8FJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EUoQQMFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUoQQcFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EUo3UsFJEei0Sok_Gsjhng" name="paintXfrm" method="_EWnNSsFJEei0Sok_Gsjhng">
              <ownedComment xmi:id="_EW46EcFJEei0Sok_Gsjhng">
                <body>Paints a transformed circle, as per the given AffineTransform Uses color already set in Graphics context.
	 * @param g The Graphics context to paint on.
	 * @param host The Ball host.
	 * @param at The AffineTransform to use.</body>
              </ownedComment>
              <ownedParameter xmi:id="_EUo3U8FJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUo3VMFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUpeYMFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFSMsMFJEei0Sok_Gsjhng" name="BirdSheepImagePaintStrategy">
            <ownedComment xmi:id="_EW46EsFJEei0Sok_Gsjhng">
              <body>An example of an ImagePaintStrategy that randomly picks one of two animated image files to display when it is instantiated.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_ESe7McFJEei0Sok_Gsjhng" general="_EEs94MFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWn0UMFJEei0Sok_Gsjhng" name="BirdSheepImagePaintStrategy" specification="_EFSzwMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWn0UcFJEei0Sok_Gsjhng" type="_EFSMsMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super((String) Randomizer.Singleton.randomChoice(&quot;humbird_animate.gif&quot;, &quot;sheep_animate.gif&quot;, 0.5), 0.5);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFSzwMFJEei0Sok_Gsjhng" name="BirdSheepImagePaintStrategy" method="_EWn0UMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFSzwcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFSzwsFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFSzw8FJEei0Sok_Gsjhng" type="_EFSMsMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFTa0MFJEei0Sok_Gsjhng" name="BoxAndBallPaintStrategy">
            <ownedComment xmi:id="_EW46E8FJEei0Sok_Gsjhng">
              <body>A composite upright strategy that contains a box and a ball.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_ESgJUMFJEei0Sok_Gsjhng" general="_EEvaIMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWobYMFJEei0Sok_Gsjhng" name="BoxAndBallPaintStrategy" specification="_EFUB4MFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWobYcFJEei0Sok_Gsjhng" type="_EFTa0MFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWobYsFJEei0Sok_Gsjhng" name="BoxAndBallPaintStrategy" specification="_EUqFcMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWobY8FJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWobZMFJEei0Sok_Gsjhng" type="_EFTa0MFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super(at, new RectanglePaintStrategy(at, -0.5, -0.5, 0.5, 0.5),
				new EllipsePaintStrategy(at, 0.5, 0.5, 0.5, 0.5));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFUB4MFJEei0Sok_Gsjhng" name="BoxAndBallPaintStrategy" method="_EWobYMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFUB4cFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFUB4sFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFUo8MFJEei0Sok_Gsjhng" type="_EFTa0MFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EUqFcMFJEei0Sok_Gsjhng" name="BoxAndBallPaintStrategy" method="_EWobYsFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EUqFcsFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EUqFc8FJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EUqFccFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUqFdMFJEei0Sok_Gsjhng" type="_EFTa0MFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFVQAMFJEei0Sok_Gsjhng" name="DuckPaintStrategy">
            <ownedComment xmi:id="_EW46FMFJEei0Sok_Gsjhng">
              <body>Paint strategy that paints a duck that always stays upright.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_ESgwYMFJEei0Sok_Gsjhng" general="_EEs94MFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWobZcFJEei0Sok_Gsjhng" name="DuckPaintStrategy" specification="_EFV3EMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWobZsFJEei0Sok_Gsjhng" type="_EFVQAMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super(&quot;duck.gif&quot;, 0.6);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFV3EMFJEei0Sok_Gsjhng" name="DuckPaintStrategy" method="_EWobZcFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFV3EcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFV3EsFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFV3E8FJEei0Sok_Gsjhng" type="_EFVQAMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFWeIMFJEei0Sok_Gsjhng" name="EllipsePaintStrategy">
            <ownedComment xmi:id="_EW46FcFJEei0Sok_Gsjhng">
              <body>Paint strategy to paint an ellipse shape.</body>
            </ownedComment>
            <generalization xmi:id="_ESgwYcFJEei0Sok_Gsjhng" general="_EEp6kMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWobZ8FJEei0Sok_Gsjhng" name="EllipsePaintStrategy" specification="_EFXFMMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWobaMFJEei0Sok_Gsjhng" type="_EFWeIMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0, 0, 4.0 / 3.0, 2.0 / 3.0);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWpCcMFJEei0Sok_Gsjhng" name="EllipsePaintStrategy" specification="_EUqsgMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWpCccFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWpCcsFJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWpCc8FJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWpCdMFJEei0Sok_Gsjhng" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWpCdcFJEei0Sok_Gsjhng" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWpCdsFJEei0Sok_Gsjhng" type="_EFWeIMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFXFMMFJEei0Sok_Gsjhng" name="EllipsePaintStrategy" method="_EWobZ8FJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFXFMcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFXFMsFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFXFM8FJEei0Sok_Gsjhng" type="_EFWeIMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EUqsgMFJEei0Sok_Gsjhng" name="EllipsePaintStrategy" method="_EWpCcMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EUrTk8FJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EUrTlMFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EUqsgcFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUqsgsFJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUrTkMFJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUrTkcFJEei0Sok_Gsjhng" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUrTksFJEei0Sok_Gsjhng" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUrTlcFJEei0Sok_Gsjhng" type="_EFWeIMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFY6YMFJEei0Sok_Gsjhng" name="Fish1PaintStrategy">
            <ownedComment xmi:id="_EW46FsFJEei0Sok_Gsjhng">
              <body>Paint strategy that paints a fish-shaped Polygon generated by a Fish1PolygonFactory.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_EShXcMFJEei0Sok_Gsjhng" general="_EEp6kMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWpCd8FJEei0Sok_Gsjhng" name="Fish1PaintStrategy" specification="_EFb9sMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWpCeMFJEei0Sok_Gsjhng" type="_EFY6YMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWpCecFJEei0Sok_Gsjhng" name="Fish1PaintStrategy" specification="_EUr6oMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWpCesFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWpCe8FJEei0Sok_Gsjhng" type="_EFY6YMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish1PolygonFactory().makeShape(0, 0, 1, 1));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFb9sMFJEei0Sok_Gsjhng" name="Fish1PaintStrategy" method="_EWpCd8FJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFb9scFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFb9ssFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFb9s8FJEei0Sok_Gsjhng" type="_EFY6YMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EUr6oMFJEei0Sok_Gsjhng" name="Fish1PaintStrategy" method="_EWpCecFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EUr6osFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EUr6o8FJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EUr6ocFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUr6pMFJEei0Sok_Gsjhng" type="_EFY6YMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFdL0MFJEei0Sok_Gsjhng" name="Fish2PaintStrategy">
            <ownedComment xmi:id="_EW46F8FJEei0Sok_Gsjhng">
              <body>Paint strategy that paints a fish-shaped Polygon generated by a Fish2PolygonFactory.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_ESlB0MFJEei0Sok_Gsjhng" general="_EEp6kMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWpCfMFJEei0Sok_Gsjhng" name="Fish2PaintStrategy" specification="_EFdy4MFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWpCfcFJEei0Sok_Gsjhng" type="_EFdL0MFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWpCfsFJEei0Sok_Gsjhng" name="Fish2PaintStrategy" specification="_EUshsMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWpCf8FJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWpCgMFJEei0Sok_Gsjhng" type="_EFdL0MFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish2PolygonFactory().makeShape(0, 0, 1, 1));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFdy4MFJEei0Sok_Gsjhng" name="Fish2PaintStrategy" method="_EWpCfMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFdy4cFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFdy4sFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFdy48FJEei0Sok_Gsjhng" type="_EFdL0MFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EUshsMFJEei0Sok_Gsjhng" name="Fish2PaintStrategy" method="_EWpCfsFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EUshssFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EUshs8FJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EUshscFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUshtMFJEei0Sok_Gsjhng" type="_EFdL0MFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFfBAMFJEei0Sok_Gsjhng" name="MarioSonicImagePaintStrategy">
            <ownedComment xmi:id="_EW46GMFJEei0Sok_Gsjhng">
              <body>Paint strategy that uses either an animated Mario or Sonic image.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_ESlo4MFJEei0Sok_Gsjhng" general="_EEs94MFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWppgMFJEei0Sok_Gsjhng" name="MarioSonicImagePaintStrategy" specification="_EFfoEMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWppgcFJEei0Sok_Gsjhng" type="_EFfBAMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super((String) Randomizer.Singleton.randomChoice(&quot;Mario_animate.gif&quot;, &quot;Sonic_animate.gif&quot;, 0.5), 0.5);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFfoEMFJEei0Sok_Gsjhng" name="MarioSonicImagePaintStrategy" method="_EWppgMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFfoEcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFgPIMFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFgPIcFJEei0Sok_Gsjhng" type="_EFfBAMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFgPIsFJEei0Sok_Gsjhng" name="NiceFishPaintStrategy">
            <ownedComment xmi:id="_EW46GcFJEei0Sok_Gsjhng">
              <body>Subclass of MultiPaintStrategy that uses a Fish1PaintStrategy and an EllipsePaintStrategy to paint a fish shape that has an eye.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_ESmP8MFJEei0Sok_Gsjhng" general="_EEvaIMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWppgsFJEei0Sok_Gsjhng" name="NiceFishPaintStrategy" specification="_EFhdQMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWppg8FJEei0Sok_Gsjhng" type="_EFgPIsFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWpphMFJEei0Sok_Gsjhng" name="NiceFishPaintStrategy" specification="_EUtIwMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWpphcFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWpphsFJEei0Sok_Gsjhng" type="_EFgPIsFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish1PaintStrategy(), // body
				new FixedColorDecoratorPaintStrategy(Color.WHITE, new EllipsePaintStrategy(at, 0.5, -0.2, 0.15, 0.15)),  // white of the eye
				new FixedColorDecoratorPaintStrategy(Color.BLACK, new EllipsePaintStrategy(at, 0.5, -0.2, 0.08, 0.08))); // pupil
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFhdQMFJEei0Sok_Gsjhng" name="NiceFishPaintStrategy" method="_EWppgsFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFhdQcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFhdQsFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFhdQ8FJEei0Sok_Gsjhng" type="_EFgPIsFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EUtIwMFJEei0Sok_Gsjhng" name="NiceFishPaintStrategy" method="_EWpphMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EUtIwsFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EUtIw8FJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EUtIwcFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUtIxMFJEei0Sok_Gsjhng" type="_EFgPIsFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFirYMFJEei0Sok_Gsjhng" name="PlanetImagePaintStrategy">
            <ownedComment xmi:id="_EW46GsFJEei0Sok_Gsjhng">
              <body>Paint strategy that upon instantiation, randomly picks an image.
* @author sgj1
* @author psd2
*</body>
            </ownedComment>
            <generalization xmi:id="_ESm3AMFJEei0Sok_Gsjhng" general="_EEhXsMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWqQkMFJEei0Sok_Gsjhng" name="PlanetImagePaintStrategy" specification="_EFjScMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWqQkcFJEei0Sok_Gsjhng" type="_EFirYMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super((new String[]{ &quot;Earth.png&quot;, &quot;Jupiter.png&quot;, &quot;Mars.png&quot;, &quot;Saturn.png&quot;, &quot;Venus.png&quot; }) // done to avoid using a static array
				[Randomizer.Singleton.randomInt(0, 4)], .75);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFjScMFJEei0Sok_Gsjhng" name="PlanetImagePaintStrategy" method="_EWqQkMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFjSccFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFjScsFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFjSc8FJEei0Sok_Gsjhng" type="_EFirYMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFj5gMFJEei0Sok_Gsjhng" name="RectanglePaintStrategy">
            <ownedComment xmi:id="_EW46G8FJEei0Sok_Gsjhng">
              <body>Concrete paint strategy that paints a rectangular shape scaled to the size of the ball.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_ESneEMFJEei0Sok_Gsjhng" general="_EEp6kMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWqQksFJEei0Sok_Gsjhng" name="RectanglePaintStrategy" specification="_EFkgkMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWqQk8FJEei0Sok_Gsjhng" type="_EFj5gMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0, 0, 4.0 / 3.0, 2.0 / 3.0);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWqQlMFJEei0Sok_Gsjhng" name="RectanglePaintStrategy" specification="_EUtv0MFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWqQlcFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWqQlsFJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWqQl8FJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWqQmMFJEei0Sok_Gsjhng" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWqQmcFJEei0Sok_Gsjhng" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EWqQmsFJEei0Sok_Gsjhng" type="_EFj5gMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super(at, RectangleShapeFactory.Singleton.makeShape(x, y, width, height));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFkgkMFJEei0Sok_Gsjhng" name="RectanglePaintStrategy" method="_EWqQksFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFkgkcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFkgksFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFkgk8FJEei0Sok_Gsjhng" type="_EFj5gMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EUtv0MFJEei0Sok_Gsjhng" name="RectanglePaintStrategy" method="_EWqQlMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EUuW4MFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EUuW4cFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EUtv0cFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUtv0sFJEei0Sok_Gsjhng" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUtv08FJEei0Sok_Gsjhng" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUtv1MFJEei0Sok_Gsjhng" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUtv1cFJEei0Sok_Gsjhng" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_EUuW4sFJEei0Sok_Gsjhng" type="_EFj5gMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFlusMFJEei0Sok_Gsjhng" name="SoccerImagePaintStrategy">
            <ownedComment xmi:id="_EW46HMFJEei0Sok_Gsjhng">
              <body>Paint strategy that paints a FIFA soccer ball as its image.
@author sgj1
@author psd2</body>
            </ownedComment>
            <generalization xmi:id="_ESoFIMFJEei0Sok_Gsjhng" general="_EEhXsMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWqQm8FJEei0Sok_Gsjhng" name="SoccerImagePaintStrategy" specification="_EFmVwMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWqQnMFJEei0Sok_Gsjhng" type="_EFlusMFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super(&quot;FIFA_Soccer_Ball.png&quot;, .75);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFmVwMFJEei0Sok_Gsjhng" name="SoccerImagePaintStrategy" method="_EWqQm8FJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFm80MFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFm80cFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFm80sFJEei0Sok_Gsjhng" type="_EFlusMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFnj4MFJEei0Sok_Gsjhng" name="SpaceShuttlePaintStrategy">
            <ownedComment xmi:id="_EW46HcFJEei0Sok_Gsjhng">
              <body>Paint strategy that paints a space-shuttle-shaped Polygon generated by a Fish1PolyfonFactory.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_ESoFIcFJEei0Sok_Gsjhng" general="_EExPUMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWqQncFJEei0Sok_Gsjhng" name="SpaceShuttlePaintStrategy" specification="_EFoK8MFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWqQnsFJEei0Sok_Gsjhng" type="_EFnj4MFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWq3oMFJEei0Sok_Gsjhng" name="SpaceShuttlePaintStrategy" specification="_EUu98MFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWq3ocFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWq3osFJEei0Sok_Gsjhng" type="_EFnj4MFJEei0Sok_Gsjhng" direction="return"/>
              <language>java</language>
              <body>super(at, new SpaceShuttlePolygonFactory().makeShape(0, 0, 1, 1));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFoK8MFJEei0Sok_Gsjhng" name="SpaceShuttlePaintStrategy" method="_EWqQncFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EFoK8cFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFoK8sFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFoK88FJEei0Sok_Gsjhng" type="_EFnj4MFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EUu98MFJEei0Sok_Gsjhng" name="SpaceShuttlePaintStrategy" method="_EWq3oMFJEei0Sok_Gsjhng">
              <eAnnotations xmi:id="_EUu98sFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EUu988FJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EUu98cFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUu99MFJEei0Sok_Gsjhng" type="_EFnj4MFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_EFrOQMFJEei0Sok_Gsjhng" name="SquarePaintStrategy">
            <ownedComment xmi:id="_EW5hIMFJEei0Sok_Gsjhng">
              <body>Paint strategy that paints a filled square with the Ball's radius.
This functionality is duplicated by the RectanglePaintStrategy.
The class demonstrates a direct implementation of IPaintStrategy.</body>
            </ownedComment>
            <interfaceRealization xmi:id="_ESpTQMFJEei0Sok_Gsjhng" client="_EFrOQMFJEei0Sok_Gsjhng" supplier="_EDutgMFJEei0Sok_Gsjhng" contract="_EDutgMFJEei0Sok_Gsjhng"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWq3o8FJEei0Sok_Gsjhng" name="paint" specification="_EUvlAMFJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EWq3pMFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EWq3pcFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
              <language>java</language>
              <body>int halfSide = host.getRadius();
		g.setColor(host.getColor());
		g.fillRect(host.getLocation().x - halfSide, host.getLocation().y - halfSide, 2 * halfSide, 2 * halfSide);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_EFr1UMFJEei0Sok_Gsjhng" name="SquarePaintStrategy">
              <eAnnotations xmi:id="_EFr1UcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_EFr1UsFJEei0Sok_Gsjhng" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_EFscYcFJEei0Sok_Gsjhng" type="_EFrOQMFJEei0Sok_Gsjhng" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ESp6UMFJEei0Sok_Gsjhng" name="init">
              <ownedParameter xmi:id="_ESp6UcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            </ownedOperation>
            <ownedOperation xmi:id="_EUvlAMFJEei0Sok_Gsjhng" name="paint" method="_EWq3o8FJEei0Sok_Gsjhng">
              <ownedParameter xmi:id="_EUvlAcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
              <ownedParameter xmi:id="_EUvlAsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_EXeI4cFJEei0Sok_Gsjhng" name="" memberEnd="_EXeI4sFJEei0Sok_Gsjhng _EWG28cFJEei0Sok_Gsjhng">
            <ownedEnd xmi:id="_EXeI4sFJEei0Sok_Gsjhng" name="" type="_EFMGEMFJEei0Sok_Gsjhng" association="_EXeI4cFJEei0Sok_Gsjhng"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_EXev8MFJEei0Sok_Gsjhng" name="" memberEnd="_EXev8cFJEei0Sok_Gsjhng _EWHeAcFJEei0Sok_Gsjhng">
            <ownedEnd xmi:id="_EXev8cFJEei0Sok_Gsjhng" name="" type="_EFMGEMFJEei0Sok_Gsjhng" association="_EXev8MFJEei0Sok_Gsjhng"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EETVQMFJEei0Sok_Gsjhng" name="ADecoratorPaintStrategy" isAbstract="true">
          <ownedComment xmi:id="_EW3E7MFJEei0Sok_Gsjhng">
            <body>Abstract class that provides default behavior for subclasses that will decorate another IPaintStrategy to add functionality to that strategy. 
All this class's methods do is to simply delegate to the decoree. A subclass should override one or more methods, adding additional 
processing either before or after delegating to the decoree. 
Note that this class cannot be used by the BallWorld system directly as it lacks a no-parameter constructor.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_ER6TccFJEei0Sok_Gsjhng" general="_EEZb4MFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EV3mYMFJEei0Sok_Gsjhng" name="decoree" visibility="private" type="_EEZb4MFJEei0Sok_Gsjhng" association="_EXVmAMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWgflMFJEei0Sok_Gsjhng" name="ADecoratorPaintStrategy" specification="_ER5FUMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWgflcFJEei0Sok_Gsjhng" name="decoree" type="_EEZb4MFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWgflsFJEei0Sok_Gsjhng" type="_EETVQMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>super(decoree.getAT());
		this.decoree = decoree;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWgfl8FJEei0Sok_Gsjhng" name="paint" specification="_EUKWMMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWgfmMFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWgfmcFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>decoree.paint(g, host);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWgfmsFJEei0Sok_Gsjhng" name="paintXfrm" specification="_EULkUsFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWgfm8FJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWgfnMFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWgfncFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>decoree.paintXfrm(g, host, at);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWhGoMFJEei0Sok_Gsjhng" name="init" specification="_ER5sYMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWhGocFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>decoree.init(host);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ER5FUMFJEei0Sok_Gsjhng" name="ADecoratorPaintStrategy" method="_EWgflMFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_ER5FUsFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ER5FU8FJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_EW3E7cFJEei0Sok_Gsjhng">
              <body>Constructor that takes the decoree paint strategy.
	 * @param decoree The paint strategy that is to be decorated.</body>
            </ownedComment>
            <ownedParameter xmi:id="_ER5FUcFJEei0Sok_Gsjhng" name="decoree" type="_EEZb4MFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_ER5FVMFJEei0Sok_Gsjhng" type="_EETVQMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ER5sYMFJEei0Sok_Gsjhng" name="init" method="_EWhGoMFJEei0Sok_Gsjhng">
            <ownedComment xmi:id="_EW3E7sFJEei0Sok_Gsjhng">
              <body>Default behavior is to simply delegate to the decoree's init method.</body>
            </ownedComment>
            <ownedParameter xmi:id="_ER6TcMFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUKWMMFJEei0Sok_Gsjhng" name="paint" method="_EWgfl8FJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EUKWMcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUKWMsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EULkUsFJEei0Sok_Gsjhng" name="paintXfrm" method="_EWgfmsFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EULkU8FJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EULkVMFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUMLYMFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EEZb4MFJEei0Sok_Gsjhng" name="APaintStrategy" isAbstract="true">
          <ownedComment xmi:id="_EW3E78FJEei0Sok_Gsjhng">
            <body>The top-level affine transform-based paint strategy that provides services for its subclasses, plus default behaviors and abstract behaviors.
@author Peter</body>
          </ownedComment>
          <ownedAttribute xmi:id="_EV4NccFJEei0Sok_Gsjhng" name="at" visibility="protected" type="_ER3QIMFJEei0Sok_Gsjhng" association="_EXVmA8FJEei0Sok_Gsjhng"/>
          <interfaceRealization xmi:id="_ER7hkMFJEei0Sok_Gsjhng" client="_EEZb4MFJEei0Sok_Gsjhng" supplier="_EDutgMFJEei0Sok_Gsjhng" contract="_EDutgMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWhGosFJEei0Sok_Gsjhng" name="APaintStrategy" specification="_EUMycMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWhGo8FJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWhGpMFJEei0Sok_Gsjhng" type="_EEZb4MFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>this.at = at;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWhGpcFJEei0Sok_Gsjhng" name="paint" specification="_EUOAkMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWhGpsFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWhGp8FJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>double scale = host.getRadius();
		at.setToTranslation(host.getLocation().x, host.getLocation().y); // happens third
		at.scale(scale, scale); // happens second
		at.rotate(host.getVelocity().x, host.getVelocity().y); // happens first 
		g.setColor(host.getColor());
		paintCfg(g, host);
		paintXfrm(g, host, this.at);

		// FOR DEBUGGING:
		//		g.drawOval(host.getLocation().x - host.getRadius(), host.getLocation().y - host.getRadius(), 2 * host.getRadius(), 2 * host.getRadius());
		//		g.drawRect(host.getLocation().x - host.getRadius(), host.getLocation().y - host.getRadius(), 2 * host.getRadius(), 2 * host.getRadius());
		//		g.fillOval(host.getLocation().x - 3, host.getLocation().y - 3, 6, 6);
		//		g.fillOval(host.getLocation().x - host.getRadius() - 3, host.getLocation().y - host.getRadius() - 3, 6, 6);

		/*
		 * First, when the painting strategy is created, the prototype is created ONCE.   The prototype is INVARIANT and thus, is never modified.
		 * 
		 * Typically we will reuse the AffineTransform object rather than re-instantiate it for every use.
		 * 
		 * We can summarize the painting process using prototypes in these steps, which occur at EVERY painting event:
		 * 
		 * 	Set the affine transform to translate by the ball's position
		 * 	Add the rotation and scaling to the affine transform as determined by the balls size (radius), velocity and/or other properties at the moment of painting.
		 * 	Add any other desired transformations.
		 * 	Transform the prototype shape into a new Shape object which has the desired position, rotation, size, etc. 
		 * 	Use the provided Graphics2D object to paint the new, transformed Shape onto the screen.
		 * 
		 * Do not confuse the moving of the ball, which is the changing of the value of the ball's location, with the translation of the prototype shape, which is the generation of the desired shape for painting at the current ball location from the origin-centered prototype shape.
		 * 
		 * Moving the ball is a completely separate operation from painting the ball.   
		 * The ball is painted at the position on the screen corresponding to the current location of the ball.   
		 * The ball does not move during painting.    
		 * The prototype is invariant and thus never moves from the origin. 
		 * 
		 * The prototype shape is NOT the ball.   
		 * The prototype shape contains just the shape information of ball, without any location, size or rotational information.     
		 * The location, size and rotational information needed to create the final displayed image of the ball is determined at painting time.   
		 * That information is embodied in the affine transform.    
		 * Thus, it is the combination of the invariant prototype and the variant affine transform that creates the final shape to be painted on the screen.
		 */
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWhGqMFJEei0Sok_Gsjhng" name="paintCfg" specification="_EUOnosFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWhGqcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWhGqsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>/*
		 * The paintCfg method is set to be a concrete no-op that the subclasses may or may not override.   
		 * This method allows the subclass to inject additional processing into the paint method process before the final transformations are performed.     
		 * Since this method is &quot;protected&quot;, it is only available for use by the subclasses and not other types of objects.
		 */
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWhGq8FJEei0Sok_Gsjhng" name="getAT" specification="_EEbREMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWhGrMFJEei0Sok_Gsjhng" type="_ER3QIMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>return at;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EEbREMFJEei0Sok_Gsjhng" name="getAT" visibility="protected" method="_EWhGq8FJEei0Sok_Gsjhng">
            <ownedComment xmi:id="_EW3r8sFJEei0Sok_Gsjhng">
              <body>A secondary paint operation that is the last step of the above paint method, which does not calculate its own affine transform, but instead, uses a supplied affine transform.   
	 * Notice that the translation, rotation and scaling have already been added to the affine transform before it gets to paintXfrm.  
	 * This allows the same affine transform to be shared amongst paint strategies, reducing the number of times that it has to be calculated.   
	 * When an affine transform instance is being shared amongst strategies, then it is invariant across those strategies.  
	 * Thus, this method allows an invariant translation, rotation and scaling to be performed (previously in the paint method) that applies to all composed strategies.    
	 * But as we have seen before, invariant properties cause problems when we try to compose entities together as those invariant properties tend to &quot;run into each other&quot; and make 
	 * composition very difficult.   
	 * This method does not include the invariant parts of the affine transform process, so affine transform-based paint strategies can be combined based on this method 
	 * but not based on the paint method.  
	 * Since APaintStrategy doesn't know what sort of thing is being painted, it has no idea how exactly to apply the affine transform, so the paintXfrm method must 
	 * remain abstract, forcing the subclasses to implement it.</body>
            </ownedComment>
            <ownedParameter xmi:id="_EUQc0MFJEei0Sok_Gsjhng" type="_ER3QIMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ER8IoMFJEei0Sok_Gsjhng" name="init">
            <ownedParameter xmi:id="_ER8IocFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUMycMFJEei0Sok_Gsjhng" name="APaintStrategy" method="_EWhGosFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EUNZgcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EUNZgsFJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_EW3E8MFJEei0Sok_Gsjhng">
              <body>Constructor that initializes the strategy with an affine transform.
	 * @param at The AffineTransform for this paint strategy to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_EUNZgMFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUNZg8FJEei0Sok_Gsjhng" type="_EEZb4MFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUOAkMFJEei0Sok_Gsjhng" name="paint" method="_EWhGpcFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EUOAkcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUOAksFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUOnosFJEei0Sok_Gsjhng" name="paintCfg" visibility="protected" method="_EWhGqMFJEei0Sok_Gsjhng">
            <ownedComment xmi:id="_EW3r8MFJEei0Sok_Gsjhng">
              <body>Defined by a subclass if additional processing, e.g. staying upright, is required before the actual painting takes place.
	 * @param g The Graphics context that will be paint on.
	 * @param host The host Ball that the required information will be pulled from.</body>
            </ownedComment>
            <ownedParameter xmi:id="_EUOno8FJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUOnpMFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUP1wMFJEei0Sok_Gsjhng" name="paintXfrm" isAbstract="true">
            <ownedComment xmi:id="_EW3r8cFJEei0Sok_Gsjhng">
              <body>Paints the host onto the given Graphics context. The image is translated, scaled and 
	 * rotated as determined by the given affine transformation. This method is intended to 
	 * be called either by a class's (or superclass's) own paint method or by another paint 
	 * strategy who is sharing the affine transform. This allows the same transformation to 
	 * be shared amongst multiple paint strategies.
	 * @param g The graphics context to draw upon.
	 * @param host The host ball.
	 * @param at The affine transform to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_EUP1wcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUP1wsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUP1w8FJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EEeUYMFJEei0Sok_Gsjhng" name="FixedColorDecoratorPaintStrategy">
          <ownedComment xmi:id="_EW3r88FJEei0Sok_Gsjhng">
            <body>Decorator paint strategy that decorates another IPaintStrategy and causes the painted color to always be a specified, fixed color. 
Useful when you want a shape that is a specific color and not the color of the host Ball, for example, the black colored eye on a fish. 
Note that this class only works in situations where paintXfrm is called, because if paint is called, the call is delegated to the decoree, 
which will then delegate to its own paintXfrm method, not this decorator's method. Thus, this class is best used when being composed 
with other paint strategies inside a MultiPaintStrategy.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_ER_L8MFJEei0Sok_Gsjhng" general="_EETVQMFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EV5bkMFJEei0Sok_Gsjhng" name="color" visibility="package" type="_ERcZYMFJEei0Sok_Gsjhng" association="_EXWNEcFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWhtsMFJEei0Sok_Gsjhng" name="FixedColorDecoratorPaintStrategy" specification="_EURq8MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWhtscFJEei0Sok_Gsjhng" name="color" type="_ERcZYMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWhtssFJEei0Sok_Gsjhng" name="decoree" type="_EEZb4MFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWhts8FJEei0Sok_Gsjhng" type="_EEeUYMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>super(decoree);
		this.color = color;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWhttMFJEei0Sok_Gsjhng" name="paintXfrm" specification="_EUSSAMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWhttcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWhttsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWhtt8FJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>g.setColor(this.color);
		super.paintXfrm(g, host, at);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EURq8MFJEei0Sok_Gsjhng" name="FixedColorDecoratorPaintStrategy" method="_EWhtsMFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EURq88FJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EURq9MFJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_EURq8cFJEei0Sok_Gsjhng" name="color" type="_ERcZYMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EURq8sFJEei0Sok_Gsjhng" name="decoree" type="_EEZb4MFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EURq9cFJEei0Sok_Gsjhng" type="_EEeUYMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUSSAMFJEei0Sok_Gsjhng" name="paintXfrm" method="_EWhttMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EUSSAcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUSSAsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUSSA8FJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EEhXsMFJEei0Sok_Gsjhng" name="ImagePaintStrategy">
          <ownedComment xmi:id="_EW3r9MFJEei0Sok_Gsjhng">
            <body>Paint strategy that paints an image from a file, scaled to the host Ball's radius.
Note that this class cannot be used by the BallWar system directly as it is lacking a no-parameter constructor.

@author sgj1
@author psd2
 *</body>
          </ownedComment>
          <generalization xmi:id="_ESF5o8FJEei0Sok_Gsjhng" general="_EEZb4MFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EV6CoMFJEei0Sok_Gsjhng" name="fillFactor" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EV6psMFJEei0Sok_Gsjhng" value="0.5"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_EV6pssFJEei0Sok_Gsjhng" name="image" visibility="private" type="_ESBBIcFJEei0Sok_Gsjhng" association="_EXW0IcFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EV7QwcFJEei0Sok_Gsjhng" name="imageObs" visibility="private" type="_ESBoMcFJEei0Sok_Gsjhng" association="_EXXbMcFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EV730MFJEei0Sok_Gsjhng" name="localAT" visibility="protected" type="_ER3QIMFJEei0Sok_Gsjhng" association="_EXYCQcFJEei0Sok_Gsjhng">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_EV730cFJEei0Sok_Gsjhng" value="new AffineTransform()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_EV8e4MFJEei0Sok_Gsjhng" name="scaleFactor" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWhtuMFJEei0Sok_Gsjhng" name="ImagePaintStrategy" specification="_EUUHMMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWhtucFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWhtusFJEei0Sok_Gsjhng" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWhtu8FJEei0Sok_Gsjhng" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWhtvMFJEei0Sok_Gsjhng" type="_EEhXsMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>super(at);
		try {
			image = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource(&quot;images&quot; + filename));
		} catch (Exception e) {
			System.err.println(&quot;ImagePaintStrategy: Error reading file: &quot; + filename + &quot;\n&quot; + e);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWiUwMFJEei0Sok_Gsjhng" name="ImagePaintStrategy" specification="_EEil0MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWiUwcFJEei0Sok_Gsjhng" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWiUwsFJEei0Sok_Gsjhng" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWiUw8FJEei0Sok_Gsjhng" type="_EEhXsMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>super(new AffineTransform());
		try {
			image = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource(&quot;images/&quot; + filename));
		} catch (Exception e) {
			System.err.println(&quot;ImagePaintStrategy: Error reading file: &quot; + filename + &quot;\n&quot; + e);
		}

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWiUxMFJEei0Sok_Gsjhng" name="paintXfrm" specification="_EUVVUMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWiUxcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWiUxsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWiUx8FJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs) / 2.0, -image.getHeight(imageObs) / 2.0);
		localAT.preConcatenate(at);
		((Graphics2D) g).drawImage(image, localAT, imageObs);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWiUyMFJEei0Sok_Gsjhng" name="init" specification="_ESFSkMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWiUycFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>imageObs = host.getContainer();
		MediaTracker mt = new MediaTracker(host.getContainer());
		mt.addImage(image, 1);
		try {
			mt.waitForAll();
		} catch (Exception e) {
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot; + e);
		}
		scaleFactor = 2.0 / (fillFactor * (image.getWidth(imageObs) + image.getHeight(imageObs)) / 2.0);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EEil0MFJEei0Sok_Gsjhng" name="ImagePaintStrategy" visibility="protected" method="_EWiUwMFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EEjM4sFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EEjM48FJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_EW3r9sFJEei0Sok_Gsjhng">
              <body>Constructor that takes the image filename and fill factor.
	 * An AffineTransform is instantiated for internal use.
	 * GIF, JPG, PNG and any other file that can be loaded by an ImageIcon object can be used,
	 * including animated GIF's as the above files are.
	 * @param filename The filename of the image file to use.
	 * @param fillFactor The ratio of the desired average radius of the image to the actual average of the image's width and height.</body>
            </ownedComment>
            <ownedParameter xmi:id="_EEjM4MFJEei0Sok_Gsjhng" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EEjM4cFJEei0Sok_Gsjhng" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EEjM5MFJEei0Sok_Gsjhng" type="_EEhXsMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ESFSkMFJEei0Sok_Gsjhng" name="init" method="_EWiUyMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ESFSkcFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUUHMMFJEei0Sok_Gsjhng" name="ImagePaintStrategy" method="_EWhtuMFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EUUuQ8FJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EUUuRMFJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_EW3r9cFJEei0Sok_Gsjhng">
              <body>Constructor that takes an external AffineTransform, the filename of the image to paint and a fill factor of the image.
	 * @param at The AffineTransform to use internally.
	 * @param filename The filename of the image file to use.
	 * @param fillFactor The ratio of the desired average radius of the image to the actual average of the image's width and height.</body>
            </ownedComment>
            <ownedParameter xmi:id="_EUUuQMFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUUuQcFJEei0Sok_Gsjhng" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EUUuQsFJEei0Sok_Gsjhng" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EUUuRcFJEei0Sok_Gsjhng" type="_EEhXsMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUVVUMFJEei0Sok_Gsjhng" name="paintXfrm" method="_EWiUxMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EUVVUcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUVVUsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUVVU8FJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EEm3QMFJEei0Sok_Gsjhng" name="MultiPaintStrategy">
          <ownedComment xmi:id="_EW3r98FJEei0Sok_Gsjhng">
            <body>A composite design pattern extension of APaintStrategy that paints a set of paint strategies. 
Note: This paint strategy cannot be used directly by the BallWorld system because it lacks a no-parameter constructor.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_ESKLEsFJEei0Sok_Gsjhng" general="_EEZb4MFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EV9F8MFJEei0Sok_Gsjhng" name="pstrats" visibility="private" type="_EEZb4MFJEei0Sok_Gsjhng" association="_EXYpUcFJEei0Sok_Gsjhng">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EV9F8cFJEei0Sok_Gsjhng" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWi70MFJEei0Sok_Gsjhng" name="MultiPaintStrategy" specification="_ESHu0MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWi70cFJEei0Sok_Gsjhng" name="pstrats" type="_EEZb4MFJEei0Sok_Gsjhng">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EWi70sFJEei0Sok_Gsjhng" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWi708FJEei0Sok_Gsjhng" type="_EEm3QMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>super(new AffineTransform());
		this.pstrats = pstrats;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWi71MFJEei0Sok_Gsjhng" name="MultiPaintStrategy" specification="_EUXKgMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWi71cFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWi71sFJEei0Sok_Gsjhng" name="pstrats" type="_EEZb4MFJEei0Sok_Gsjhng">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EWi718FJEei0Sok_Gsjhng" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWi72MFJEei0Sok_Gsjhng" type="_EEm3QMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>super(at);
		this.pstrats = pstrats;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWji4MFJEei0Sok_Gsjhng" name="init" specification="_ESI88sFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWji4cFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>for (int i = 0; i &lt; pstrats.length; i++) {
			pstrats[i].init(host);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWji4sFJEei0Sok_Gsjhng" name="paintXfrm" specification="_EUYYocFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWji48FJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWji5MFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWji5cFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>for (int i = 0; i &lt; pstrats.length; i++) {
			pstrats[i].paintXfrm(g, host, at);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ESHu0MFJEei0Sok_Gsjhng" name="MultiPaintStrategy" method="_EWi70MFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_ESIV4cFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ESIV4sFJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ESIV4MFJEei0Sok_Gsjhng" name="pstrats" type="_EEZb4MFJEei0Sok_Gsjhng">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ESI88MFJEei0Sok_Gsjhng" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ESIV5MFJEei0Sok_Gsjhng" type="_EEm3QMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ESI88sFJEei0Sok_Gsjhng" name="init" method="_EWji4MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ESJkAMFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUXKgMFJEei0Sok_Gsjhng" name="MultiPaintStrategy" method="_EWi71MFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EUXxkcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EUXxksFJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_EUXKgcFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUXxkMFJEei0Sok_Gsjhng" name="pstrats" type="_EEZb4MFJEei0Sok_Gsjhng">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EUXxlcFJEei0Sok_Gsjhng" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EUXxlMFJEei0Sok_Gsjhng" type="_EEm3QMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUYYocFJEei0Sok_Gsjhng" name="paintXfrm" method="_EWji4sFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EUYYosFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUYYo8FJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUYYpMFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EEp6kMFJEei0Sok_Gsjhng" name="ShapePaintStrategy">
          <ownedComment xmi:id="_EW3r-MFJEei0Sok_Gsjhng">
            <body>Concrete class that defines invariant painting behaviors to paint Shape objects for all its subclasses. 
Note: This cannot be directly instantiated by the BallWorld system because it lacks a no-parameter constructor.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_ESMnUMFJEei0Sok_Gsjhng" general="_EEZb4MFJEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_EV9tAcFJEei0Sok_Gsjhng" name="shape" visibility="private" type="_ESMAQMFJEei0Sok_Gsjhng" association="_EXZQYMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWji5sFJEei0Sok_Gsjhng" name="ShapePaintStrategy" specification="_EUZmwMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWji58FJEei0Sok_Gsjhng" name="shape" type="_ESMAQMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWji6MFJEei0Sok_Gsjhng" type="_EEp6kMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), shape); // store at in the at field
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWkJ8MFJEei0Sok_Gsjhng" name="ShapePaintStrategy" specification="_EUa04MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWkJ8cFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWkJ8sFJEei0Sok_Gsjhng" name="shape" type="_ESMAQMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWkJ88FJEei0Sok_Gsjhng" type="_EEp6kMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>super(at); // store at in the at field
		this.shape = shape;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWkJ9MFJEei0Sok_Gsjhng" name="paintXfrm" specification="_EUbb8MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWkJ9cFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWkJ9sFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWkJ98FJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>((Graphics2D) g).fill(at.createTransformedShape(this.shape));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EUZmwMFJEei0Sok_Gsjhng" name="ShapePaintStrategy" method="_EWji5sFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EUaN0cFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EUaN0sFJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_EW3r-cFJEei0Sok_Gsjhng">
              <body>Constructor that allocates a new AffineTransform for internal use.
	 * @param shape The Shape to be painted.</body>
            </ownedComment>
            <ownedParameter xmi:id="_EUaN0MFJEei0Sok_Gsjhng" name="shape" type="_ESMAQMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUaN08FJEei0Sok_Gsjhng" type="_EEp6kMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUa04MFJEei0Sok_Gsjhng" name="ShapePaintStrategy" method="_EWkJ8MFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EUa048FJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EUa05MFJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_EW3r-sFJEei0Sok_Gsjhng">
              <body>Constructor that uses a supplied AffineTransform for internal use.
	 * @param at The AffineTransform to use.
	 * @param shape The Shape to be painted.</body>
            </ownedComment>
            <ownedParameter xmi:id="_EUa04cFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUa04sFJEei0Sok_Gsjhng" name="shape" type="_ESMAQMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUa05cFJEei0Sok_Gsjhng" type="_EEp6kMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUbb8MFJEei0Sok_Gsjhng" name="paintXfrm" method="_EWkJ9MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EUbb8cFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUbb8sFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUbb88FJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EEs94MFJEei0Sok_Gsjhng" name="UprightImagePaintStrategy">
          <ownedComment xmi:id="_EW3r-8FJEei0Sok_Gsjhng">
            <body>An image painting strategy that adds a paintCfg override that keeps the image upright no matter which way it is going.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_ESOcgMFJEei0Sok_Gsjhng" general="_EEhXsMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWkJ-MFJEei0Sok_Gsjhng" name="UprightImagePaintStrategy" specification="_EEtk8MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWkJ-cFJEei0Sok_Gsjhng" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWkJ-sFJEei0Sok_Gsjhng" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWkJ-8FJEei0Sok_Gsjhng" type="_EEs94MFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>super(filename, fillFactor);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWkJ_MFJEei0Sok_Gsjhng" name="paintCfg" specification="_EUcqEcFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWkJ_cFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWkJ_sFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>super.paintCfg(g, host);
		if (Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x)) > Math.PI / 2.0) {
			at.scale(1.0, -1.0);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EEtk8MFJEei0Sok_Gsjhng" name="UprightImagePaintStrategy" method="_EWkJ-MFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EEtk88FJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EEtk9MFJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_EEtk8cFJEei0Sok_Gsjhng" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EEtk8sFJEei0Sok_Gsjhng" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EEtk9cFJEei0Sok_Gsjhng" type="_EEs94MFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUcqEcFJEei0Sok_Gsjhng" name="paintCfg" visibility="protected" method="_EWkJ_MFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EUdRIMFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUdRIcFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EEvaIMFJEei0Sok_Gsjhng" name="UprightMultiPaintStrategy">
          <ownedComment xmi:id="_EW4TAMFJEei0Sok_Gsjhng">
            <body>An image painting strategy that adds a paintCfg override that keeps the image upright no matter which way it is going.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_ESQ4wMFJEei0Sok_Gsjhng" general="_EEm3QMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWkJ_8FJEei0Sok_Gsjhng" name="UprightMultiPaintStrategy" specification="_ESPDkMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWkKAMFJEei0Sok_Gsjhng" name="pstrats" type="_EEZb4MFJEei0Sok_Gsjhng">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EWkKAcFJEei0Sok_Gsjhng" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWkKAsFJEei0Sok_Gsjhng" type="_EEvaIMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), pstrats);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWkxAMFJEei0Sok_Gsjhng" name="UprightMultiPaintStrategy" specification="_EUd4MsFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWkxAcFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWkxAsFJEei0Sok_Gsjhng" name="pstrats" type="_EEZb4MFJEei0Sok_Gsjhng">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EWkxA8FJEei0Sok_Gsjhng" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EWkxBMFJEei0Sok_Gsjhng" type="_EEvaIMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>super(at, pstrats);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWkxBcFJEei0Sok_Gsjhng" name="paintCfg" specification="_EUftYMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWkxBsFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWkxB8FJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>super.paintCfg(g, host);
		if (Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x)) > Math.PI / 2.0) {
			at.scale(1.0, -1.0);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ESPDkMFJEei0Sok_Gsjhng" name="UprightMultiPaintStrategy" method="_EWkJ_8FJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_ESPqoMFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ESPqocFJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ESPDkcFJEei0Sok_Gsjhng" name="pstrats" type="_EEZb4MFJEei0Sok_Gsjhng">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ESPqpMFJEei0Sok_Gsjhng" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ESPqo8FJEei0Sok_Gsjhng" type="_EEvaIMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUd4MsFJEei0Sok_Gsjhng" name="UprightMultiPaintStrategy" method="_EWkxAMFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EUefQsFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EUefQ8FJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_EUefQMFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUefQcFJEei0Sok_Gsjhng" name="pstrats" type="_EEZb4MFJEei0Sok_Gsjhng">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EUfGUMFJEei0Sok_Gsjhng" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_EUefRcFJEei0Sok_Gsjhng" type="_EEvaIMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUftYMFJEei0Sok_Gsjhng" name="paintCfg" visibility="protected" method="_EWkxBcFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EUftYcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUftYsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EExPUMFJEei0Sok_Gsjhng" name="UprightShapePaintStrategy">
          <ownedComment xmi:id="_EW4TAcFJEei0Sok_Gsjhng">
            <body>A shape painting strategy that adds a paintCfg override that keeps the shape upright no matter which direction it is going.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_ESSG4MFJEei0Sok_Gsjhng" general="_EEp6kMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWkxCMFJEei0Sok_Gsjhng" name="UprightShapePaintStrategy" specification="_EUgUcsFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWkxCcFJEei0Sok_Gsjhng" name="shape" type="_ESMAQMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWkxCsFJEei0Sok_Gsjhng" type="_EExPUMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), shape);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWkxC8FJEei0Sok_Gsjhng" name="UprightShapePaintStrategy" specification="_EUg7hMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWkxDMFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWkxDcFJEei0Sok_Gsjhng" name="shape" type="_ESMAQMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWkxDsFJEei0Sok_Gsjhng" type="_EExPUMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>super(at, shape);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWlYEMFJEei0Sok_Gsjhng" name="paintCfg" specification="_EUhilMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWlYEcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EWlYEsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
            <language>java</language>
            <body>super.paintCfg(g, host);
		if (Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x)) > Math.PI / 2.0) {
			at.scale(1.0, -1.0);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EUgUcsFJEei0Sok_Gsjhng" name="UprightShapePaintStrategy" method="_EWkxCMFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EUg7gcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EUg7gsFJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_EUg7gMFJEei0Sok_Gsjhng" name="shape" type="_ESMAQMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUg7g8FJEei0Sok_Gsjhng" type="_EExPUMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUg7hMFJEei0Sok_Gsjhng" name="UprightShapePaintStrategy" method="_EWkxC8FJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EUhikcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EUhiksFJEei0Sok_Gsjhng" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_EUg7hcFJEei0Sok_Gsjhng" name="at" type="_ER3QIMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUhikMFJEei0Sok_Gsjhng" name="shape" type="_ESMAQMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUhik8FJEei0Sok_Gsjhng" type="_EExPUMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EUhilMFJEei0Sok_Gsjhng" name="paintCfg" visibility="protected" method="_EWlYEMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EUhilcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
            <ownedParameter xmi:id="_EUhilsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXVmAMFJEei0Sok_Gsjhng" name="" memberEnd="_EXVmAcFJEei0Sok_Gsjhng _EV3mYMFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXVmAcFJEei0Sok_Gsjhng" name="" type="_EETVQMFJEei0Sok_Gsjhng" association="_EXVmAMFJEei0Sok_Gsjhng"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXVmA8FJEei0Sok_Gsjhng" name="" memberEnd="_EXVmBMFJEei0Sok_Gsjhng _EV4NccFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXVmBMFJEei0Sok_Gsjhng" name="" type="_EEZb4MFJEei0Sok_Gsjhng" association="_EXVmA8FJEei0Sok_Gsjhng"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXWNEcFJEei0Sok_Gsjhng" name="" memberEnd="_EXWNEsFJEei0Sok_Gsjhng _EV5bkMFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXWNEsFJEei0Sok_Gsjhng" name="" type="_EEeUYMFJEei0Sok_Gsjhng" association="_EXWNEcFJEei0Sok_Gsjhng"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXW0IcFJEei0Sok_Gsjhng" name="" memberEnd="_EXW0IsFJEei0Sok_Gsjhng _EV6pssFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXW0IsFJEei0Sok_Gsjhng" name="" type="_EEhXsMFJEei0Sok_Gsjhng" association="_EXW0IcFJEei0Sok_Gsjhng"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXXbMcFJEei0Sok_Gsjhng" name="" memberEnd="_EXXbMsFJEei0Sok_Gsjhng _EV7QwcFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXXbMsFJEei0Sok_Gsjhng" name="" type="_EEhXsMFJEei0Sok_Gsjhng" association="_EXXbMcFJEei0Sok_Gsjhng"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXYCQcFJEei0Sok_Gsjhng" name="" memberEnd="_EXYCQsFJEei0Sok_Gsjhng _EV730MFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXYCQsFJEei0Sok_Gsjhng" name="" type="_EEhXsMFJEei0Sok_Gsjhng" association="_EXYCQcFJEei0Sok_Gsjhng"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXYpUcFJEei0Sok_Gsjhng" name="" memberEnd="_EXYpUsFJEei0Sok_Gsjhng _EV9F8MFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXYpUsFJEei0Sok_Gsjhng" name="" type="_EEm3QMFJEei0Sok_Gsjhng" association="_EXYpUcFJEei0Sok_Gsjhng"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_EXZQYMFJEei0Sok_Gsjhng" name="" memberEnd="_EXZQYcFJEei0Sok_Gsjhng _EV9tAcFJEei0Sok_Gsjhng">
          <ownedEnd xmi:id="_EXZQYcFJEei0Sok_Gsjhng" name="" type="_EEp6kMFJEei0Sok_Gsjhng" association="_EXZQYMFJEei0Sok_Gsjhng"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_EDDYEMFJEei0Sok_Gsjhng" name="Ball">
        <ownedComment xmi:id="_EW0ooMFJEei0Sok_Gsjhng">
          <body>The Ball class provides methods and fields that are common to all balls.
@author Peter Dulworth (psd2)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_EVo84MFJEei0Sok_Gsjhng" name="p" visibility="private" type="_ERdngsFJEei0Sok_Gsjhng" association="_EXMcEcFJEei0Sok_Gsjhng"/>
        <ownedAttribute xmi:id="_EVpj8cFJEei0Sok_Gsjhng" name="r" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EVqLAMFJEei0Sok_Gsjhng" name="v" visibility="private" type="_ERdngsFJEei0Sok_Gsjhng" association="_EXNDIcFJEei0Sok_Gsjhng"/>
        <ownedAttribute xmi:id="_EVqLAsFJEei0Sok_Gsjhng" name="c" visibility="private" type="_ERcZYMFJEei0Sok_Gsjhng" association="_EXNqMcFJEei0Sok_Gsjhng"/>
        <ownedAttribute xmi:id="_EVqyEcFJEei0Sok_Gsjhng" name="prevInteraction" type="_EDDYEMFJEei0Sok_Gsjhng" association="_EW0oocFJEei0Sok_Gsjhng"/>
        <ownedAttribute xmi:id="_EVqyEsFJEei0Sok_Gsjhng" name="component" visibility="private" type="_ERdAcMFJEei0Sok_Gsjhng" association="_EXORQcFJEei0Sok_Gsjhng"/>
        <ownedAttribute xmi:id="_EVrZIcFJEei0Sok_Gsjhng" name="updateStrategy" type="_EEHIAMFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXO4UMFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EVtOUMFJEei0Sok_Gsjhng" value="(new IUpdateStrategyFac.NullFactory&lt;IBallCmd>()).make()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EVtOUcFJEei0Sok_Gsjhng" name="paintStrategy" type="_EDutgMFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXO4U8FJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EVtOUsFJEei0Sok_Gsjhng" value="IPaintStrategy.NULL"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EVtOU8FJEei0Sok_Gsjhng" name="interactStrategy" type="_EDpN8MFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXPfYcFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EVt1YMFJEei0Sok_Gsjhng" value="IInteractStrategy.NULL"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EVt1YcFJEei0Sok_Gsjhng" name="NULL" isLeaf="true" isStatic="true" type="_EDDYEMFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXQGccFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EVt1YsFJEei0Sok_Gsjhng" value="new Ball() {}"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_ETzw4MFJEei0Sok_Gsjhng" client="_EDDYEMFJEei0Sok_Gsjhng" supplier="_ERfcscFJEei0Sok_Gsjhng" contract="_ERfcscFJEei0Sok_Gsjhng"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWaY8MFJEei0Sok_Gsjhng" name="Ball" specification="_EDHCcMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWaY8cFJEei0Sok_Gsjhng" type="_EDDYEMFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>setLocation(new Point(0, 0));
		setRadius(0);
		setVelocity(new Point(0, 0));
		setColor(Color.BLACK);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWaY8sFJEei0Sok_Gsjhng" name="Ball" specification="_ET1mEMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWaY88FJEei0Sok_Gsjhng" name="initialLocation" type="_ERdngsFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EWaY9MFJEei0Sok_Gsjhng" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_EWaY9cFJEei0Sok_Gsjhng" name="velocity" type="_ERdngsFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EWaY9sFJEei0Sok_Gsjhng" name="color" type="_ERcZYMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EWaY98FJEei0Sok_Gsjhng" name="component" type="_ERdAcMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EWaY-MFJEei0Sok_Gsjhng" name="updateStrategy" type="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EWaY-cFJEei0Sok_Gsjhng" name="paintStrategy" type="_EDutgMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EWaY-sFJEei0Sok_Gsjhng" type="_EDDYEMFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>this.p = initialLocation;
		this.r = radius;
		this.v = velocity;
		this.c = color;
		this.component = component;
		
		this.setUpdateStrategy(updateStrategy);

		// IPaintStrategy.init() is used to initialize the strategy and host ball. This method must be run whenever the ball gets a new strategy, 
		// such as in a setPaintStrategy method or even in the constructor of the ball. The safest way to do this is to have 
		// the constructor set the paint strategy field by calling the setPaintStrategy method thus keeping the code to
		// initialize the strategy only in a single location.
		this.setPaintStrategy(paintStrategy);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWbAAMFJEei0Sok_Gsjhng" name="update" specification="_ET3bQMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWbAAcFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EWbAAsFJEei0Sok_Gsjhng" name="cmd" type="_EDmxsMFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>cmd.apply(this, disp);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWbAA8FJEei0Sok_Gsjhng" name="updateState" specification="_ET6ekMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWbABMFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>updateStrategy.updateState(this, disp); // update this ball's state using the strategy.     
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWbABcFJEei0Sok_Gsjhng" name="move" specification="_EDI3oMFJEei0Sok_Gsjhng">
          <language>java</language>
          <body>this.p.translate(v.x, v.y);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWbABsFJEei0Sok_Gsjhng" name="bounce" specification="_EDJesMFJEei0Sok_Gsjhng">
          <language>java</language>
          <body>if (p.x + r > component.getWidth()) { // right
			p.x = p.x - 2 * (p.x - component.getWidth() + r);
			v.x = (int) Math.round(-1.0 * v.x);
		}

		if (p.x - r &lt; 0) { // left
			p.x = p.x + 2 * (-p.x + r);
			v.x = (int) Math.round(-1.0 * v.x);
		}

		if (p.y + r > component.getHeight()) { // bottom
			p.y = p.y - 2 * (p.y - component.getHeight() + r);
			v.y = (int) Math.round(-1.0 * v.y);
		}

		if (p.y - r &lt; 0) { // top
			p.y = p.y + 2 * (-p.y + r);
			v.y = (int) Math.round(-1.0 * v.y);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWbAB8FJEei0Sok_Gsjhng" name="paint" specification="_ET7ssMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWbACMFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>this.paintStrategy.paint(g, this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWbACcFJEei0Sok_Gsjhng" name="interactWith" specification="_ET8TwMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWbACsFJEei0Sok_Gsjhng" name="target" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EWbAC8FJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EWbADMFJEei0Sok_Gsjhng" name="interactFirst">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.interactStrategy.interact(this, target, disp, interactFirst);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWbnEMFJEei0Sok_Gsjhng" name="getVelocity" specification="_EDKFwMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWbnEcFJEei0Sok_Gsjhng" type="_ERdngsFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>return this.v;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWbnEsFJEei0Sok_Gsjhng" name="setVelocity" specification="_ET860sFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWbnE8FJEei0Sok_Gsjhng" name="v" type="_ERdngsFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>this.v = v;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWbnFMFJEei0Sok_Gsjhng" name="getLocation" specification="_EDKs0MFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWbnFcFJEei0Sok_Gsjhng" type="_ERdngsFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>return p;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWbnFsFJEei0Sok_Gsjhng" name="setLocation" specification="_ET9h4sFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWbnF8FJEei0Sok_Gsjhng" name="p" type="_ERdngsFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>this.p = p;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWbnGMFJEei0Sok_Gsjhng" name="getRadius" specification="_EDLT4MFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWbnGcFJEei0Sok_Gsjhng" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return r;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWcOIMFJEei0Sok_Gsjhng" name="setRadius" specification="_EDL68MFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWcOIcFJEei0Sok_Gsjhng" name="r">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.r = r;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWcOIsFJEei0Sok_Gsjhng" name="getColor" specification="_EDL68sFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWcOI8FJEei0Sok_Gsjhng" type="_ERcZYMFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>return c;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWcOJMFJEei0Sok_Gsjhng" name="setColor" specification="_ET-I8cFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWcOJcFJEei0Sok_Gsjhng" name="c" type="_ERcZYMFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>this.c = c;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWcOJsFJEei0Sok_Gsjhng" name="getContainer" specification="_EDMiAMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWcOJ8FJEei0Sok_Gsjhng" type="_ERdAcMFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>return component;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWcOKMFJEei0Sok_Gsjhng" name="setContainer" specification="_ET_XEMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWcOKcFJEei0Sok_Gsjhng" name="component" type="_ERdAcMFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>this.component = component;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWcOKsFJEei0Sok_Gsjhng" name="setUpdateStrategy" specification="_ERh48MFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWcOK8FJEei0Sok_Gsjhng" name="updateStrategy" type="_EEHIAMFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>this.updateStrategy = updateStrategy;
		this.updateStrategy.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWcOLMFJEei0Sok_Gsjhng" name="setPaintStrategy" specification="_ERjHEcFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWcOLcFJEei0Sok_Gsjhng" name="paintStrategy" type="_EDutgMFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>this.paintStrategy = paintStrategy;
		this.paintStrategy.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWc1MMFJEei0Sok_Gsjhng" name="setInteractStrategy" specification="_ERjHE8FJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWc1McFJEei0Sok_Gsjhng" name="interactStrategy" type="_EDpN8MFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>this.interactStrategy = interactStrategy;
		// TODO: initialize strategy?
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_EDHCcMFJEei0Sok_Gsjhng" name="Ball" method="_EWaY8MFJEei0Sok_Gsjhng">
          <eAnnotations xmi:id="_EDHCccFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_EDHCcsFJEei0Sok_Gsjhng" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_EW1PsMFJEei0Sok_Gsjhng">
            <body>No parameter constructor used for creating a null ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_EDHpgMFJEei0Sok_Gsjhng" type="_EDDYEMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EDI3oMFJEei0Sok_Gsjhng" name="move" method="_EWbABcFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1Ps8FJEei0Sok_Gsjhng">
            <body>The following method updates the balls {@link #p location} based on its {@link #v velocity vector}.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_EDJesMFJEei0Sok_Gsjhng" name="bounce" method="_EWbABsFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1PtMFJEei0Sok_Gsjhng">
            <body>The following method detecting if the edge of the ball is beyond the top/bottom left/right edge of the {@link #component canvas}.
	 * It updates the {@link #p location} of the ball based on which wall it went past.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_EDKFwMFJEei0Sok_Gsjhng" name="getVelocity" method="_EWbnEMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1Pt8FJEei0Sok_Gsjhng">
            <body>Gets the current velocity.
	 * @return current velocity.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ET860cFJEei0Sok_Gsjhng" type="_ERdngsFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EDKs0MFJEei0Sok_Gsjhng" name="getLocation" method="_EWbnFMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1PucFJEei0Sok_Gsjhng">
            <body>@return the p</body>
          </ownedComment>
          <ownedParameter xmi:id="_ET9h4cFJEei0Sok_Gsjhng" type="_ERdngsFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EDLT4MFJEei0Sok_Gsjhng" name="getRadius" method="_EWbnGMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1Pu8FJEei0Sok_Gsjhng">
            <body>@return r, the radius.</body>
          </ownedComment>
          <ownedParameter xmi:id="_EDLT4cFJEei0Sok_Gsjhng" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_EDL68MFJEei0Sok_Gsjhng" name="setRadius" method="_EWcOIMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1PvMFJEei0Sok_Gsjhng">
            <body>@param r The radius to set.</body>
          </ownedComment>
          <ownedParameter xmi:id="_EDL68cFJEei0Sok_Gsjhng" name="r">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_EDL68sFJEei0Sok_Gsjhng" name="getColor" method="_EWcOIsFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1PvcFJEei0Sok_Gsjhng">
            <body>@return the c</body>
          </ownedComment>
          <ownedParameter xmi:id="_ET-I8MFJEei0Sok_Gsjhng" type="_ERcZYMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EDMiAMFJEei0Sok_Gsjhng" name="getContainer" method="_EWcOJsFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW12wMFJEei0Sok_Gsjhng">
            <body>@return the component</body>
          </ownedComment>
          <ownedParameter xmi:id="_ET-wAMFJEei0Sok_Gsjhng" type="_ERdAcMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ERh48MFJEei0Sok_Gsjhng" name="setUpdateStrategy" method="_EWcOKsFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW12wsFJEei0Sok_Gsjhng">
            <body>@param updateStrategy The update strategy to set.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ERigAMFJEei0Sok_Gsjhng" name="updateStrategy" type="_EEHIAMFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ERjHEcFJEei0Sok_Gsjhng" name="setPaintStrategy" method="_EWcOLMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW12w8FJEei0Sok_Gsjhng">
            <body>@param paintStrategy The paint strategy to set the instance's paint strategy to.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ERjHEsFJEei0Sok_Gsjhng" name="paintStrategy" type="_EDutgMFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ERjHE8FJEei0Sok_Gsjhng" name="setInteractStrategy" method="_EWc1MMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW12xMFJEei0Sok_Gsjhng">
            <body>@param interactStrategy the interactStrategy to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_ERjHFMFJEei0Sok_Gsjhng" name="interactStrategy" type="_EDpN8MFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ET1mEMFJEei0Sok_Gsjhng" name="Ball" method="_EWaY8sFJEei0Sok_Gsjhng">
          <eAnnotations xmi:id="_ET2NJcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ET2NJsFJEei0Sok_Gsjhng" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_EW1PscFJEei0Sok_Gsjhng">
            <body>The following constructor takes all the parameters and assigns them to their respective fields in the ball.
	 * 
	 * @param initialLocation A point representing the initial location of the center of the ball.
	 * @param radius An integer representing the radius of the ball.
	 * @param velocity A point representing the velocity vector of the ball.
	 * @param color A color representing the color of the ball.
	 * @param component The component on which the ball will be painted.
	 * @param updateStrategy The update strategy that the ball uses.
	 * @param paintStrategy The paint strategy that the ball uses.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ET1mEcFJEei0Sok_Gsjhng" name="initialLocation" type="_ERdngsFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_ET1mEsFJEei0Sok_Gsjhng" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ET2NIMFJEei0Sok_Gsjhng" name="velocity" type="_ERdngsFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_ET2NIcFJEei0Sok_Gsjhng" name="color" type="_ERcZYMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_ET2NIsFJEei0Sok_Gsjhng" name="component" type="_ERdAcMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_ET2NI8FJEei0Sok_Gsjhng" name="updateStrategy" type="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_ET2NJMFJEei0Sok_Gsjhng" name="paintStrategy" type="_EDutgMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_ET2NJ8FJEei0Sok_Gsjhng" type="_EDDYEMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ET3bQMFJEei0Sok_Gsjhng" name="update" method="_EWbAAMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_ET4CUMFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_ET4CUcFJEei0Sok_Gsjhng" name="cmd" type="_EDmxsMFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ET6ekMFJEei0Sok_Gsjhng" name="updateState" method="_EWbAA8FJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1PssFJEei0Sok_Gsjhng">
            <body>Update the state of the ball. Delegates to the update strategy.
	 * @param disp The Dispatcher that sent the command that is calling this method.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ET6ekcFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ET7ssMFJEei0Sok_Gsjhng" name="paint" method="_EWbAB8FJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1PtcFJEei0Sok_Gsjhng">
            <body>The following method paints the ball on the {@link #component canvas} based on its {@link #c color} field, {@link #p location} and its {@link #r radius}. 
	 * 
	 * @param g This is the {@link java.awt.Graphics Graphics} object that the ball should paint itself on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ET7sscFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ET8TwMFJEei0Sok_Gsjhng" name="interactWith" method="_EWbACcFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1PtsFJEei0Sok_Gsjhng">
            <body>Used to invoke the ball's interaction strategy. 
	 * @param target The Ball that is the &quot;other ball&quot; in the perspective of this processing.
	 * @param disp The dispatcher.
	 * @param interactFirst A boolean denoting whether this is the first in a series (usually two) of interactions.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ET8TwcFJEei0Sok_Gsjhng" name="target" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_ET8TwsFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_ET8Tw8FJEei0Sok_Gsjhng" name="interactFirst">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ET860sFJEei0Sok_Gsjhng" name="setVelocity" method="_EWbnEsFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1PuMFJEei0Sok_Gsjhng">
            <body>Sets a new velocity.
	 * @param v New velocity to set.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ET9h4MFJEei0Sok_Gsjhng" name="v" type="_ERdngsFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ET9h4sFJEei0Sok_Gsjhng" name="setLocation" method="_EWbnFsFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1PusFJEei0Sok_Gsjhng">
            <body>@param p the p to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_ET9h48FJEei0Sok_Gsjhng" name="p" type="_ERdngsFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ET-I8cFJEei0Sok_Gsjhng" name="setColor" method="_EWcOJMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW1PvsFJEei0Sok_Gsjhng">
            <body>@param c the c to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_ET-I8sFJEei0Sok_Gsjhng" name="c" type="_ERcZYMFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ET_XEMFJEei0Sok_Gsjhng" name="setContainer" method="_EWcOKMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW12wcFJEei0Sok_Gsjhng">
            <body>@param component the component to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_ET_XEcFJEei0Sok_Gsjhng" name="component" type="_ERdAcMFJEei0Sok_Gsjhng"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_EDW6EMFJEei0Sok_Gsjhng" name="BallModel">
        <ownedComment xmi:id="_EW12xcFJEei0Sok_Gsjhng">
          <body>The class that manages the creation, deletion and animation of the balls.
@author Peter Dulworth (psd2), Andrew Hadad (aah6)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_EVuccMFJEei0Sok_Gsjhng" name="m2vAdapter" visibility="private" type="_EDrqMMFJEei0Sok_Gsjhng" association="_EXQGdMFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EVvDgMFJEei0Sok_Gsjhng" value="IM2VAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EVvDgsFJEei0Sok_Gsjhng" name="myDispatcher" visibility="private" type="_ERe1ocFJEei0Sok_Gsjhng" association="_EXQtgcFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EVwRoMFJEei0Sok_Gsjhng" value="new SequentialDispatcher&lt;IBallCmd>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EVwRosFJEei0Sok_Gsjhng" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EVw4sMFJEei0Sok_Gsjhng" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EVw4ssFJEei0Sok_Gsjhng" name="timer" visibility="private" type="_ERomocFJEei0Sok_Gsjhng" association="_EXQthMFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EVxfwMFJEei0Sok_Gsjhng" value="new Timer(timeSlice, (e) -> m2vAdapter.update())"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EVyG0MFJEei0Sok_Gsjhng" name="switcher" visibility="private" type="_EG26AMFJEei0Sok_Gsjhng" association="_EXRUkcFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EVyt4cFJEei0Sok_Gsjhng" value="new SwitcherStrategy&lt;IBallCmd>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EVyt48FJEei0Sok_Gsjhng" name="_errorStrategyFac" visibility="private" type="_EEJkQMFJEei0Sok_Gsjhng" association="_EXSiscFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EVz8AMFJEei0Sok_Gsjhng" value="new IUpdateStrategyFac.ErrorFactory&lt;IBallCmd>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EV0jEMFJEei0Sok_Gsjhng" name="updateStrategyLoader" visibility="package" type="_ERpNssFJEei0Sok_Gsjhng" association="_EXTJwcFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EV1KIcFJEei0Sok_Gsjhng" value="new ObjectLoader&lt;IUpdateStrategy&lt;IBallCmd>>((a) -> _errorStrategyFac.make())"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EV1xMcFJEei0Sok_Gsjhng" name="_errorPaintStrategyFac" visibility="private" type="_EDwisMFJEei0Sok_Gsjhng" association="_EXTw0cFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EV1xMsFJEei0Sok_Gsjhng" value="IPaintStrategyFac.NULL"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EV2YQMFJEei0Sok_Gsjhng" name="paintStrategyLoader" visibility="package" type="_ERpNssFJEei0Sok_Gsjhng" association="_EXUX4cFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EV2YQsFJEei0Sok_Gsjhng" value="new ObjectLoader&lt;IPaintStrategy>((a) -> _errorPaintStrategyFac.make())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWc1MsFJEei0Sok_Gsjhng" name="BallModel" specification="_ERrC4MFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWc1M8FJEei0Sok_Gsjhng" name="m2vAdapter" type="_EDrqMMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EWc1NMFJEei0Sok_Gsjhng" type="_EDW6EMFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>this.m2vAdapter = m2vAdapter;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWdcQMFJEei0Sok_Gsjhng" name="loadUpdateStrategy" specification="_EDZ9YMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWdcQcFJEei0Sok_Gsjhng" name="strategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_EWdcQsFJEei0Sok_Gsjhng" type="_EEHIAMFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>return this.updateStrategyLoader.loadInstance(strategyName, new Object[] {});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWdcQ8FJEei0Sok_Gsjhng" name="loadPaintStrategy" specification="_EDbykMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWdcRMFJEei0Sok_Gsjhng" name="paintStrategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_EWdcRcFJEei0Sok_Gsjhng" type="_EDutgMFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>return this.paintStrategyLoader.loadInstance(paintStrategyName, new Object[] {});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWdcRsFJEei0Sok_Gsjhng" name="makeBall" specification="_ERrp9sFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWdcR8FJEei0Sok_Gsjhng" name="updateStrategy" type="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EWdcSMFJEei0Sok_Gsjhng" name="paintStrategy" type="_EDutgMFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>// Generate random initial conditions for the ball.
		int r = Randomizer.Singleton.randomInt(15, 30);
		Point p = Randomizer.Singleton
				.randomLoc(new Dimension(m2vAdapter.getPnlWidth() - (2 * r), m2vAdapter.getPnlHeight() - (2 * r)));
		p.x += r; // move p to the right by r
		p.y += r; // move p down by r
		Point v = Randomizer.Singleton.randomVel(new Rectangle(7, 7));
		if (v.x == 0 || v.y == 0) { // Ensure the ball has a non-zero velocity.
			v.x = 1;
			v.y = 1;
		}
		Color c = Randomizer.Singleton.randomColor();
		Component pnlCenter = m2vAdapter.getComponent();

		Ball newBall = new Ball(p, r, v, c, pnlCenter, updateStrategy, paintStrategy);
		myDispatcher.addObserver(newBall); // Add the ball to the dispatcher.
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWeDUMFJEei0Sok_Gsjhng" name="switchSwitcherStrategy" specification="_ERs4EMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWeDUcFJEei0Sok_Gsjhng" name="newStrategy" type="_EEHIAMFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>switcher.setStrategy(newStrategy);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWeqYMFJEei0Sok_Gsjhng" name="clearBalls" specification="_EDcZoMFJEei0Sok_Gsjhng">
          <language>java</language>
          <body>myDispatcher.removeAllObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWeqYcFJEei0Sok_Gsjhng" name="update" specification="_EUFdsMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWeqYsFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
          <language>java</language>
          <body>myDispatcher.updateAll((context, disp) -> {
			context.move();
			context.bounce();

			// Variant behavior:
			context.paint(g);
			context.updateState(disp);
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWeqY8FJEei0Sok_Gsjhng" name="start" specification="_EDdAsMFJEei0Sok_Gsjhng">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWfRcMFJEei0Sok_Gsjhng" name="makeUpdateStrategyFac" specification="_EDdAscFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWfRccFJEei0Sok_Gsjhng" name="className">
            <eAnnotations xmi:id="_EWfRcsFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EWfRc8FJEei0Sok_Gsjhng" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_EWfRdMFJEei0Sok_Gsjhng" type="_EEJkQMFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>if (null == loadUpdateStrategy(fixName(&quot;model.strategy&quot;, className, &quot;Strategy&quot;)))
			return _errorStrategyFac;
		return new IUpdateStrategyFac&lt;IBallCmd>() {
			/**
			 * Instantiate a strategy corresponding to the given class name.
			 * @return An IUpdateStrategy instance
			 */
			public IUpdateStrategy&lt;IBallCmd> make() {
				return loadUpdateStrategy(fixName(&quot;model.strategy&quot;, className, &quot;Strategy&quot;));
			}

			/**
			 * Return the given class name string
			 */
			public String toString() {
				return className;
			}
		};
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWfRdcFJEei0Sok_Gsjhng" name="makePaintStrategyFac" specification="_EDeO0sFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWfRdsFJEei0Sok_Gsjhng" name="className">
            <eAnnotations xmi:id="_EWfRd8FJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EWfReMFJEei0Sok_Gsjhng" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_EWfRecFJEei0Sok_Gsjhng" type="_EDwisMFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>if (null == loadPaintStrategy(fixName(&quot;model.paint.strategy&quot;, className, &quot;PaintStrategy&quot;))) {
			return null; // TODO: make error paint strategy
			//			return _errorStrategyFac;
		}
		return new IPaintStrategyFac() {
			/**
			 * Instantiate a strategy corresponding to the given class name.
			 * @return An IUpdateStrategy instance
			 */
			public IPaintStrategy make() {
				return loadPaintStrategy(fixName(&quot;model.paint.strategy&quot;, className, &quot;PaintStrategy&quot;));
			}

			/**
			 * Return the given class name string
			 */
			public String toString() {
				return className;
			}
		};
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWfResFJEei0Sok_Gsjhng" name="fixName" specification="_EDe14sFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWfRe8FJEei0Sok_Gsjhng" name="folder">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_EWfRfMFJEei0Sok_Gsjhng" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_EWfRfcFJEei0Sok_Gsjhng" name="append">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_EWfRfsFJEei0Sok_Gsjhng" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return folder + &quot;.&quot; + className + append;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWf4gMFJEei0Sok_Gsjhng" name="combineStrategyFacs" specification="_ERuGMcFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWf4gcFJEei0Sok_Gsjhng" name="stratFac1" type="_EEJkQMFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EWf4gsFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EWf4g8FJEei0Sok_Gsjhng" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_EWf4hMFJEei0Sok_Gsjhng" name="stratFac2" type="_EEJkQMFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_EWf4hcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EWf4hsFJEei0Sok_Gsjhng" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_EWf4h8FJEei0Sok_Gsjhng" type="_EEJkQMFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2)
			return _errorStrategyFac;
		return new IUpdateStrategyFac&lt;IBallCmd>() {
			/**
			 * Instantiate a new MultiStrategy with the strategies from the given strategy factories
			 * @return A MultiStrategy instance
			 */
			public IUpdateStrategy&lt;IBallCmd> make() {
				return new MultiStrategy&lt;IBallCmd>(stratFac1.make(), stratFac2.make());
			}

			/**
			 * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
			 */
			public String toString() {
				return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
			}
		};
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWf4iMFJEei0Sok_Gsjhng" name="getSwitcherStrategy" specification="_EDgEAMFJEei0Sok_Gsjhng">
          <ownedParameter xmi:id="_EWf4icFJEei0Sok_Gsjhng" type="_EG26AMFJEei0Sok_Gsjhng" direction="return"/>
          <language>java</language>
          <body>return this.switcher;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_EDZ9YMFJEei0Sok_Gsjhng" name="loadUpdateStrategy" visibility="private" method="_EWdcQMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW12x8FJEei0Sok_Gsjhng">
            <body>The following method returns an instance of an IUpdateStrategy, given a fully qualified class name (package.classname) of
	 * a class that implements IUpdateStrategy.
	 * The method assumes that there is only one constructor for the supplied class that has the same *number* of
	 * input parameters as specified in the args array and that it conforms to a specific
	 * signature, i.e. specific order and types of input parameters in the args array.
	 * @param strategyName A string that is the fully qualified class name of the desired object.
	 * @return An instance of the supplied class.</body>
          </ownedComment>
          <ownedParameter xmi:id="_EDZ9YcFJEei0Sok_Gsjhng" name="strategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ERrp9MFJEei0Sok_Gsjhng" type="_EEHIAMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EDbykMFJEei0Sok_Gsjhng" name="loadPaintStrategy" visibility="private" method="_EWdcQ8FJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW12yMFJEei0Sok_Gsjhng">
            <body>The following method returns an instance of an IUpdateStrategy, given a fully qualified class name (package.classname) of
	 * a class that implements IUpdateStrategy.
	 * The method assumes that there is only one constructor for the supplied class that has the same *number* of
	 * input parameters as specified in the args array and that it conforms to a specific
	 * signature, i.e. specific order and types of input parameters in the args array.
	 * @param paintStrategyName A string that is the fully qualified class name of the desired object.
	 * @return An instance of the supplied class.</body>
          </ownedComment>
          <ownedParameter xmi:id="_EDbykcFJEei0Sok_Gsjhng" name="paintStrategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ERrp9cFJEei0Sok_Gsjhng" type="_EDutgMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EDcZoMFJEei0Sok_Gsjhng" name="clearBalls" method="_EWeqYMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW2d0cFJEei0Sok_Gsjhng">
            <body>The following method removes all {@link model.Ball ABalls} from the dispatcher.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_EDdAsMFJEei0Sok_Gsjhng" name="start" method="_EWeqY8FJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW2d08FJEei0Sok_Gsjhng">
            <body>The following method starts the model by starting the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_EDdAscFJEei0Sok_Gsjhng" name="makeUpdateStrategyFac" method="_EWfRcMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW2d1MFJEei0Sok_Gsjhng">
            <body>Returns an IUpdateStrategyFac that can instantiate the strategy specified by
	 * className. Returns a factory for a beeping error strategy if className is null. 
	 * The toString() of the returned factory is the className.
	 * 
	 * @param className Shortened name of desired strategy.
	 * @return A factory to make that strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_EDdAssFJEei0Sok_Gsjhng" name="className">
            <eAnnotations xmi:id="_EDeO0MFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EDeO0cFJEei0Sok_Gsjhng" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ERtfIcFJEei0Sok_Gsjhng" type="_EEJkQMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EDeO0sFJEei0Sok_Gsjhng" name="makePaintStrategyFac" method="_EWfRdcFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW2d1cFJEei0Sok_Gsjhng">
            <body>Returns an IPaintStrategyFac that can instantiate the strategy specified by 
	 * className. Returns a factory for a beeping error strategy if className is null. 
	 * The toString() of the returned factory is the className.
	 * 
	 * @param className Shortened name of desired strategy.
	 * @return A factory to make that strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_EDeO08FJEei0Sok_Gsjhng" name="className">
            <eAnnotations xmi:id="_EDe14MFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_EDe14cFJEei0Sok_Gsjhng" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ERuGMMFJEei0Sok_Gsjhng" type="_EDwisMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EDe14sFJEei0Sok_Gsjhng" name="fixName" visibility="private" method="_EWfResFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW2d1sFJEei0Sok_Gsjhng">
            <body>Converts a shortened class name (XXX) to a fully qualified class name (folder.XXXappend).
	 * @param folder The name of the folder for fully qualified class name.
	 * @param className The abbreviated, shortened name.
	 * @param append The string to append to the end.
	 * @return The fully qualified class name.</body>
          </ownedComment>
          <ownedParameter xmi:id="_EDe148FJEei0Sok_Gsjhng" name="folder">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_EDfc8MFJEei0Sok_Gsjhng" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_EDfc8cFJEei0Sok_Gsjhng" name="append">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_EDfc8sFJEei0Sok_Gsjhng" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_EDgEAMFJEei0Sok_Gsjhng" name="getSwitcherStrategy" method="_EWf4iMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW2d2MFJEei0Sok_Gsjhng">
            <body>@return The switcher field.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ERv7YcFJEei0Sok_Gsjhng" type="_EG26AMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ERrC4MFJEei0Sok_Gsjhng" name="BallModel" method="_EWc1MsFJEei0Sok_Gsjhng">
          <eAnnotations xmi:id="_ERrp8cFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ERrp8sFJEei0Sok_Gsjhng" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_EW12xsFJEei0Sok_Gsjhng">
            <body>The BallModel constructor. Creates a new BallModel by taking an adapter.
	 * @param m2vAdapter Constructor is supplied with an instance of the model-to-view adapter.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ERrp8MFJEei0Sok_Gsjhng" name="m2vAdapter" type="_EDrqMMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_ERrp88FJEei0Sok_Gsjhng" type="_EDW6EMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ERrp9sFJEei0Sok_Gsjhng" name="makeBall" method="_EWdcRsFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW12ycFJEei0Sok_Gsjhng">
            <body>The following method creates an instance of an Ball (with random parameters), given a shortened class name (model.XXXStrategy) of a 
	 * update strategy. It then adds the ball as an observer to the dispatcher.
	 * @param updateStrategy The update strategy of the ball.
	 * @param paintStrategy An IPaintStrategy for the new ball to use.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ERrp98FJEei0Sok_Gsjhng" name="updateStrategy" type="_EEHIAMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_ERsRAMFJEei0Sok_Gsjhng" name="paintStrategy" type="_EDutgMFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ERs4EMFJEei0Sok_Gsjhng" name="switchSwitcherStrategy" method="_EWeDUMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW2d0MFJEei0Sok_Gsjhng">
            <body>Sets the strategy of the switcher to newStrategy.
	 * @param newStrategy The new strategy to give the switcher.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ERs4EcFJEei0Sok_Gsjhng" name="newStrategy" type="_EEHIAMFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ERuGMcFJEei0Sok_Gsjhng" name="combineStrategyFacs" method="_EWf4gMFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW2d18FJEei0Sok_Gsjhng">
            <body>Returns an IUpdateStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IUpdateStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IUpdateStrategyFac for a strategy
	 * @param stratFac2 An IUpdateStrategyFac for a strategy
	 * @return An IUpdateStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_ERuGMsFJEei0Sok_Gsjhng" name="stratFac1" type="_EEJkQMFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_ERutQsFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ERvUUMFJEei0Sok_Gsjhng" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_ERuGM8FJEei0Sok_Gsjhng" name="stratFac2" type="_EEJkQMFJEei0Sok_Gsjhng">
            <eAnnotations xmi:id="_ERvUUsFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ERvUU8FJEei0Sok_Gsjhng" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_ERutQcFJEei0Sok_Gsjhng" type="_EEJkQMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EUFdsMFJEei0Sok_Gsjhng" name="update" method="_EWeqYcFJEei0Sok_Gsjhng">
          <ownedComment xmi:id="_EW2d0sFJEei0Sok_Gsjhng">
            <body>This is the method that is called by the view's adapter to the model, i.e. is called by IV2MUpdateAdapter.paint().
	 * The following method notifies all the balls in the dispatcher (which in turn calls the update method of each ball) and 
	 * passes each update method the correct {@link java.awt.Graphics Graphics} object to paint on.
	 * @param g The Graphics object from the view's paintComponent() call.</body>
          </ownedComment>
          <ownedParameter xmi:id="_EUFdscFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_EDmxsMFJEei0Sok_Gsjhng" name="IBallCmd">
        <ownedOperation xmi:id="_EUGr0MFJEei0Sok_Gsjhng" name="apply" isAbstract="true">
          <ownedComment xmi:id="_EW2d2cFJEei0Sok_Gsjhng">
            <body>The method run by the ball's update method which is called when the ball is updated by the dispatcher.
	 * @param context The ball that is calling this method. The context under which the command is to be run.
	 * @param disp The dispatcher.</body>
          </ownedComment>
          <ownedParameter xmi:id="_EUGr0cFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EUGr0sFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_EDpN8MFJEei0Sok_Gsjhng" name="IInteractStrategy">
        <ownedComment xmi:id="_EW2d2sFJEei0Sok_Gsjhng">
          <body>Strategy that defines a directed interaction between two balls where the balls are NOT
equivalently processed. 
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_EDqcEMFJEei0Sok_Gsjhng" name="NULL" isLeaf="true" isStatic="true" type="_EDpN8MFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXIxsMFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EDrDIMFJEei0Sok_Gsjhng" value="(context, target, disp, isSource) -> {}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_EUH58MFJEei0Sok_Gsjhng" name="interact">
          <ownedParameter xmi:id="_EUH58cFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EUH58sFJEei0Sok_Gsjhng" name="target" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EUH588FJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EUH59MFJEei0Sok_Gsjhng" name="interactFirst">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_EDrqMMFJEei0Sok_Gsjhng" name="IM2VAdapter">
        <ownedComment xmi:id="_EW3E4MFJEei0Sok_Gsjhng">
          <body>This interface defines behavior the model expects from the view.

@author Peter Dulworth (psd2)
@author Andrew Hadad (aah6)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_EDsRQMFJEei0Sok_Gsjhng" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_EDrqMMFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXJ_0MFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EDs4UMFJEei0Sok_Gsjhng" value="new IM2VAdapter() {&#xA;&#x9;&#x9;public void update() {&#xA;&#x9;&#x9;};&#xA;&#xA;&#x9;&#x9;public Integer getPnlHeight() {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;};&#xA;&#xA;&#x9;&#x9;public Integer getPnlWidth() {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;};&#xA;&#xA;&#x9;&#x9;public Component getComponent() {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;};&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EDs4UsFJEei0Sok_Gsjhng" name="pnlHeight" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EDtfYsFJEei0Sok_Gsjhng" name="component" type="_ERdAcMFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXKm4MFJEei0Sok_Gsjhng"/>
        <ownedOperation xmi:id="_EDs4UcFJEei0Sok_Gsjhng" name="update">
          <ownedComment xmi:id="_EW3E4cFJEei0Sok_Gsjhng">
            <body>This is the method the model will call when it wants to update the view.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_EDtfYMFJEei0Sok_Gsjhng" name="getPnlWidth">
          <ownedComment xmi:id="_EW3E4sFJEei0Sok_Gsjhng">
            <body>This is the method the model will call to get the width of the view.
	 * @return The width of the view.</body>
          </ownedComment>
          <ownedParameter xmi:id="_EDtfYcFJEei0Sok_Gsjhng" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_EDutgMFJEei0Sok_Gsjhng" name="IPaintStrategy">
        <ownedComment xmi:id="_EW3E48FJEei0Sok_Gsjhng">
          <body>Top-level interface that represents a strategy used by a Ball when asked to perform variant paint operations. A Ball has only one IPaintStrategy.
@author Peter Dulworth (psd2)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_EDutgcFJEei0Sok_Gsjhng" name="NULL" isLeaf="true" isStatic="true" type="_EDutgMFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXKm48FJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EDvUkMFJEei0Sok_Gsjhng" value="new IPaintStrategy() {&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public void init(Ball host) {&#xA;&#x9;&#x9;&#x9;// No-op.&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public void paint(Graphics g, Ball host) {&#xA;&#x9;&#x9;&#x9;// No-op.&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_ERyXoMFJEei0Sok_Gsjhng" name="init">
          <ownedParameter xmi:id="_ERyXocFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EUJIEMFJEei0Sok_Gsjhng" name="paint">
          <ownedParameter xmi:id="_EUJIEcFJEei0Sok_Gsjhng" name="g" type="_ERdngMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EUJIEsFJEei0Sok_Gsjhng" name="host" type="_EDDYEMFJEei0Sok_Gsjhng"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_EDwisMFJEei0Sok_Gsjhng" name="IPaintStrategyFac">
        <ownedComment xmi:id="_EW3E5MFJEei0Sok_Gsjhng">
          <body>An interface that defines a factory that instantiates a specific IPaintStrategy.
@author Peter Dulworth (psd2)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_EEErwcFJEei0Sok_Gsjhng" name="NULL" isLeaf="true" isStatic="true" type="_EDwisMFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXLN8cFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EEFS0MFJEei0Sok_Gsjhng" value="new IPaintStrategyFac() {&#xA;&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy make() {&#xA;&#x9;&#x9;&#x9;return new IPaintStrategy() {&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void init(Ball host) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No-op.&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void paint(Graphics g, Ball host) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No-op.&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;};&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Return the given class name string&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public String toString() {&#xA;&#x9;&#x9;&#x9;return &quot;NULL PAINT FAC&quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EEFS0cFJEei0Sok_Gsjhng" name="ERROR" isLeaf="true" isStatic="true" type="_EDwisMFJEei0Sok_Gsjhng" isReadOnly="true" association="_EXL1AcFJEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EEF54MFJEei0Sok_Gsjhng" value="new IPaintStrategyFac() {&#xA;&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy make() {&#xA;&#x9;&#x9;&#x9;return new IPaintStrategy() {&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void init(Ball host) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No-op.&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void paint(Graphics g, Ball host) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No-op.&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;};&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Return the given class name string&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public String toString() {&#xA;&#x9;&#x9;&#x9;return &quot;ERROR PAINT FAC&quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_EEErwMFJEei0Sok_Gsjhng" name="make">
          <ownedComment xmi:id="_EW3E5cFJEei0Sok_Gsjhng">
            <body>Instantiate the specific IPaintStrategy for which this factory is defined.
	 * @return An IPaintStrategy instance.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ERy-sMFJEei0Sok_Gsjhng" type="_EDutgMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_EEHIAMFJEei0Sok_Gsjhng" name="IUpdateStrategy">
        <ownedComment xmi:id="_EW3E5sFJEei0Sok_Gsjhng">
          <body>The strategy that runs when a Ball updates its state. 
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter</body>
        </ownedComment>
        <ownedOperation xmi:id="_ERzlwMFJEei0Sok_Gsjhng" name="init">
          <ownedParameter xmi:id="_ERzlwcFJEei0Sok_Gsjhng" name="context" type="_EDDYEMFJEei0Sok_Gsjhng"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EUJIE8FJEei0Sok_Gsjhng" name="updateState">
          <ownedParameter xmi:id="_EUJIFMFJEei0Sok_Gsjhng" name="b" type="_EDDYEMFJEei0Sok_Gsjhng"/>
          <ownedParameter xmi:id="_EUJIFcFJEei0Sok_Gsjhng" name="disp" type="_ERe1ocFJEei0Sok_Gsjhng"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_EEJkQMFJEei0Sok_Gsjhng" name="IUpdateStrategyFac">
        <ownedComment xmi:id="_EW3E58FJEei0Sok_Gsjhng">
          <body>An interface that defines a factory that instantiates 
a specific IUpdateStrategy.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.</body>
        </ownedComment>
        <nestedClassifier xmi:type="uml:Class" xmi:id="_EEMAgMFJEei0Sok_Gsjhng" name="ErrorFactory" isLeaf="true">
          <eAnnotations xmi:id="_EEMAgcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_EEMAgsFJEei0Sok_Gsjhng" key="static"/>
          </eAnnotations>
          <ownedComment xmi:id="_EW3E6cFJEei0Sok_Gsjhng">
            <body>A factory for a beeping error strategy that beeps the speaker every 25 updates.
	 * Either use the _errorStrategyFac variable directly if you need a factory that makes an error strategy,
	 * or call _errorStrategyFac.make() to create an instance of a beeping error strategy.
	 * @param &lt;TMsg> The type of message that the supplied IDispatcher can send.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_ER0M0cFJEei0Sok_Gsjhng" client="_EEMAgMFJEei0Sok_Gsjhng" supplier="_EEJkQMFJEei0Sok_Gsjhng" contract="_EEJkQMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWf4isFJEei0Sok_Gsjhng" name="make" specification="_EENOoMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWf4i8FJEei0Sok_Gsjhng" type="_EEHIAMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>System.out.println(&quot;MAKING ERROR STRATEGY&quot;);
			return new IUpdateStrategy&lt;TMsg>() {

				private int count = 0; // update counter

				@Override
				/**
				 * Beep the speaker every 25 updates
				 */
				public void updateState(Ball context, IDispatcher&lt;TMsg> disp) {
					if (25 &lt; count++) {
						java.awt.Toolkit.getDefaultToolkit().beep();
						count = 0;
					}
				}

				@Override
				public void init(Ball host) {}
				
			};
		</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWgfkMFJEei0Sok_Gsjhng" name="toString" specification="_EEOcwMFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWgfkcFJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;INVALID!!!&quot;;
		</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EENOoMFJEei0Sok_Gsjhng" name="make" method="_EWf4isFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ER1a8cFJEei0Sok_Gsjhng" type="_EEHIAMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_EEOcwMFJEei0Sok_Gsjhng" name="toString" method="_EWgfkMFJEei0Sok_Gsjhng">
            <ownedComment xmi:id="_EW3E6sFJEei0Sok_Gsjhng">
              <body>Return the given class name string</body>
            </ownedComment>
            <ownedParameter xmi:id="_EEOcwcFJEei0Sok_Gsjhng" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Class" xmi:id="_EEPD0MFJEei0Sok_Gsjhng" name="NullFactory" isLeaf="true">
          <eAnnotations xmi:id="_EEPD0cFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_EEPD0sFJEei0Sok_Gsjhng" key="static"/>
          </eAnnotations>
          <ownedComment xmi:id="_EW3E68FJEei0Sok_Gsjhng">
            <body>A factory for a typed null strategy object.&lt;br>
     * Usage: instantiate this factory class using the desired TDispMsg type and then call its make() method
     * to create the correctly typed null strategy object.
	 * @param &lt;TMsg> The type of message that the supplied IDispatcher can send.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_ER2CAMFJEei0Sok_Gsjhng" client="_EEPD0MFJEei0Sok_Gsjhng" supplier="_EEJkQMFJEei0Sok_Gsjhng" contract="_EEJkQMFJEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EWgfksFJEei0Sok_Gsjhng" name="make" specification="_EEPq4cFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_EWgfk8FJEei0Sok_Gsjhng" type="_EEHIAMFJEei0Sok_Gsjhng" direction="return"/>
            <language>java</language>
            <body>return new IUpdateStrategy&lt;TMsg>() {

				@Override
				/**
				 * No-op
				 * @param context Ignored
				 */
				public void init(Ball context) {}

				@Override
				/**
				 * No-op
				 * @param context Ignored
				 * @param dispatcher Ignored
				 */
				public void updateState(Ball context, IDispatcher&lt;TMsg> dispatcher) {}		
			};
		</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_EEPq4cFJEei0Sok_Gsjhng" name="make" method="_EWgfksFJEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_ER2pEcFJEei0Sok_Gsjhng" type="_EEHIAMFJEei0Sok_Gsjhng" direction="return"/>
          </ownedOperation>
        </nestedClassifier>
        <ownedOperation xmi:id="_EEKyYcFJEei0Sok_Gsjhng" name="make">
          <ownedComment xmi:id="_EW3E6MFJEei0Sok_Gsjhng">
            <body>Instantiate the specific IUpdateStrategy for which this factory is defined.
	 * @return An IUpdateStrategy instance.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ER0M0MFJEei0Sok_Gsjhng" type="_EEHIAMFJEei0Sok_Gsjhng" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EW0oocFJEei0Sok_Gsjhng" name="" memberEnd="_EVqyEcFJEei0Sok_Gsjhng _EW0oosFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EW0oosFJEei0Sok_Gsjhng" name="" type="_EDDYEMFJEei0Sok_Gsjhng" association="_EW0oocFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXIxsMFJEei0Sok_Gsjhng" name="" memberEnd="_EXIxscFJEei0Sok_Gsjhng _EDqcEMFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXIxscFJEei0Sok_Gsjhng" name="" type="_EDpN8MFJEei0Sok_Gsjhng" association="_EXIxsMFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXJ_0MFJEei0Sok_Gsjhng" name="" memberEnd="_EXJ_0cFJEei0Sok_Gsjhng _EDsRQMFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXJ_0cFJEei0Sok_Gsjhng" name="" type="_EDrqMMFJEei0Sok_Gsjhng" association="_EXJ_0MFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXKm4MFJEei0Sok_Gsjhng" name="" memberEnd="_EXKm4cFJEei0Sok_Gsjhng _EDtfYsFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXKm4cFJEei0Sok_Gsjhng" name="" type="_EDrqMMFJEei0Sok_Gsjhng" association="_EXKm4MFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXKm48FJEei0Sok_Gsjhng" name="" memberEnd="_EXKm5MFJEei0Sok_Gsjhng _EDutgcFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXKm5MFJEei0Sok_Gsjhng" name="" type="_EDutgMFJEei0Sok_Gsjhng" association="_EXKm48FJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXLN8cFJEei0Sok_Gsjhng" name="" memberEnd="_EXLN8sFJEei0Sok_Gsjhng _EEErwcFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXLN8sFJEei0Sok_Gsjhng" name="" type="_EDwisMFJEei0Sok_Gsjhng" association="_EXLN8cFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXL1AcFJEei0Sok_Gsjhng" name="" memberEnd="_EXL1AsFJEei0Sok_Gsjhng _EEFS0cFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXL1AsFJEei0Sok_Gsjhng" name="" type="_EDwisMFJEei0Sok_Gsjhng" association="_EXL1AcFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXMcEcFJEei0Sok_Gsjhng" name="" memberEnd="_EXMcEsFJEei0Sok_Gsjhng _EVo84MFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXMcEsFJEei0Sok_Gsjhng" name="" type="_EDDYEMFJEei0Sok_Gsjhng" association="_EXMcEcFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXNDIcFJEei0Sok_Gsjhng" name="" memberEnd="_EXNDIsFJEei0Sok_Gsjhng _EVqLAMFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXNDIsFJEei0Sok_Gsjhng" name="" type="_EDDYEMFJEei0Sok_Gsjhng" association="_EXNDIcFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXNqMcFJEei0Sok_Gsjhng" name="" memberEnd="_EXNqMsFJEei0Sok_Gsjhng _EVqLAsFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXNqMsFJEei0Sok_Gsjhng" name="" type="_EDDYEMFJEei0Sok_Gsjhng" association="_EXNqMcFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXORQcFJEei0Sok_Gsjhng" name="" memberEnd="_EXORQsFJEei0Sok_Gsjhng _EVqyEsFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXORQsFJEei0Sok_Gsjhng" name="" type="_EDDYEMFJEei0Sok_Gsjhng" association="_EXORQcFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXO4UMFJEei0Sok_Gsjhng" name="" memberEnd="_EXO4UcFJEei0Sok_Gsjhng _EVrZIcFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXO4UcFJEei0Sok_Gsjhng" name="" type="_EDDYEMFJEei0Sok_Gsjhng" association="_EXO4UMFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXO4U8FJEei0Sok_Gsjhng" name="" memberEnd="_EXO4VMFJEei0Sok_Gsjhng _EVtOUcFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXO4VMFJEei0Sok_Gsjhng" name="" type="_EDDYEMFJEei0Sok_Gsjhng" association="_EXO4U8FJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXPfYcFJEei0Sok_Gsjhng" name="" memberEnd="_EXPfYsFJEei0Sok_Gsjhng _EVtOU8FJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXPfYsFJEei0Sok_Gsjhng" name="" type="_EDDYEMFJEei0Sok_Gsjhng" association="_EXPfYcFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXQGccFJEei0Sok_Gsjhng" name="" memberEnd="_EXQGcsFJEei0Sok_Gsjhng _EVt1YcFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXQGcsFJEei0Sok_Gsjhng" name="" type="_EDDYEMFJEei0Sok_Gsjhng" association="_EXQGccFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXQGdMFJEei0Sok_Gsjhng" name="" memberEnd="_EXQGdcFJEei0Sok_Gsjhng _EVuccMFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXQGdcFJEei0Sok_Gsjhng" name="" type="_EDW6EMFJEei0Sok_Gsjhng" association="_EXQGdMFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXQtgcFJEei0Sok_Gsjhng" name="" memberEnd="_EXQtgsFJEei0Sok_Gsjhng _EVvDgsFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXQtgsFJEei0Sok_Gsjhng" name="" type="_EDW6EMFJEei0Sok_Gsjhng" association="_EXQtgcFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXQthMFJEei0Sok_Gsjhng" name="" memberEnd="_EXQthcFJEei0Sok_Gsjhng _EVw4ssFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXQthcFJEei0Sok_Gsjhng" name="" type="_EDW6EMFJEei0Sok_Gsjhng" association="_EXQthMFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXRUkcFJEei0Sok_Gsjhng" name="" memberEnd="_EXRUksFJEei0Sok_Gsjhng _EVyG0MFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXRUksFJEei0Sok_Gsjhng" name="" type="_EDW6EMFJEei0Sok_Gsjhng" association="_EXRUkcFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXSiscFJEei0Sok_Gsjhng" name="" memberEnd="_EXSissFJEei0Sok_Gsjhng _EVyt48FJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXSissFJEei0Sok_Gsjhng" name="" type="_EDW6EMFJEei0Sok_Gsjhng" association="_EXSiscFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXTJwcFJEei0Sok_Gsjhng" name="" memberEnd="_EXTJwsFJEei0Sok_Gsjhng _EV0jEMFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXTJwsFJEei0Sok_Gsjhng" name="" type="_EDW6EMFJEei0Sok_Gsjhng" association="_EXTJwcFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXTw0cFJEei0Sok_Gsjhng" name="" memberEnd="_EXTw0sFJEei0Sok_Gsjhng _EV1xMcFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXTw0sFJEei0Sok_Gsjhng" name="" type="_EDW6EMFJEei0Sok_Gsjhng" association="_EXTw0cFJEei0Sok_Gsjhng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EXUX4cFJEei0Sok_Gsjhng" name="" memberEnd="_EXUX4sFJEei0Sok_Gsjhng _EV2YQMFJEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_EXUX4sFJEei0Sok_Gsjhng" name="" type="_EDW6EMFJEei0Sok_Gsjhng" association="_EXUX4cFJEei0Sok_Gsjhng"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_D_cDYMFJEei0Sok_Gsjhng" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_D_cDYcFJEei0Sok_Gsjhng" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_ERomocFJEei0Sok_Gsjhng" name="Timer"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_D_d4kMFJEei0Sok_Gsjhng" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_ERp0wcFJEei0Sok_Gsjhng" name="Randomizer"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_EAelMMFJEei0Sok_Gsjhng" name="Ellipse2D">
      <packagedElement xmi:type="uml:Class" xmi:id="_ESbQ0cFJEei0Sok_Gsjhng" name="Double"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_EA404MFJEei0Sok_Gsjhng" name="Point2D">
      <packagedElement xmi:type="uml:Class" xmi:id="_ESxPEMFJEei0Sok_Gsjhng" name="Double"/>
    </packagedElement>
    <profileApplication xmi:id="_DBDvkMFJEei0Sok_Gsjhng">
      <eAnnotations xmi:id="_DBDvkcFJEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_DBEWoMFJEei0Sok_Gsjhng" base_Package="_CmJ8QMFJEei0Sok_Gsjhng">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_EDakcMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EDZ9YMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EDdnwMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EDdAscFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EDgrEMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EDgEAMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EDnYwMFJEei0Sok_Gsjhng" base_Element="_EDmxsMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EDom4MFJEei0Sok_Gsjhng" base_Element="_EDmxsMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EDom4cFJEei0Sok_Gsjhng" name="FunctionalInterface"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_EEIWIMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EEHIAMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EEKyYMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EEJkQMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EELZcMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EEKyYcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EEMnkMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EEMAgMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EEN1sMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EENOoMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EEN1scFJEei0Sok_Gsjhng" base_Element="_EENOoMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EEN1ssFJEei0Sok_Gsjhng" base_Element="_EENOoMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EEN1s8FJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_EEPq4MFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EEPD0MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EEQ5AMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EEPq4cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EERgEMFJEei0Sok_Gsjhng" base_Element="_EEPq4cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EESHIMFJEei0Sok_Gsjhng" base_Element="_EEPq4cFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EESHIcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EE05ssFJEei0Sok_Gsjhng" base_Element="_EE0SoMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EE2u4MFJEei0Sok_Gsjhng" base_Element="_EE2H0MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EE3V8MFJEei0Sok_Gsjhng" base_Element="_EE2H0MFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EE3V8cFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EFC8IMFJEei0Sok_Gsjhng" base_Element="_EFBuAMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EFEKQMFJEei0Sok_Gsjhng" base_Element="_EFBuAMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EFEKQcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EFH0ocFJEei0Sok_Gsjhng" base_Element="_EFHNkMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EFJCwMFJEei0Sok_Gsjhng" base_Element="_EFIbsMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EFJp0MFJEei0Sok_Gsjhng" base_Element="_EFIbsMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EFJp0cFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EFscYMFJEei0Sok_Gsjhng" base_Element="_EFr1UMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EFuRkMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EFtqgMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EFx78MFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EFxU4MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EGDowMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EGDBsMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EGJIUMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EGGFAMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EGUugMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EGTgYMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EGXKwMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EGWjsMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EGjYAMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EGiw8MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EGpeoMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EGo3kMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EGyBgMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EGxacMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EG1E0MFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EGz2sMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EG3hEMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EG26AMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EG7LcMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EG6kYMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ERcZYcFJEei0Sok_Gsjhng" base_Element="_ERcZYMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ERdAccFJEei0Sok_Gsjhng" base_Element="_ERdAcMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ERdngcFJEei0Sok_Gsjhng" base_Element="_ERdngMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ERe1oMFJEei0Sok_Gsjhng" base_Element="_ERdngsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ERfcsMFJEei0Sok_Gsjhng" base_Element="_ERe1ocFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ERgDwMFJEei0Sok_Gsjhng" base_Element="_ERfcscFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ERjHEMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ERigAMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ERn_kMFJEei0Sok_Gsjhng" base_Element="_ERnYgMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ERomoMFJEei0Sok_Gsjhng" base_Element="_ERn_kcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ERomosFJEei0Sok_Gsjhng" base_Element="_ERomocFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ERpNscFJEei0Sok_Gsjhng" base_Element="_ERpNsMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ERp0wMFJEei0Sok_Gsjhng" base_Element="_ERpNssFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ERqb0MFJEei0Sok_Gsjhng" base_Element="_ERp0wcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ERsRAcFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ERrp98FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ERtfIMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ERs4EcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ERutQMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ERuGMcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ERvUUcFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ERuGMsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ERv7YMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ERuGM8FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ER1a8MFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ER0M0cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ER2pEMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ER2CAMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ER33MMFJEei0Sok_Gsjhng" base_Element="_ER3QIMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ER8vsMFJEei0Sok_Gsjhng" base_Element="_ER8IoMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ER8vscFJEei0Sok_Gsjhng" base_Element="_ER8IoMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ER9WwMFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ESBBIMFJEei0Sok_Gsjhng" base_Element="_ESAaEMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ESBoMMFJEei0Sok_Gsjhng" base_Element="_ESBBIcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ESCPQMFJEei0Sok_Gsjhng" base_Element="_ESBoMcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ESDdYMFJEei0Sok_Gsjhng" base_Element="_ESCPQcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ESEEcMFJEei0Sok_Gsjhng" base_Element="_ESDdYcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ESEEcsFJEei0Sok_Gsjhng" base_Element="_ESEEccFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ESF5oMFJEei0Sok_Gsjhng" base_Element="_ESFSkMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ESF5ocFJEei0Sok_Gsjhng" base_Element="_ESFSkMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ESF5osFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ESIV48FJEei0Sok_Gsjhng" base_Element="_ESHu0MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Array xmi:id="_ESI88cFJEei0Sok_Gsjhng" base_Element="_ESIV4MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ESJkAcFJEei0Sok_Gsjhng" base_Element="_ESI88sFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ESKLEMFJEei0Sok_Gsjhng" base_Element="_ESI88sFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ESKLEcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ESMAQcFJEei0Sok_Gsjhng" base_Element="_ESMAQMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ESPqosFJEei0Sok_Gsjhng" base_Element="_ESPDkMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Array xmi:id="_ESQRsMFJEei0Sok_Gsjhng" base_Element="_ESPDkcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ESTVAMFJEei0Sok_Gsjhng" base_Element="_ESSt8MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ESW_YcFJEei0Sok_Gsjhng" base_Element="_ESW_YMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ESb34MFJEei0Sok_Gsjhng" base_Element="_ESbQ0cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ESdGAMFJEei0Sok_Gsjhng" base_Element="_ESce8MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ESdtEMFJEei0Sok_Gsjhng" base_Element="_ESce8MFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ESdtEcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ESe7MMFJEei0Sok_Gsjhng" base_Element="_ESeUIMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ESqhYMFJEei0Sok_Gsjhng" base_Element="_ESp6UMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ESrvgMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ESrIcMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ESsWkMFJEei0Sok_Gsjhng" base_Element="_ESrvgcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ESsWkcFJEei0Sok_Gsjhng" base_Element="_ESrvgcFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ESsWksFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_EStksMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ESs9oMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ESuy0MFJEei0Sok_Gsjhng" base_Element="_ESuLwMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ESwA8MFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ESuy0cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ESwoAMFJEei0Sok_Gsjhng" base_Element="_ESwA8cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ESwoAcFJEei0Sok_Gsjhng" base_Element="_ESwA8cFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ESwoAsFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ESxPEcFJEei0Sok_Gsjhng" base_Element="_ESxPEMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ES05cMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ES0SYMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ES4j0MFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ES38wMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ES7nIMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ES7AEMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ES81QMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ES8OMMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ES81Q8FJEei0Sok_Gsjhng" base_Element="_ES81QcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ES9cUMFJEei0Sok_Gsjhng" base_Element="_ES81QcFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ES9cUcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ES-DYcFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ES-DYMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ES-qcsFJEei0Sok_Gsjhng" base_Element="_ES-qcMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ES-qc8FJEei0Sok_Gsjhng" base_Element="_ES-qcMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ES_RgMFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ETAfoMFJEei0Sok_Gsjhng" base_Element="_ES_4kMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_ETBGsMFJEei0Sok_Gsjhng" base_Element="_ETAfocFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ETEKAMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ETBtwMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ETF_MMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ETFYIMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ETHNUMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ETGmQMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ETLewMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ETK3sMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ETMs4MFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ETMF0cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ETNT8MFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ETMF0sFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ETN7AsFJEei0Sok_Gsjhng" base_Element="_ETN7AMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ETOiEMFJEei0Sok_Gsjhng" base_Element="_ETN7AMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ETOiEcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ETPwMMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ETPJIMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ETQXQsFJEei0Sok_Gsjhng" base_Element="_ETQXQMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ETQ-UMFJEei0Sok_Gsjhng" base_Element="_ETQXQMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ETQ-UcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ETSMcMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ETRlYMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ETUosMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ETUBoMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ETVPwsFJEei0Sok_Gsjhng" base_Element="_ETVPwMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ETVPw8FJEei0Sok_Gsjhng" base_Element="_ETVPwMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ETVPxMFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ETYTEMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ETXE8MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ETaIQMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ETZhMMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ETavUcFJEei0Sok_Gsjhng" base_Element="_ETaIQcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ETbWYMFJEei0Sok_Gsjhng" base_Element="_ETaIQcFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ETbWYcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ETckgMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ETb9cMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ETdLksFJEei0Sok_Gsjhng" base_Element="_ETdLkMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ETdyoMFJEei0Sok_Gsjhng" base_Element="_ETdLkMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ETdyocFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ETfAwMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ETeZsMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ETgO4MFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_ETfn0cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ETg18MFJEei0Sok_Gsjhng" base_Element="_ETgO4cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ETg18cFJEei0Sok_Gsjhng" base_Element="_ETgO4cFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ETg18sFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ETiEEMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EThdAMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ETirIsFJEei0Sok_Gsjhng" base_Element="_ETirIMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ETirI8FJEei0Sok_Gsjhng" base_Element="_ETirIMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ETjSMMFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ETkgUMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ETj5QMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ETlucMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ETlHYMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ET0X8MFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ETzw4MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ET20MMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ET2NI8FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ET4pYMFJEei0Sok_Gsjhng" base_Element="_ET3bQMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ET5QcMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ET4CUMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_ET53gMFJEei0Sok_Gsjhng" base_Element="_ET3bQMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_ET53gcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ET7FoMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ET6ekcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_ET860MFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_ET8TwsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:StyledElement xmi:id="_EUGr08FJEei0Sok_Gsjhng" base_Element="_EUGr0MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EUHS4MFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EUGr0sFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EUIhAMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EUH588FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EUJvIMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EUJIFcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUK9QMFJEei0Sok_Gsjhng" base_Element="_EUKWMMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EULkUMFJEei0Sok_Gsjhng" base_Element="_EUKWMMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EULkUcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUMLYcFJEei0Sok_Gsjhng" base_Element="_EULkUsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EUMLYsFJEei0Sok_Gsjhng" base_Element="_EULkUsFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EUMLY8FJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUOAk8FJEei0Sok_Gsjhng" base_Element="_EUOAkMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EUOnoMFJEei0Sok_Gsjhng" base_Element="_EUOAkMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EUOnocFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUS5EMFJEei0Sok_Gsjhng" base_Element="_EUSSAMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EUS5EcFJEei0Sok_Gsjhng" base_Element="_EUSSAMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EUS5EsFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUV8YMFJEei0Sok_Gsjhng" base_Element="_EUVVUMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EUWjcMFJEei0Sok_Gsjhng" base_Element="_EUVVUMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EUWjccFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUXxk8FJEei0Sok_Gsjhng" base_Element="_EUXKgMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Array xmi:id="_EUYYoMFJEei0Sok_Gsjhng" base_Element="_EUXxkMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUY_sMFJEei0Sok_Gsjhng" base_Element="_EUYYocFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EUY_scFJEei0Sok_Gsjhng" base_Element="_EUYYocFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EUY_ssFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUcDAMFJEei0Sok_Gsjhng" base_Element="_EUbb8MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EUcDAcFJEei0Sok_Gsjhng" base_Element="_EUbb8MFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EUcqEMFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUdRIsFJEei0Sok_Gsjhng" base_Element="_EUcqEcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EUd4MMFJEei0Sok_Gsjhng" base_Element="_EUcqEcFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EUd4McFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUefRMFJEei0Sok_Gsjhng" base_Element="_EUd4MsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Array xmi:id="_EUfGUcFJEei0Sok_Gsjhng" base_Element="_EUefQcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUftY8FJEei0Sok_Gsjhng" base_Element="_EUftYMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EUgUcMFJEei0Sok_Gsjhng" base_Element="_EUftYMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EUgUccFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUiJoMFJEei0Sok_Gsjhng" base_Element="_EUhilMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EUiJocFJEei0Sok_Gsjhng" base_Element="_EUhilMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EUiJosFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUlM8MFJEei0Sok_Gsjhng" base_Element="_EUkl4MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Array xmi:id="_EUlM88FJEei0Sok_Gsjhng" base_Element="_EUkl48FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUoQQsFJEei0Sok_Gsjhng" base_Element="_EUnpM8FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EUo3UMFJEei0Sok_Gsjhng" base_Element="_EUnpM8FJEei0Sok_Gsjhng">
    <annotations xmi:id="_EUo3UcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUwzIcFJEei0Sok_Gsjhng" base_Element="_EUwMEMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EUxaMMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EUwzIMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EUyBQMFJEei0Sok_Gsjhng" base_Element="_EUwMEMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EUyBQcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EUyoUcFJEei0Sok_Gsjhng" base_Element="_EUyBQsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EUzPYsFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EUyoUMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EUz2cMFJEei0Sok_Gsjhng" base_Element="_EUyBQsFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EUz2ccFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_EU1roMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EU1ElcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EU25wcFJEei0Sok_Gsjhng" base_Element="_EU2SsMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EU3g0MFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EU25wMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EU3g0cFJEei0Sok_Gsjhng" base_Element="_EU2SsMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EU3g0sFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_EU8ZUMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EU7yRMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EU9ncsFJEei0Sok_Gsjhng" base_Element="_EU9AYMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EU-OgsFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EU9nccFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EU-Og8FJEei0Sok_Gsjhng" base_Element="_EU9AYMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EU-OhMFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_EVAqwMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EVADtcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVB44MFJEei0Sok_Gsjhng" base_Element="_EVBR0MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVCf8MFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EVBR0sFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVCf8cFJEei0Sok_Gsjhng" base_Element="_EVBR0MFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVCf8sFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVDuEMFJEei0Sok_Gsjhng" base_Element="_EVDHAMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVDuEcFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EVDHAsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVEVIMFJEei0Sok_Gsjhng" base_Element="_EVDHAMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVEVIcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVE8M8FJEei0Sok_Gsjhng" base_Element="_EVE8MMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVFjQMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EVE8MsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVFjQcFJEei0Sok_Gsjhng" base_Element="_EVE8MMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVFjQsFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVGxYMFJEei0Sok_Gsjhng" base_Element="_EVGKUMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVHYcMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EVGKUsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVHYccFJEei0Sok_Gsjhng" base_Element="_EVGKUMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVHYcsFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVImkMFJEei0Sok_Gsjhng" base_Element="_EVH_gMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVImkcFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EVH_gsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVJNoMFJEei0Sok_Gsjhng" base_Element="_EVH_gMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVJNocFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVKbwMFJEei0Sok_Gsjhng" base_Element="_EVJ0sMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVLC0MFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EVJ0ssFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVLC0cFJEei0Sok_Gsjhng" base_Element="_EVJ0sMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVLC0sFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVMQ8MFJEei0Sok_Gsjhng" base_Element="_EVLp4MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVM4AMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EVLp48FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVM4AcFJEei0Sok_Gsjhng" base_Element="_EVLp4MFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVM4AsFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVOGIMFJEei0Sok_Gsjhng" base_Element="_EVNfEMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVOGIcFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EVNfEsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVOtMMFJEei0Sok_Gsjhng" base_Element="_EVNfEMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVOtMcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVPUQ8FJEei0Sok_Gsjhng" base_Element="_EVPUQMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVP7UMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EVPUQsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVQiYMFJEei0Sok_Gsjhng" base_Element="_EVPUQMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVQiYcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVS-oMFJEei0Sok_Gsjhng" base_Element="_EVQiYsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVTlsMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EVSXkcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVTlscFJEei0Sok_Gsjhng" base_Element="_EVQiYsFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVTlssFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVUz0MFJEei0Sok_Gsjhng" base_Element="_EVUMwMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVVa4MFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EVUMwsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVVa4cFJEei0Sok_Gsjhng" base_Element="_EVUMwMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVVa4sFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVX3I8FJEei0Sok_Gsjhng" base_Element="_EVX3IMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVYeMcFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EVX3IsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVZFQMFJEei0Sok_Gsjhng" base_Element="_EVX3IMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVZFQcFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVZsU8FJEei0Sok_Gsjhng" base_Element="_EVZsUMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVaTYMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EVZsUsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVa6cMFJEei0Sok_Gsjhng" base_Element="_EVZsUMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVa6ccFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVbhgMFJEei0Sok_Gsjhng" base_Element="_EVa6csFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVcIkMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EVa6dMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVcIkcFJEei0Sok_Gsjhng" base_Element="_EVa6csFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVcIksFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVdWsMFJEei0Sok_Gsjhng" base_Element="_EVcvoMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVd9wMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EVcvosFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVd9wcFJEei0Sok_Gsjhng" base_Element="_EVcvoMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVd9wsFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVfL4MFJEei0Sok_Gsjhng" base_Element="_EVek0MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVfL4cFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EVek0sFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVfL4sFJEei0Sok_Gsjhng" base_Element="_EVek0MFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVfy8MFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVgaAMFJEei0Sok_Gsjhng" base_Element="_EVfy8cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVhBEMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EVfy88FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVhBEcFJEei0Sok_Gsjhng" base_Element="_EVfy8cFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVhBEsFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVi2QMFJEei0Sok_Gsjhng" base_Element="_EVhoIMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVjdUMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EViPMcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Annotations xmi:id="_EVjdUcFJEei0Sok_Gsjhng" base_Element="_EVhoIMFJEei0Sok_Gsjhng">
    <annotations xmi:id="_EVjdUsFJEei0Sok_Gsjhng" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVpj8MFJEei0Sok_Gsjhng" base_Element="_EVo84MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVpj8sFJEei0Sok_Gsjhng" base_Element="_EVpj8cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVqLAcFJEei0Sok_Gsjhng" base_Element="_EVqLAMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVqyEMFJEei0Sok_Gsjhng" base_Element="_EVqLAsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVrZIMFJEei0Sok_Gsjhng" base_Element="_EVqyEsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVsAMMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EVrZIcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVvDgcFJEei0Sok_Gsjhng" base_Element="_EVuccMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVvqkMFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EVvDgsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVwRocFJEei0Sok_Gsjhng" base_Element="_EVvDgsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVw4scFJEei0Sok_Gsjhng" base_Element="_EVwRosFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVxfwcFJEei0Sok_Gsjhng" base_Element="_EVw4ssFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVyt4MFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EVyG0MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVyt4sFJEei0Sok_Gsjhng" base_Element="_EVyG0MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EVzU8MFJEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_EVyt48FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EVz8AcFJEei0Sok_Gsjhng" base_Element="_EVyt48FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EV1KIMFJEei0Sok_Gsjhng" genericsValue="IUpdateStrategy&lt;IBallCmd>" base_Element="_EV0jEMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV1xMMFJEei0Sok_Gsjhng" base_Element="_EV0jEMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV1xM8FJEei0Sok_Gsjhng" base_Element="_EV1xMcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EV2YQcFJEei0Sok_Gsjhng" genericsValue="IPaintStrategy" base_Element="_EV2YQMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV2_UMFJEei0Sok_Gsjhng" base_Element="_EV2YQMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV4NcMFJEei0Sok_Gsjhng" base_Element="_EV3mYMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV40gMFJEei0Sok_Gsjhng" base_Element="_EV4NccFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV5bkcFJEei0Sok_Gsjhng" base_Element="_EV5bkMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV6pscFJEei0Sok_Gsjhng" base_Element="_EV6CoMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV7QwMFJEei0Sok_Gsjhng" base_Element="_EV6pssFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV7QwsFJEei0Sok_Gsjhng" base_Element="_EV7QwcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV730sFJEei0Sok_Gsjhng" base_Element="_EV730MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV8e4cFJEei0Sok_Gsjhng" base_Element="_EV8e4MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Array xmi:id="_EV9F8sFJEei0Sok_Gsjhng" base_Element="_EV9F8MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV9tAMFJEei0Sok_Gsjhng" base_Element="_EV9F8MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EV-UEMFJEei0Sok_Gsjhng" base_Element="_EV9tAcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Array xmi:id="_EWAJQcFJEei0Sok_Gsjhng" base_Element="_EV_iMcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWB-cMFJEei0Sok_Gsjhng" base_Element="_EWBXYMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Array xmi:id="_EWClgsFJEei0Sok_Gsjhng" base_Element="_EWClgMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWDzoMFJEei0Sok_Gsjhng" base_Element="_EWDMkcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWDzosFJEei0Sok_Gsjhng" base_Element="_EWDzocFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWEassFJEei0Sok_Gsjhng" base_Element="_EWEasMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWFBwMFJEei0Sok_Gsjhng" base_Element="_EWEas8FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Array xmi:id="_EWFo0sFJEei0Sok_Gsjhng" base_Element="_EWFo0MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWG28MFJEei0Sok_Gsjhng" base_Element="_EWGP4cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWHeAMFJEei0Sok_Gsjhng" base_Element="_EWG28cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWIFEMFJEei0Sok_Gsjhng" base_Element="_EWHeAcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWJTMMFJEei0Sok_Gsjhng" base_Element="_EWIsIMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWJ6QMFJEei0Sok_Gsjhng" base_Element="_EWJTMcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWKhUcFJEei0Sok_Gsjhng" base_Element="_EWJ6QcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWLIYcFJEei0Sok_Gsjhng" base_Element="_EWKhUsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWLvcMFJEei0Sok_Gsjhng" base_Element="_EWLIYsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWMWgMFJEei0Sok_Gsjhng" base_Element="_EWLvccFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWMWg8FJEei0Sok_Gsjhng" base_Element="_EWMWgcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWM9kcFJEei0Sok_Gsjhng" base_Element="_EWM9kMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWOLsMFJEei0Sok_Gsjhng" base_Element="_EWNkoMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWOywMFJEei0Sok_Gsjhng" base_Element="_EWOLscFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWPZ0MFJEei0Sok_Gsjhng" base_Element="_EWOywcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EWQA4MFJEei0Sok_Gsjhng" base_Element="_EWPZ0cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWRPAcFJEei0Sok_Gsjhng" base_Element="_EWQn8cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWSdIMFJEei0Sok_Gsjhng" base_Element="_EWR2EcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWSdIsFJEei0Sok_Gsjhng" base_Element="_EWSdIcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EWTEMMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EWSdI8FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWTEMcFJEei0Sok_Gsjhng" base_Element="_EWSdI8FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EWTrQMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EWTEMsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWTrQcFJEei0Sok_Gsjhng" base_Element="_EWTEMsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWUSUcFJEei0Sok_Gsjhng" base_Element="_EWTrQsFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWVgcMFJEei0Sok_Gsjhng" base_Element="_EWU5YcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWVgc8FJEei0Sok_Gsjhng" base_Element="_EWVgccFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_EWWukMFJEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_EWWHgMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWXVoMFJEei0Sok_Gsjhng" base_Element="_EWWHgMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWXVo8FJEei0Sok_Gsjhng" base_Element="_EWXVocFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EWX8ssFJEei0Sok_Gsjhng" base_Element="_EWX8sMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXJYwMFJEei0Sok_Gsjhng" base_Element="_EXIxsMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXJ_0sFJEei0Sok_Gsjhng" base_Element="_EXJ_0MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXKm4sFJEei0Sok_Gsjhng" base_Element="_EXKm4MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXLN8MFJEei0Sok_Gsjhng" base_Element="_EXKm48FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXL1AMFJEei0Sok_Gsjhng" base_Element="_EXLN8cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXMcEMFJEei0Sok_Gsjhng" base_Element="_EXL1AcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXNDIMFJEei0Sok_Gsjhng" base_Element="_EXMcEcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXNqMMFJEei0Sok_Gsjhng" base_Element="_EXNDIcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXORQMFJEei0Sok_Gsjhng" base_Element="_EXNqMcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXORQ8FJEei0Sok_Gsjhng" base_Element="_EXORQcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXO4UsFJEei0Sok_Gsjhng" base_Element="_EXO4UMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXPfYMFJEei0Sok_Gsjhng" base_Element="_EXO4U8FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXQGcMFJEei0Sok_Gsjhng" base_Element="_EXPfYcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXQGc8FJEei0Sok_Gsjhng" base_Element="_EXQGccFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXQtgMFJEei0Sok_Gsjhng" base_Element="_EXQGdMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXQtg8FJEei0Sok_Gsjhng" base_Element="_EXQtgcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXRUkMFJEei0Sok_Gsjhng" base_Element="_EXQthMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXSisMFJEei0Sok_Gsjhng" base_Element="_EXRUkcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXTJwMFJEei0Sok_Gsjhng" base_Element="_EXSiscFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXTw0MFJEei0Sok_Gsjhng" base_Element="_EXTJwcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXUX4MFJEei0Sok_Gsjhng" base_Element="_EXTw0cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXU-8MFJEei0Sok_Gsjhng" base_Element="_EXUX4cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXVmAsFJEei0Sok_Gsjhng" base_Element="_EXVmAMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXWNEMFJEei0Sok_Gsjhng" base_Element="_EXVmA8FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXW0IMFJEei0Sok_Gsjhng" base_Element="_EXWNEcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXXbMMFJEei0Sok_Gsjhng" base_Element="_EXW0IcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXYCQMFJEei0Sok_Gsjhng" base_Element="_EXXbMcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXYpUMFJEei0Sok_Gsjhng" base_Element="_EXYCQcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXYpU8FJEei0Sok_Gsjhng" base_Element="_EXYpUcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXZQYsFJEei0Sok_Gsjhng" base_Element="_EXZQYMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXZ3cMFJEei0Sok_Gsjhng" base_Element="_EXZQY8FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXaegMFJEei0Sok_Gsjhng" base_Element="_EXZ3ccFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXbsoMFJEei0Sok_Gsjhng" base_Element="_EXaegcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXcTsMFJEei0Sok_Gsjhng" base_Element="_EXbsocFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXc6wMFJEei0Sok_Gsjhng" base_Element="_EXcTscFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXdh0MFJEei0Sok_Gsjhng" base_Element="_EXc6wcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXeI4MFJEei0Sok_Gsjhng" base_Element="_EXdh0cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXeI48FJEei0Sok_Gsjhng" base_Element="_EXeI4cFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXev8sFJEei0Sok_Gsjhng" base_Element="_EXev8MFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXfXAMFJEei0Sok_Gsjhng" base_Element="_EXev88FJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXf-EMFJEei0Sok_Gsjhng" base_Element="_EXfXAcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXglIMFJEei0Sok_Gsjhng" base_Element="_EXf-EcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXglI8FJEei0Sok_Gsjhng" base_Element="_EXglIcFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXhMMsFJEei0Sok_Gsjhng" base_Element="_EXhMMMFJEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_EXhzQsFJEei0Sok_Gsjhng" base_Element="_EXhzQMFJEei0Sok_Gsjhng"/>
</xmi:XMI>
