<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_ptESsMEPEeiQaYZfZQMLYg" name="BallWorld">
    <eAnnotations xmi:id="_pyXCYMEPEeiQaYZfZQMLYg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_pyXCYcEPEeiQaYZfZQMLYg" source="codegen">
        <details xmi:id="_pyXCYsEPEeiQaYZfZQMLYg" key="codegenDirectory" value="/HW05/src"/>
        <details xmi:id="_ryB0EMEPEeiQaYZfZQMLYg" key="AssociatedSourceCode" value="/HW05/src/controller/Controller.java;548875635/1;/HW05/src/model/Ball.java;938502660/1;/HW05/src/model/BallModel.java;2595290713/1;/HW05/src/model/IBallCmd.java;755622280/1;/HW05/src/model/IInteractStrategy.java;2297349390/1;/HW05/src/model/IM2VAdapter.java;3964499665/1;/HW05/src/model/IPaintStrategy.java;2855397383/1;/HW05/src/model/IPaintStrategyFac.java;2842114643/1;/HW05/src/model/IUpdateStrategy.java;1508993538/1;/HW05/src/model/IUpdateStrategyFac.java;34869891/1;/HW05/src/model/paint/ADecoratorPaintStrategy.java;2260772507/1;/HW05/src/model/paint/APaintStrategy.java;269623074/1;/HW05/src/model/paint/FixedColorDecoratorPaintStrategy.java;3510553260/1;/HW05/src/model/paint/ImagePaintStrategy.java;1104018490/1;/HW05/src/model/paint/MultiPaintStrategy.java;3852114432/1;/HW05/src/model/paint/ShapePaintStrategy.java;4161110113/1;/HW05/src/model/paint/UprightImagePaintStrategy.java;3548590847/1;/HW05/src/model/paint/UprightMultiPaintStrategy.java;2411960392/1;/HW05/src/model/paint/UprightShapePaintStrategy.java;3678993189/1;/HW05/src/model/paint/shape/EllipseShapeFactory.java;2422604491/1;/HW05/src/model/paint/shape/Fish1PolygonFactory.java;1113813204/1;/HW05/src/model/paint/shape/Fish2PolygonFactory.java;2723150543/1;/HW05/src/model/paint/shape/IShapeFactory.java;2923371689/1;/HW05/src/model/paint/shape/PolygonFactory.java;3118826364/1;/HW05/src/model/paint/shape/RectangleShapeFactory.java;3332213297/1;/HW05/src/model/paint/shape/SpaceShuttlePolygonFactory.java;822081138/1;/HW05/src/model/paint/strategy/BallPaintStrategy.java;2316891077/1;/HW05/src/model/paint/strategy/BirdSheepImagePaintStrategy.java;1489855682/1;/HW05/src/model/paint/strategy/BoxAndBallPaintStrategy.java;1378779229/1;/HW05/src/model/paint/strategy/DuckPaintStrategy.java;2074278403/1;/HW05/src/model/paint/strategy/EllipsePaintStrategy.java;1494320518/1;/HW05/src/model/paint/strategy/Fish1PaintStrategy.java;4154234962/1;/HW05/src/model/paint/strategy/Fish2PaintStrategy.java;3222624238/1;/HW05/src/model/paint/strategy/MarioSonicImagePaintStrategy.java;2477484446/1;/HW05/src/model/paint/strategy/NiceFishPaintStrategy.java;1002868742/1;/HW05/src/model/paint/strategy/PlanetImagePaintStrategy.java;1841980878/1;/HW05/src/model/paint/strategy/RectanglePaintStrategy.java;2325219002/1;/HW05/src/model/paint/strategy/SoccerImagePaintStrategy.java;2831328885/1;/HW05/src/model/paint/strategy/SpaceShuttlePaintStrategy.java;919810500/1;/HW05/src/model/paint/strategy/SquarePaintStrategy.java;2277808745/1;/HW05/src/model/strategy/AlignedStrategy.java;856861992/1;/HW05/src/model/strategy/Collide2Strategy.java;4171948557/1;/HW05/src/model/strategy/CollideExactStrategy.java;1006280403/1;/HW05/src/model/strategy/CollideStrategy.java;4194780022/1;/HW05/src/model/strategy/DelayedOverlapStrategy.java;3374601418/1;/HW05/src/model/strategy/EatStrategy.java;3140128785/1;/HW05/src/model/strategy/FlashStrategy.java;3925593205/1;/HW05/src/model/strategy/GravityStrategy.java;3542976108/1;/HW05/src/model/strategy/GrowStrategy.java;252154794/1;/HW05/src/model/strategy/KillStrategy.java;1639417983/1;/HW05/src/model/strategy/MultiInteractStrategy.java;3974500416/1;/HW05/src/model/strategy/MultiStrategy.java;925597401/1;/HW05/src/model/strategy/OverlapStrategy.java;2329378676/1;/HW05/src/model/strategy/ShrinkStrategy.java;3783763305/1;/HW05/src/model/strategy/SimilarColorStrategy.java;3452289654/1;/HW05/src/model/strategy/SpawnStrategy.java;4165654617/1;/HW05/src/model/strategy/StraightStrategy.java;272725904/1;/HW05/src/model/strategy/SwapColorStrategy.java;2476856923/1;/HW05/src/model/strategy/SwitcherStrategy.java;1734074103/1;/HW05/src/model/strategy/TakeColorStrategy.java;2236510973/1;/HW05/src/model/strategy/TeleportingStrategy.java;3000178188/1;/HW05/src/model/strategy/ZoneStrategy.java;1934974350/1;/HW05/src/provided/util/dispatcher/IDispatcher.java;1758823152/1;/HW05/src/provided/util/dispatcher/IObserver.java;2807653554/1;/HW05/src/provided/util/dispatcher/impl/ADispatcher.java;2458944224/1;/HW05/src/provided/util/dispatcher/impl/ParallelDispatcher.java;1223916959/1;/HW05/src/provided/util/dispatcher/impl/SequentialDispatcher.java;73641381/1;/HW05/src/provided/util/loader/IObjectLoader.java;1727166689/1;/HW05/src/provided/util/loader/impl/ObjectLoader.java;2395917477/1;/HW05/src/provided/util/valueGenerator/IRandomizer.java;3461744146/1;/HW05/src/provided/util/valueGenerator/ISineMaker.java;1195078911/1;/HW05/src/provided/util/valueGenerator/impl/Randomizer.java;2011101776/1;/HW05/src/provided/util/valueGenerator/impl/SineMaker.java;359713276/1;/HW05/src/util/Dispatcher.java;1938059774/1;/HW05/src/util/IRandomizer.java;2633307001/1;/HW05/src/util/Randomizer.java;620714422/1;/HW05/src/util/SineMaker.java;3428207769/1;/HW05/src/view/IV2MControlAdapter.java;2269488377/1;/HW05/src/view/IV2MUpdateAdapter.java;1473102822/1;/HW05/src/view/View.java;1788159301/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_eho3EMFGEei0Sok_Gsjhng" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_eho3EcFGEei0Sok_Gsjhng" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_ehpeIMFGEei0Sok_Gsjhng" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_ehpeIcFGEei0Sok_Gsjhng" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_ehpeIsFGEei0Sok_Gsjhng" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_rFQ0sMEPEeiQaYZfZQMLYg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_rFRbwMEPEeiQaYZfZQMLYg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_rFRbwcEPEeiQaYZfZQMLYg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_rFSC0MEPEeiQaYZfZQMLYg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_rFSC0cEPEeiQaYZfZQMLYg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_rFSC0sEPEeiQaYZfZQMLYg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_rFSC08EPEeiQaYZfZQMLYg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_rFSC1MEPEeiQaYZfZQMLYg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_rFSp4MEPEeiQaYZfZQMLYg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_rFSp4cEPEeiQaYZfZQMLYg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_rFTQ8MEPEeiQaYZfZQMLYg" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_rFuuwMEPEeiQaYZfZQMLYg" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_rYMXwcEPEeiQaYZfZQMLYg" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_rYkyQMEPEeiQaYZfZQMLYg" name="Ellipse2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_rY3GIMEPEeiQaYZfZQMLYg" name="Point2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_rF68AMEPEeiQaYZfZQMLYg" name="image">
          <packagedElement xmi:type="uml:Interface" xmi:id="_rYTsgcEPEeiQaYZfZQMLYg" name="ImageObserver"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rXxhAMEPEeiQaYZfZQMLYg" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rXyIEcEPEeiQaYZfZQMLYg" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rXyvIcEPEeiQaYZfZQMLYg" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rXz9QMEPEeiQaYZfZQMLYg" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rX0kUcEPEeiQaYZfZQMLYg" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rX8gIMEPEeiQaYZfZQMLYg" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rX9HMcEPEeiQaYZfZQMLYg" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rYSeYMEPEeiQaYZfZQMLYg" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rYTFccEPEeiQaYZfZQMLYg" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rYU6ocEPEeiQaYZfZQMLYg" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rYVhscEPEeiQaYZfZQMLYg" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rYbBQMEPEeiQaYZfZQMLYg" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rYn1kMEPEeiQaYZfZQMLYg" name="Polygon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_raNJ8MEPEeiQaYZfZQMLYg" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_raNxAMEPEeiQaYZfZQMLYg" name="GridLayout"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_rF68AcEPEeiQaYZfZQMLYg" name="lang">
        <packagedElement xmi:type="uml:Package" xmi:id="_rHMuYMEPEeiQaYZfZQMLYg" name="reflect">
          <packagedElement xmi:type="uml:Class" xmi:id="_rbh_pcEPEeiQaYZfZQMLYg" name="Constructor"/>
        </packagedElement>
        <packagedElement xmi:type="uml:DataType" xmi:id="_rYUTkcEPEeiQaYZfZQMLYg" name="String"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rbduMMEPEeiQaYZfZQMLYg" name="Object"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rbe8UMEPEeiQaYZfZQMLYg" name="Class"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rbimscEPEeiQaYZfZQMLYg" name="IllegalArgumentException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_rGzFwMEPEeiQaYZfZQMLYg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_rHHO0MEPEeiQaYZfZQMLYg" name="concurrent">
          <packagedElement xmi:type="uml:Class" xmi:id="_rZ-gccEPEeiQaYZfZQMLYg" name="ConcurrentSkipListSet"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_rHNVcMEPEeiQaYZfZQMLYg" name="function">
          <packagedElement xmi:type="uml:Interface" xmi:id="_raDY8cEPEeiQaYZfZQMLYg" name="Function"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rZO5kMEPEeiQaYZfZQMLYg" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZPgocEPEeiQaYZfZQMLYg" name="Map"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZ62FMEPEeiQaYZfZQMLYg" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZ95YMEPEeiQaYZfZQMLYg" name="Comparator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_raCx4MEPEeiQaYZfZQMLYg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_raCx4sEPEeiQaYZfZQMLYg" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rbzFYMEPEeiQaYZfZQMLYg" name="Observable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rFTQ8cEPEeiQaYZfZQMLYg" name="model">
      <packagedElement xmi:type="uml:Package" xmi:id="_rFh6csEPEeiQaYZfZQMLYg" name="strategy">
        <packagedElement xmi:type="uml:Class" xmi:id="_rKpD8MEPEeiQaYZfZQMLYg" name="AlignedStrategy">
          <ownedComment xmi:id="_rdfuicEPEeiQaYZfZQMLYg">
            <body>Detects if two balls' velocities are roughly aligned.
NOTE: This strategy defines a  &quot;criteria for interaction&quot;. The interaction behavior is delegated to the
interactWith methods of the individual balls.  
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <generalization xmi:id="_gSMOscFGEei0Sok_Gsjhng" general="_gSLnoMFGEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_rcb-kMEPEeiQaYZfZQMLYg" name="epsilon" visibility="private" isLeaf="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rccloMEPEeiQaYZfZQMLYg" value="2 * Math.PI * 0.05"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdNaqMEPEeiQaYZfZQMLYg" name="updateState" specification="_rY14AsEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdNaqcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdNaqsEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>dispatcher.updateAll((other, disp) -> {
			// check if you are receiving your own command 
			if (context != other) {
				// if the balls are overlapping
				if (Math.abs(Math.atan2(context.getVelocity().getY(), context.getVelocity().getX()) -
						Math.atan2(other.getVelocity().getY(), other.getVelocity().getX())) &lt; epsilon) {
					// invoke the interaction strategies of the two interacting balls 
					context.interactWith(other, dispatcher, true);
					other.interactWith(context, dispatcher, false);
				}
			}
		});
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rY14AsEPEeiQaYZfZQMLYg" name="updateState" method="_rdNaqMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rY14A8EPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rY14BMEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rKq5IMEPEeiQaYZfZQMLYg" name="Collide2Strategy">
          <ownedComment xmi:id="_rdfuisEPEeiQaYZfZQMLYg">
            <body>Elastic collision implemented purely as an interaction strategy. Combine with Overlap to see bouncing balls.
NOTE: This strategy only installs a &quot;post-collision interaction behavior&quot; and thus at least needs 
to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_rcdMsMEPEeiQaYZfZQMLYg" name="nudge" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcdMscEPEeiQaYZfZQMLYg" value="1.1"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_rY3tMcEPEeiQaYZfZQMLYg" client="_rKq5IMEPEeiQaYZfZQMLYg" supplier="_rJXRkMEPEeiQaYZfZQMLYg" contract="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdOBsMEPEeiQaYZfZQMLYg" name="init" specification="_rY4UQMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdOBscEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(), new IInteractStrategy() {

			@Override
			public void interact(Ball context, Ball other, IDispatcher&lt;IBallCmd> disp, Boolean interactFirst) {
				// IMPORTANT: this is the main difference between Collide2 and Collide.
				// Because Overlap delegates to BOTH balls interactWith methods, Collide2 uses the
				// interactFirst flag and only runs the collision mathematics on the first call.  
				if (interactFirst) {
					// the distance between the radii of the two balls
					double radiusDistance = context.getLocation().distance(other.getLocation());
					
					// Calculate the reduced mass of the two-ball system using the square of the radius as the mass of the ball (mass is proportional to the size of the ball).
					double rm = reducedMass(Math.pow(context.getRadius(), 2), Math.pow(other.getRadius(), 2));
					
					// The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a 
					// positive value. This is the amount of overlap of the balls as measured along the line between their centers.
					double deltaR = (context.getRadius() + other.getRadius()) - (radiusDistance);
					
					// Use the reduced mass and other parameters to calculate the impulse of the collision. The position of the source ball will be &quot;nudged&quot; out of collision distance during this calculation.
					Point2D.Double imp = impulse(context.getLocation(), context.getVelocity(), other.getLocation(), other.getVelocity(), rm, radiusDistance, deltaR);
					
					// Update the velocities of each ball by taking the impulse divided by the mass (square of the radius) and call its post-collision 
					// interaction behavior (the interactWith method of the Ball).   
					// Note that the same method can be used to update either the source or target balls simply by switching the parameters and negating the impulse.    
					// Careful here! This is simpler than it looks! Use all the resources available to you!
					updateCollision(context, other, imp.x, imp.y, disp);
					updateCollision(other, context, -imp.x, -imp.y, disp);
				}
			}
			
		}));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdOBssEPEeiQaYZfZQMLYg" name="reducedMass" specification="_rKsuUMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdOBs8EPEeiQaYZfZQMLYg" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOBtMEPEeiQaYZfZQMLYg" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOBtcEPEeiQaYZfZQMLYg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (mSource == Double.POSITIVE_INFINITY)
			return mTarget;
		if (mTarget == Double.POSITIVE_INFINITY)
			return mSource;
		else
			return (mSource * mTarget) / (mSource + mTarget);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdOBtsEPEeiQaYZfZQMLYg" name="impulse" specification="_rbKzQMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdOBt8EPEeiQaYZfZQMLYg" name="lSource" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOBuMEPEeiQaYZfZQMLYg" name="vSource" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOBucEPEeiQaYZfZQMLYg" name="lTarget" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOBusEPEeiQaYZfZQMLYg" name="vTarget" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOBu8EPEeiQaYZfZQMLYg" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOBvMEPEeiQaYZfZQMLYg" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOBvcEPEeiQaYZfZQMLYg" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOBvsEPEeiQaYZfZQMLYg" type="_rY6JcMEPEeiQaYZfZQMLYg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>// Calculate the normal vector, from source to target
		double nx = ((double) (lTarget.x - lSource.x)) / distance;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;

		// delta velocity (speed, actually) in normal direction, source to target
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

		// move the source ball beyond collision range of the target ball, along the normal direction.
		lSource.translate((int) Math.ceil(-nx * (nudge * deltaR)), (int) Math.ceil(-ny * (nudge * deltaR)));

		return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0 * reducedMass * dvn * ny);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdOBv8EPEeiQaYZfZQMLYg" name="updateCollision" specification="_rY6wgMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdOBwMEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOBwcEPEeiQaYZfZQMLYg" name="target" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOBwsEPEeiQaYZfZQMLYg" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOBw8EPEeiQaYZfZQMLYg" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOBxMEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>int mContext = context.getRadius() * context.getRadius();

		context.getVelocity().translate((int) Math.round(impX / mContext), (int) Math.round(impY / mContext));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rKsuUMEPEeiQaYZfZQMLYg" name="reducedMass" visibility="protected" method="_rdOBssEPEeiQaYZfZQMLYg">
            <ownedComment xmi:id="_rdfui8EPEeiQaYZfZQMLYg">
              <body>Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
	 * result if one of the balls has infinite mass.
	 * @param mSource Mass of the source ball.
	 * @param mTarget Mass of the target ball.
	 * @return The reduced mass of the two balls (m1*m2)/(m1+m2).</body>
            </ownedComment>
            <ownedParameter xmi:id="_rKsuUcEPEeiQaYZfZQMLYg" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rKsuUsEPEeiQaYZfZQMLYg" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rKsuU8EPEeiQaYZfZQMLYg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_rY4UQMEPEeiQaYZfZQMLYg" name="init" method="_rdOBsMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rY4UQcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rY47UsEPEeiQaYZfZQMLYg" name="updateState">
            <ownedParameter xmi:id="_rY47U8EPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rY47VsEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rY47V8EPEeiQaYZfZQMLYg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_rY47VMEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rY6wgMEPEeiQaYZfZQMLYg" name="updateCollision" visibility="protected" method="_rdOBv8EPEeiQaYZfZQMLYg">
            <ownedComment xmi:id="_rdgVkMEPEeiQaYZfZQMLYg">
              <body>Updates the velocity of the source ball, given an impulse, then uses the
	 * context's interactWith method to determine the post collision behavior, from the context
	 * ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change
	 * the velocity of the target ball, switch the source and target input
	 * parameters and negate the impulse values.   This will also run the post collision behavior from 
	 * the other perspective.
	 * 
	 * @param context The ball to update
	 * @param target The ball being collided with
	 * @param impX x-coordinate of the impulse
	 * @param impY y-coordinate of the impulse
	 * @param dispatcher The dispatcher</body>
            </ownedComment>
            <ownedParameter xmi:id="_rY6wgcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rY6wgsEPEeiQaYZfZQMLYg" name="target" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rY6wg8EPEeiQaYZfZQMLYg" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rY7XkMEPEeiQaYZfZQMLYg" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rY7XkcEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rbKzQMEPEeiQaYZfZQMLYg" name="impulse" visibility="protected" method="_rdOBtsEPEeiQaYZfZQMLYg">
            <ownedComment xmi:id="_rdfujMEPEeiQaYZfZQMLYg">
              <body>Calculates the impulse (change in momentum) of the collision in the
	 * direction from the source to the target This method calculates the
	 * impulse on the source ball. The impulse on the target ball is the
	 * negative of the result. Also moves source ball out of collision range
	 * along normal direction. The change in velocity of the source ball is the
	 * impulse divided by the source's mass. The change in velocity of the target
	 * ball is the negative of the impulse divided by the target's mass
	 * 
	 * Operational note: Even though theoretically, the difference in velocities
	 * of two balls should be co-linear with the normal line between them, the
	 * discrete nature of animations means that the point where collision is
	 * detected may not be at the same point as the theoretical contact point.
	 * This method calculates the rebound directions as if the two balls were
	 * the appropriate radii such that they had just contacted
	 * _at_the_point_of_collision_detection_. This may give slightly different
	 * rebound direction than one would calculate if they contacted at the
	 * theoretical point given by their actual radii.
	 * 
	 * @param lSource Location of the source ball
	 * @param vSource Velocity of the source ball
	 * @param lTarget Location of the target ball
	 * @param vTarget Velocity of the target ball
	 * @param reducedMass Reduced mass of the two balls
	 * @param distance Distance between the two balls.
	 * @param deltaR The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a
	 * positive value. This is the amount of overlap of the balls as measured along the line between their centers.
	 * @return Return the impulse vector.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rbKzQcEPEeiQaYZfZQMLYg" name="lSource" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbLaUMEPEeiQaYZfZQMLYg" name="vSource" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbLaUcEPEeiQaYZfZQMLYg" name="lTarget" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbLaUsEPEeiQaYZfZQMLYg" name="vTarget" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbLaU8EPEeiQaYZfZQMLYg" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rbLaVMEPEeiQaYZfZQMLYg" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rbLaVcEPEeiQaYZfZQMLYg" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rbMBYMEPEeiQaYZfZQMLYg" type="_rY6JcMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rKwYsMEPEeiQaYZfZQMLYg" name="CollideExactStrategy">
          <ownedComment xmi:id="_rdgVkcEPEeiQaYZfZQMLYg">
            <body>A physically correct elastic two-body collision model. 
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <generalization xmi:id="_gSM1wcFGEei0Sok_Gsjhng" general="_gSLnoMFGEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdOowMEPEeiQaYZfZQMLYg" name="updateState" specification="_rY9z0MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdOowcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rdOowsEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rdOow8EPEeiQaYZfZQMLYg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOoxMEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>dispatcher.updateAll(new IBallCmd() {

			@Override
			public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {
				// check if you are receiving your own command 
				if (context != other) {
					double radiusDistance = context.getLocation().distance(other.getLocation());
					// if the balls are overlapping
					if ((context.getRadius() + other.getRadius()) > radiusDistance) {

						// The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a 
						// * positive value. This is the amount of overlap of the balls as measured along the line between their centers.
						double deltaR = (context.getRadius() + other.getRadius()) - (radiusDistance);
						
						double collisionTime = collisionTime(context.getLocation(), other.getLocation(), context.getVelocity(), other.getVelocity(), context.getRadius() + other.getRadius());
						
						if (-1.0 &lt;= collisionTime &amp;&amp; collisionTime &lt;= 0) {
								
							// Calculate the reduced mass of the two-ball system using the square of the radius as the mass of the ball (mass is proportional to the size of the ball).
							double rm = reducedMass(Math.pow(context.getRadius(), 2), Math.pow(other.getRadius(), 2));
							
							// Use the reduced mass and other parameters to calculate the impulse of the collision. The position of the source ball will be &quot;nudged&quot; out of collision distance during this calculation.
							Point2D.Double imp = impulse(context.getLocation(), context.getVelocity(), other.getLocation(), other.getVelocity(), rm, radiusDistance, deltaR);
													
							// Update the velocities of each ball by taking the impulse divided by the mass (square of the radius) and call its post-collision 
							// interaction behavior (the interactWith method of the Ball).   
							// Note that the same method can be used to update either the source or target balls simply by switching the parameters and negating the impulse.    
							// Careful here! This is simpler than it looks! Use all the resources available to you!
							updateCollision(context, other, imp.x, imp.y, disp, collisionTime);
							updateCollision(other, context, -imp.x, -imp.y, disp, collisionTime);
						}
					}
				}
			}
		});
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdOoxcEPEeiQaYZfZQMLYg" name="collisionTime" specification="_rbMocMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdOoxsEPEeiQaYZfZQMLYg" name="x1" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOox8EPEeiQaYZfZQMLYg" name="x2" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOoyMEPEeiQaYZfZQMLYg" name="v1" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOoycEPEeiQaYZfZQMLYg" name="v2" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOoysEPEeiQaYZfZQMLYg" name="minSeparation">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOoy8EPEeiQaYZfZQMLYg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>Point deltaX = deltaP(x1, x2);
		Point deltaV = deltaP(v1, v2);
		double deltaX2 = deltaX.distanceSq(0.0, 0.0);
		double deltaV2 = deltaV.distanceSq(0.0, 0.0);
		double R2 = minSeparation*minSeparation;
		double dvdx = deltaV.x * deltaX.x + deltaV.y + deltaX.y;

		double root2 = dvdx * dvdx - deltaV2 * (deltaX2 - R2);

		if (root2 &lt; 0.0)
			return Double.MAX_VALUE;   // no solution for t

		double t = (-dvdx - Math.sqrt(root2)) / deltaV2;   // want most negative time solution, i.e. first contact

		return t;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdOozMEPEeiQaYZfZQMLYg" name="deltaP" specification="_rbN2kMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdOozcEPEeiQaYZfZQMLYg" name="p1" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOozsEPEeiQaYZfZQMLYg" name="p2" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOoz8EPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>return new Point(p2.x - p1.x, p2.y - p1.y);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdOo0MEPEeiQaYZfZQMLYg" name="reducedMass" specification="_rKxm0MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdOo0cEPEeiQaYZfZQMLYg" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOo0sEPEeiQaYZfZQMLYg" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOo08EPEeiQaYZfZQMLYg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (mSource == Double.POSITIVE_INFINITY)
			return mTarget;
		if (mTarget == Double.POSITIVE_INFINITY)
			return mSource;
		else
			return (mSource * mTarget) / (mSource + mTarget);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdOo1MEPEeiQaYZfZQMLYg" name="impulse" specification="_rbOdoMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdOo1cEPEeiQaYZfZQMLYg" name="lSource" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOo1sEPEeiQaYZfZQMLYg" name="vSource" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOo18EPEeiQaYZfZQMLYg" name="lTarget" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOo2MEPEeiQaYZfZQMLYg" name="vTarget" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOo2cEPEeiQaYZfZQMLYg" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOo2sEPEeiQaYZfZQMLYg" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOo28EPEeiQaYZfZQMLYg" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOo3MEPEeiQaYZfZQMLYg" type="_rY6JcMEPEeiQaYZfZQMLYg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>// Calculate the normal vector, from source to target
		double nx = ((double) (lTarget.x - lSource.x)) / distance;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;

		// delta velocity (speed, actually) in normal direction, source to target
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

		return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0 * reducedMass * dvn * ny);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdOo3cEPEeiQaYZfZQMLYg" name="updateCollision" specification="_rY_pAMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdOo3sEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOo38EPEeiQaYZfZQMLYg" name="target" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOo4MEPEeiQaYZfZQMLYg" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOo4cEPEeiQaYZfZQMLYg" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdOo4sEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdOo48EPEeiQaYZfZQMLYg" name="tContact">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>int mContext = context.getRadius() * context.getRadius();

		double dx = context.getVelocity().x * tContact;
		double dy = context.getVelocity().y * tContact;
		
		context.getVelocity().translate((int) Math.round(impX / mContext),(int) Math.round(impY / mContext));
		dx += -context.getVelocity().x * tContact;
		dy += -context.getVelocity().y * tContact;
		context.getLocation().translate((int)Math.round(dx), (int)Math.round(dy));

		context.interactWith(target, dispatcher, true);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rKxm0MEPEeiQaYZfZQMLYg" name="reducedMass" visibility="protected" method="_rdOo0MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rKyN4MEPEeiQaYZfZQMLYg" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rKyN4cEPEeiQaYZfZQMLYg" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rKyN4sEPEeiQaYZfZQMLYg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_rY9z0MEPEeiQaYZfZQMLYg" name="updateState" method="_rdOowMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rY9z0cEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rY9z1MEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rY9z1cEPEeiQaYZfZQMLYg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_rY9z0sEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rY_pAMEPEeiQaYZfZQMLYg" name="updateCollision" visibility="protected" method="_rdOo3cEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rY_pAcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rY_pAsEPEeiQaYZfZQMLYg" name="target" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rY_pA8EPEeiQaYZfZQMLYg" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rY_pBMEPEeiQaYZfZQMLYg" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rY_pBcEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rY_pBsEPEeiQaYZfZQMLYg" name="tContact">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_rbMocMEPEeiQaYZfZQMLYg" name="collisionTime" visibility="private" method="_rdOoxcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rbMoccEPEeiQaYZfZQMLYg" name="x1" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbMocsEPEeiQaYZfZQMLYg" name="x2" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbNPgMEPEeiQaYZfZQMLYg" name="v1" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbNPgcEPEeiQaYZfZQMLYg" name="v2" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbNPgsEPEeiQaYZfZQMLYg" name="minSeparation">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rbNPg8EPEeiQaYZfZQMLYg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_rbN2kMEPEeiQaYZfZQMLYg" name="deltaP" visibility="private" method="_rdOozMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rbN2kcEPEeiQaYZfZQMLYg" name="p1" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbN2ksEPEeiQaYZfZQMLYg" name="p2" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbN2k8EPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rbOdoMEPEeiQaYZfZQMLYg" name="impulse" visibility="protected" method="_rdOo1MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rbOdocEPEeiQaYZfZQMLYg" name="lSource" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbPEsMEPEeiQaYZfZQMLYg" name="vSource" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbPEscEPEeiQaYZfZQMLYg" name="lTarget" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbPEssEPEeiQaYZfZQMLYg" name="vTarget" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbPEs8EPEeiQaYZfZQMLYg" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rbPEtMEPEeiQaYZfZQMLYg" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rbPEtcEPEeiQaYZfZQMLYg" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rbPEtsEPEeiQaYZfZQMLYg" type="_rY6JcMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rK6JsMEPEeiQaYZfZQMLYg" name="CollideStrategy">
          <ownedComment xmi:id="_rdgVksEPEeiQaYZfZQMLYg">
            <body>Collide Strategy Class.
@author Peter, Rocky</body>
          </ownedComment>
          <generalization xmi:id="_gSOD4MFGEei0Sok_Gsjhng" general="_gSLnoMFGEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_rcdzwcEPEeiQaYZfZQMLYg" name="nudge" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcdzwsEPEeiQaYZfZQMLYg" value="1.1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdPP0MEPEeiQaYZfZQMLYg" name="updateState" specification="_rZD6csEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdPP0cEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rdPP0sEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rdPP08EPEeiQaYZfZQMLYg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_rdPP1MEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>dispatcher.updateAll(new IBallCmd() {

			@Override
			public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {
				// check if you are receiving your own command 
				if (context != other) {
					double radiusDistance = context.getLocation().distance(other.getLocation());
					// if the balls are overlapping
					if ((context.getRadius() + other.getRadius()) > radiusDistance) {
						// Calculate the reduced mass of the two-ball system using the square of the radius as the mass of the ball (mass is proportional to the size of the ball).
						double rm = reducedMass(Math.pow(context.getRadius(), 2), Math.pow(other.getRadius(), 2));
						
						// The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a 
						// * positive value. This is the amount of overlap of the balls as measured along the line between their centers.
						double deltaR = (context.getRadius() + other.getRadius()) - (radiusDistance);
						
						// Use the reduced mass and other parameters to calculate the impulse of the collision. The position of the source ball will be &quot;nudged&quot; out of collision distance during this calculation.
						Point2D.Double imp = impulse(context.getLocation(), context.getVelocity(), other.getLocation(), other.getVelocity(), rm, radiusDistance, deltaR);
						
						// Update the velocities of each ball by taking the impulse divided by the mass (square of the radius) and call its post-collision 
						// interaction behavior (the interactWith method of the Ball).   
						// Note that the same method can be used to update either the source or target balls simply by switching the parameters and negating the impulse.    
						// Careful here! This is simpler than it looks! Use all the resources available to you!
						updateCollision(context, other, imp.x, imp.y, disp);
						updateCollision(other, context, -imp.x, -imp.y, disp);
					}
				}
			}
		});
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdPP1cEPEeiQaYZfZQMLYg" name="reducedMass" specification="_rK6wwMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdPP1sEPEeiQaYZfZQMLYg" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdPP18EPEeiQaYZfZQMLYg" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdPP2MEPEeiQaYZfZQMLYg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (mSource == Double.POSITIVE_INFINITY)
			return mTarget;
		if (mTarget == Double.POSITIVE_INFINITY)
			return mSource;
		else
			return (mSource * mTarget) / (mSource + mTarget);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdPP2cEPEeiQaYZfZQMLYg" name="impulse" specification="_rbQS0MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdPP2sEPEeiQaYZfZQMLYg" name="lSource" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdPP28EPEeiQaYZfZQMLYg" name="vSource" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdPP3MEPEeiQaYZfZQMLYg" name="lTarget" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdPP3cEPEeiQaYZfZQMLYg" name="vTarget" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdPP3sEPEeiQaYZfZQMLYg" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdPP38EPEeiQaYZfZQMLYg" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdPP4MEPEeiQaYZfZQMLYg" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdPP4cEPEeiQaYZfZQMLYg" type="_rY6JcMEPEeiQaYZfZQMLYg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>// Calculate the normal vector, from source to target
		double nx = ((double) (lTarget.x - lSource.x)) / distance;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;

		// delta velocity (speed, actually) in normal direction, source to target
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

		// move the source ball beyond collision range of the target ball, along the normal direction.
		lSource.translate((int) Math.ceil(-nx * (Nudge * deltaR)), (int) Math.ceil(-ny * (Nudge * deltaR)));

		return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0 * reducedMass * dvn * ny);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdPP4sEPEeiQaYZfZQMLYg" name="updateCollision" specification="_rZFIksEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdPP48EPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdPP5MEPEeiQaYZfZQMLYg" name="target" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdPP5cEPEeiQaYZfZQMLYg" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdPP5sEPEeiQaYZfZQMLYg" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdPP58EPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>int mContext = context.getRadius() * context.getRadius();

		context.getVelocity().translate((int) Math.round(impX / mContext),(int) Math.round(impY / mContext));
		context.interactWith(target, dispatcher, true);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rK6wwMEPEeiQaYZfZQMLYg" name="reducedMass" visibility="protected" method="_rdPP1cEPEeiQaYZfZQMLYg">
            <ownedComment xmi:id="_rdgVk8EPEeiQaYZfZQMLYg">
              <body>Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
	 * result if one of the balls has infinite mass.
	 * @param mSource Mass of the source ball.
	 * @param mTarget Mass of the target ball.
	 * @return The reduced mass of the two balls (m1*m2)/(m1+m2).</body>
            </ownedComment>
            <ownedParameter xmi:id="_rK6wwcEPEeiQaYZfZQMLYg" name="mSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rK7X0MEPEeiQaYZfZQMLYg" name="mTarget">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rK7X0cEPEeiQaYZfZQMLYg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_rZD6csEPEeiQaYZfZQMLYg" name="updateState" method="_rdPP0MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZD6c8EPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rZEhgcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rZEhgsEPEeiQaYZfZQMLYg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_rZD6dMEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZFIksEPEeiQaYZfZQMLYg" name="updateCollision" visibility="protected" method="_rdPP4sEPEeiQaYZfZQMLYg">
            <ownedComment xmi:id="_rdgVlcEPEeiQaYZfZQMLYg">
              <body>Updates the velocity of the source ball, given an impulse, then uses the
	 * context's interactWith method to determine the post collision behavior, from the context
	 * ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change
	 * the velocity of the target ball, switch the source and target input
	 * parameters and negate the impulse values.   This will also run the post collision behavior from 
	 * the other perspective.
	 * 
	 * @param context The ball to update
	 * @param target The ball being collided with
	 * @param impX x-coordinate of the impulse
	 * @param impY y-coordinate of the impulse
	 * @param dispatcher The dispatcher</body>
            </ownedComment>
            <ownedParameter xmi:id="_rZFIk8EPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZFvoMEPEeiQaYZfZQMLYg" name="target" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZFvocEPEeiQaYZfZQMLYg" name="impX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rZFvosEPEeiQaYZfZQMLYg" name="impY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rZFvo8EPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rbQS0MEPEeiQaYZfZQMLYg" name="impulse" visibility="protected" method="_rdPP2cEPEeiQaYZfZQMLYg">
            <ownedComment xmi:id="_rdgVlMEPEeiQaYZfZQMLYg">
              <body>Calculates the impulse (change in momentum) of the collision in the
	 * direction from the source to the target This method calculates the
	 * impulse on the source ball. The impulse on the target ball is the
	 * negative of the result. Also moves source ball out of collision range
	 * along normal direction. The change in velocity of the source ball is the
	 * impulse divided by the source's mass The change in velocity of the target
	 * ball is the negative of the impulse divided by the target's mass
	 * 
	 * Operational note: Even though theoretically, the difference in velocities
	 * of two balls should be co-linear with the normal line between them, the
	 * discrete nature of animations means that the point where collision is
	 * detected may not be at the same point as the theoretical contact point.
	 * This method calculates the rebound directions as if the two balls were
	 * the appropriate radii such that they had just contacted
	 * _at_the_point_of_collision_detection_. This may give slightly different
	 * rebound direction than one would calculate if they contacted at the
	 * theoretical point given by their actual radii.
	 * 
	 * @param lSource Location of the source ball
	 * @param vSource Velocity of the source ball
	 * @param lTarget Location of the target ball
	 * @param vTarget Velocity of the target ball
	 * @param reducedMass Reduced mass of the two balls
	 * @param distance Distance between the two balls.
	 * @param deltaR The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a
	 * positive value. This is the amount of overlap of the balls as measured along the line between their centers.
	 * @return Return the impulse vector.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rbQS0cEPEeiQaYZfZQMLYg" name="lSource" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbQS0sEPEeiQaYZfZQMLYg" name="vSource" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbQS08EPEeiQaYZfZQMLYg" name="lTarget" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbQS1MEPEeiQaYZfZQMLYg" name="vTarget" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbQS1cEPEeiQaYZfZQMLYg" name="reducedMass">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rbQS1sEPEeiQaYZfZQMLYg" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rbQS18EPEeiQaYZfZQMLYg" name="deltaR">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rbQS2MEPEeiQaYZfZQMLYg" type="_rY6JcMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rK-bIMEPEeiQaYZfZQMLYg" name="DelayedOverlapStrategy">
          <ownedComment xmi:id="_rdgVlsEPEeiQaYZfZQMLYg">
            <body>Detects if the ball overlaps with any other balls on a delayed timer cycle.
NOTE: This strategy defines a  &quot;criteria for interaction&quot;. The interaction behavior is delegated to the
interactWith methods of the individual balls.
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <generalization xmi:id="_gSPSAMFGEei0Sok_Gsjhng" general="_gSLnoMFGEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_rcea0cEPEeiQaYZfZQMLYg" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcea0sEPEeiQaYZfZQMLYg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rcfB4cEPEeiQaYZfZQMLYg" name="delay" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcfB4sEPEeiQaYZfZQMLYg" value="15"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdP24sEPEeiQaYZfZQMLYg" name="updateState" specification="_rZIy8MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdP248EPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdP25MEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>if (count++ > delay) { // evaluates count > delay then increments count
			// send a command to all balls
			dispatcher.updateAll((other, disp) -> {
				// check if you are receiving your own command 
				if (context != other) {
					double radiusDistance = context.getLocation().distance(other.getLocation());
					// if the balls are overlapping
					Boolean inContact = (context.getRadius() + other.getRadius()) > radiusDistance; 
					if (inContact) {
						// invoke the interaction strategies of the two interacting balls 
						context.interactWith(other, dispatcher, true);
						other.interactWith(context, dispatcher, false); 
					}
					count = 0;
				}
			});
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZIy8MEPEeiQaYZfZQMLYg" name="updateState" method="_rdP24sEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZIy8cEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZIy8sEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLAQUMEPEeiQaYZfZQMLYg" name="EatStrategy">
          <ownedComment xmi:id="_rdgVl8EPEeiQaYZfZQMLYg">
            <body>Kills whomever the ball collides with and increases its area by the killed ball's area.
NOTE: This strategy only installs a &quot;post-collision interaction behavior&quot; and thus at least needs 
to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send. 
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_rZKBEMEPEeiQaYZfZQMLYg" client="_rLAQUMEPEeiQaYZfZQMLYg" supplier="_rJXRkMEPEeiQaYZfZQMLYg" contract="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdP25cEPEeiQaYZfZQMLYg" name="init" specification="_rZKoIMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdP25sEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>context.setInteractStrategy(
				new MultiInteractStrategy(
						context.getInteractStrategy(), 
						(contextBall, otherBall, disp, interactFirst) -> {
							// Calculate the radius of the ball needed to increase the area by the killed balls area
							double otherArea = Math.PI * otherBall.getRadius() * otherBall.getRadius();
							double thisArea = Math.PI * contextBall.getRadius() * contextBall.getRadius();				
							double desiredArea = otherArea + thisArea;
							double desiredRadius = Math.sqrt(desiredArea / Math.PI);
															
							// Kill the other ball and increase the context ball's radius 
							disp.removeObserver(otherBall);
							contextBall.setRadius((int) Math.round(desiredRadius));
						}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZKoIMEPEeiQaYZfZQMLYg" name="init" method="_rdP25cEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZKoIcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZLPMMEPEeiQaYZfZQMLYg" name="updateState">
            <ownedParameter xmi:id="_rZLPMcEPEeiQaYZfZQMLYg" name="b" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZLPMsEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLCskMEPEeiQaYZfZQMLYg" name="FlashStrategy">
          <ownedComment xmi:id="_rdgVmMEPEeiQaYZfZQMLYg">
            <body>Strategy that only installs an interaction strategy and thus at least needs to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
Takes the color of other ball. 
NOTE 1: This strategy only installs a &quot;post-collision interaction behavior&quot; and thus at least needs 
to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
NOTE 2: The frequency that a ball flashes increases proportionally to the number of balls that it meets a &quot;criteria of interaction&quot; with.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.   
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_rcfo8cEPEeiQaYZfZQMLYg" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcfo8sEPEeiQaYZfZQMLYg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rcgQAMEPEeiQaYZfZQMLYg" name="delay" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcgQAcEPEeiQaYZfZQMLYg" value="40"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rcgQA8EPEeiQaYZfZQMLYg" name="originalColor" visibility="package" type="_rXz9QMEPEeiQaYZfZQMLYg" association="_ret2gcEPEeiQaYZfZQMLYg"/>
          <interfaceRealization xmi:id="_rZL2Q8EPEeiQaYZfZQMLYg" client="_rLCskMEPEeiQaYZfZQMLYg" supplier="_rJXRkMEPEeiQaYZfZQMLYg" contract="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdP258EPEeiQaYZfZQMLYg" name="init" specification="_rZMdUcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdP26MEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>originalColor = context.getColor();
		
		context.setInteractStrategy(
				new MultiInteractStrategy(
						context.getInteractStrategy(), 			
						(contextBall, otherBall, disp,interactFirst) -> {							
							if (count &lt; delay) {
								if (count &lt; (delay / 2))
									contextBall.setColor(Color.RED);
								else
									contextBall.setColor(originalColor);
								count++;
							} else {
								count = 0;
							}
						}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZMdUcEPEeiQaYZfZQMLYg" name="init" method="_rdP258EPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZMdUsEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZNEY8EPEeiQaYZfZQMLYg" name="updateState">
            <ownedParameter xmi:id="_rZNEZMEPEeiQaYZfZQMLYg" name="b" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZNrcMEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLFI0MEPEeiQaYZfZQMLYg" name="GravityStrategy">
          <ownedComment xmi:id="_rdgVmcEPEeiQaYZfZQMLYg">
            <body>This strategy causes a ball to fall to the bottom and bounce.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_gSQgIMFGEei0Sok_Gsjhng" general="_gSLnoMFGEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_rcg3EcEPEeiQaYZfZQMLYg" name="max" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcg3EsEPEeiQaYZfZQMLYg" value="30"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rcheIcEPEeiQaYZfZQMLYg" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcheIsEPEeiQaYZfZQMLYg" value="max"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rciFMcEPEeiQaYZfZQMLYg" name="firstUpdate" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <qualifier xmi:id="_rcjTUcEPEeiQaYZfZQMLYg" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rciFMsEPEeiQaYZfZQMLYg" value="new HashMap&lt;Ball, Boolean>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdP26cEPEeiQaYZfZQMLYg" name="updateState" specification="_rZQHscEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdP26sEPEeiQaYZfZQMLYg" name="b" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdP268EPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>if (!firstUpdate.containsKey(b) || firstUpdate.get(b) == false) {
			if (b.getVelocity().y == 0) {
				b.setVelocity(new Point(0, 1));
			}
			b.setVelocity(new Point(0, Math.abs(b.getVelocity().y)));
		}
		firstUpdate.putIfAbsent(b, true);

		if (b.getVelocity().y &lt; 0) {
			if (0 > count) {
				b.setVelocity(new Point(0, -b.getVelocity().y));
				count = max;
			} else {
				count--;
			}
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZQHscEPEeiQaYZfZQMLYg" name="updateState" method="_rdP26cEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZQuwMEPEeiQaYZfZQMLYg" name="b" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZQuwcEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLHlEMEPEeiQaYZfZQMLYg" name="GrowStrategy">
          <ownedComment xmi:id="_rdg8oMEPEeiQaYZfZQMLYg">
            <body>An update strategy that increases the radius to a certain point.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.</body>
          </ownedComment>
          <generalization xmi:id="_gSTjcMFGEei0Sok_Gsjhng" general="_gSLnoMFGEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_rcj6YMEPEeiQaYZfZQMLYg" name="firstUpdate" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <qualifier xmi:id="_rckhcMEPEeiQaYZfZQMLYg" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcj6YcEPEeiQaYZfZQMLYg" value="new HashMap&lt;Ball, Boolean>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdQd8MEPEeiQaYZfZQMLYg" name="updateState" specification="_rZTLAcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdQd8cEPEeiQaYZfZQMLYg" name="b" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdQd8sEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>if (!firstUpdate.containsKey(b) || firstUpdate.get(b) == false)
			b.setRadius(2);
		firstUpdate.putIfAbsent(b, true);

		// If the ball hasn't reached its max size, grow it.
		if (b.getRadius() &lt; 100) {
			b.setRadius(b.getRadius() + 1);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZTLAcEPEeiQaYZfZQMLYg" name="updateState" method="_rdQd8MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZTLAsEPEeiQaYZfZQMLYg" name="b" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZTyEMEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLKBUMEPEeiQaYZfZQMLYg" name="KillStrategy">
          <ownedComment xmi:id="_rdg8ocEPEeiQaYZfZQMLYg">
            <body>Deletes other when it collides.
NOTE: This strategy only installs a &quot;post-collision interaction behavior&quot; and thus at least needs 
to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send. 
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_rZVnQMEPEeiQaYZfZQMLYg" client="_rLKBUMEPEeiQaYZfZQMLYg" supplier="_rJXRkMEPEeiQaYZfZQMLYg" contract="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdQd88EPEeiQaYZfZQMLYg" name="init" specification="_rZWOUMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdQd9MEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>context.setInteractStrategy(
				new MultiInteractStrategy(
						context.getInteractStrategy(), 
						(contextBall, targetBall, disp, interactFirst) -> disp.removeObserver(targetBall)));		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZWOUMEPEeiQaYZfZQMLYg" name="init" method="_rdQd88EPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZWOUcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZWOUsEPEeiQaYZfZQMLYg" name="updateState">
            <ownedParameter xmi:id="_rZWOU8EPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZWOVMEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLL2gMEPEeiQaYZfZQMLYg" name="MultiInteractStrategy">
          <ownedComment xmi:id="_gSg-0MFGEei0Sok_Gsjhng">
            <body>An interact strategy that combines two interact strategies.
@author Peter</body>
          </ownedComment>
          <ownedAttribute xmi:id="_rckhccEPEeiQaYZfZQMLYg" name="interactStrategy1" visibility="private" type="_rJP80MEPEeiQaYZfZQMLYg" association="_ret2hMEPEeiQaYZfZQMLYg"/>
          <ownedAttribute xmi:id="_rclIgcEPEeiQaYZfZQMLYg" name="interactStrategy2" visibility="private" type="_rJP80MEPEeiQaYZfZQMLYg" association="_reudkcEPEeiQaYZfZQMLYg"/>
          <interfaceRealization xmi:id="_rZXccMEPEeiQaYZfZQMLYg" client="_rLL2gMEPEeiQaYZfZQMLYg" supplier="_rJP80MEPEeiQaYZfZQMLYg" contract="_rJP80MEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdQd9cEPEeiQaYZfZQMLYg" name="MultiInteractStrategy" specification="_rZXcccEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdQd9sEPEeiQaYZfZQMLYg" name="interactStrategy1" type="_rJP80MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdQd98EPEeiQaYZfZQMLYg" name="interactStrategy2" type="_rJP80MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdQd-MEPEeiQaYZfZQMLYg" type="_rLL2gMEPEeiQaYZfZQMLYg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>this.interactStrategy1 = interactStrategy1;
		this.interactStrategy2 = interactStrategy2;		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdQd-cEPEeiQaYZfZQMLYg" name="interact" specification="_rZYDgMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdQd-sEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdQd-8EPEeiQaYZfZQMLYg" name="target" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdQd_MEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdQd_cEPEeiQaYZfZQMLYg" name="isSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>interactStrategy1.interact(context, target, disp, isSource);
		interactStrategy2.interact(context, target, disp, isSource);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZXcccEPEeiQaYZfZQMLYg" name="MultiInteractStrategy" method="_rdQd9cEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_rZXcdMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rZXcdcEPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_rdg8o8EPEeiQaYZfZQMLYg">
              <body>Create a new MultiInteractStrategy.
	 * @param interactStrategy1 The first interaction strategy.
	 * @param interactStrategy2 The second interaction strategy.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rZXccsEPEeiQaYZfZQMLYg" name="interactStrategy1" type="_rJP80MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZXcc8EPEeiQaYZfZQMLYg" name="interactStrategy2" type="_rJP80MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZXcdsEPEeiQaYZfZQMLYg" type="_rLL2gMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZYDgMEPEeiQaYZfZQMLYg" name="interact" method="_rdQd-cEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZYDgcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZYDgsEPEeiQaYZfZQMLYg" name="target" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZYDg8EPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZYDhMEPEeiQaYZfZQMLYg" name="isSource">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLPg4MEPEeiQaYZfZQMLYg" name="MultiStrategy">
          <ownedComment xmi:id="_rdg8pMEPEeiQaYZfZQMLYg">
            <body>An update strategy that combines two update strategies.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter</body>
          </ownedComment>
          <ownedAttribute xmi:id="_rclvkMEPEeiQaYZfZQMLYg" name="s1" visibility="private" type="_rJXRkMEPEeiQaYZfZQMLYg" association="_reudlMEPEeiQaYZfZQMLYg"/>
          <ownedAttribute xmi:id="_rcmWocEPEeiQaYZfZQMLYg" name="s2" visibility="private" type="_rJXRkMEPEeiQaYZfZQMLYg" association="_revEocEPEeiQaYZfZQMLYg"/>
          <interfaceRealization xmi:id="_rZYqk8EPEeiQaYZfZQMLYg" client="_rLPg4MEPEeiQaYZfZQMLYg" supplier="_rJXRkMEPEeiQaYZfZQMLYg" contract="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdRFAMEPEeiQaYZfZQMLYg" name="MultiStrategy" specification="_rZZRocEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdRFAcEPEeiQaYZfZQMLYg" name="s1" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdRFAsEPEeiQaYZfZQMLYg" name="s2" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdRFA8EPEeiQaYZfZQMLYg" type="_rLPg4MEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>this.s1 = s1;
		this.s2 = s2;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdRFBMEPEeiQaYZfZQMLYg" name="updateState" specification="_rZafwcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdRFBcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdRFBsEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>s1.updateState(context, disp);
		s2.updateState(context, disp);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdRFB8EPEeiQaYZfZQMLYg" name="init" specification="_rZbt48EPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdRFCMEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>s1.init(host);
		s2.init(host);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZZRocEPEeiQaYZfZQMLYg" name="MultiStrategy" method="_rdRFAMEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_rZZ4ssEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rZZ4s8EPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_rdg8pcEPEeiQaYZfZQMLYg">
              <body>Creates a new MultiStrategy.
	 * @param s1 The first update strategy.
	 * @param s2 The second update strategy.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rZZ4sMEPEeiQaYZfZQMLYg" name="s1" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZZ4scEPEeiQaYZfZQMLYg" name="s2" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZZ4tMEPEeiQaYZfZQMLYg" type="_rLPg4MEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZafwcEPEeiQaYZfZQMLYg" name="updateState" method="_rdRFBMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZafwsEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZafw8EPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZbt48EPEeiQaYZfZQMLYg" name="init" method="_rdRFB8EPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZcU8MEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLSkMMEPEeiQaYZfZQMLYg" name="OverlapStrategy">
          <ownedComment xmi:id="_rdg8psEPEeiQaYZfZQMLYg">
            <body>Detects if the ball overlaps with any other balls. Does not detect an overlap between a ball and its most recently overlapped ball!
NOTE: This strategy defines a  &quot;criteria for interaction&quot;. The interaction behavior is delegated to the
interactWith methods of the individual balls.
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_rZc8AMEPEeiQaYZfZQMLYg" client="_rLSkMMEPEeiQaYZfZQMLYg" supplier="_rJXRkMEPEeiQaYZfZQMLYg" contract="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdRFCcEPEeiQaYZfZQMLYg" name="init" specification="_rZeKIMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdRFCsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>host.setPrevInteraction(host);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdRFC8EPEeiQaYZfZQMLYg" name="updateState" specification="_rZexMsEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdRFDMEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdRFDcEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>dispatcher.updateAll((other, disp) -> {

			// check if you are receiving your own command 
			if (context != other) {
				double radiusDistance = context.getLocation().distance(other.getLocation());
				Boolean isOverlapping = context.getRadius() + other.getRadius() > radiusDistance; 
				
				// if the balls are overlapping
				if (isOverlapping) {
					
					// if the other ball isn't the most recent ball that the context ball interacted with 
					if (context.getPrevInteraction() != other) {
						// invoke the interaction strategies of the two interacting balls 
						context.interactWith(other, dispatcher, true);
						other.interactWith(context, dispatcher, false);

						// set the previous interaction fields of each ball 
						context.setPrevInteraction(other);
						other.setPrevInteraction(context);
					}
				}
			}
		});
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZeKIMEPEeiQaYZfZQMLYg" name="init" method="_rdRFCcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZeKIcEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZexMsEPEeiQaYZfZQMLYg" name="updateState" method="_rdRFC8EPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZexM8EPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZexNMEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLTyUMEPEeiQaYZfZQMLYg" name="ShrinkStrategy">
          <ownedComment xmi:id="_rdg8p8EPEeiQaYZfZQMLYg">
            <body>An update strategy that shrinks the radius to a certain size.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_gSUxkMFGEei0Sok_Gsjhng" general="_gSLnoMFGEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_rcoL0MEPEeiQaYZfZQMLYg" name="firstUpdate" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <qualifier xmi:id="_rcoy4MEPEeiQaYZfZQMLYg" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcoL0cEPEeiQaYZfZQMLYg" value="new HashMap&lt;Ball, Boolean>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdRFDsEPEeiQaYZfZQMLYg" name="updateState" specification="_rZhNcMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdRFD8EPEeiQaYZfZQMLYg" name="b" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdRFEMEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>if (!firstUpdate.containsKey(b) || firstUpdate.get(b) == false)
			b.setRadius(100);
		firstUpdate.putIfAbsent(b, true);

		if (b.getRadius() > 10) {
			b.setRadius(b.getRadius() - 1);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZhNcMEPEeiQaYZfZQMLYg" name="updateState" method="_rdRFDsEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZhNccEPEeiQaYZfZQMLYg" name="b" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZhNcsEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLWOkMEPEeiQaYZfZQMLYg" name="SimilarColorStrategy">
          <ownedComment xmi:id="_rdg8qMEPEeiQaYZfZQMLYg">
            <body>Detects if the ball has a similar color to that of any other ball.
NOTE: This strategy defines a  &quot;criteria for interaction&quot;. The interaction behavior is delegated to the
interactWith methods of the individual balls. 
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_rZjCosEPEeiQaYZfZQMLYg" client="_rLWOkMEPEeiQaYZfZQMLYg" supplier="_rJXRkMEPEeiQaYZfZQMLYg" contract="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdRsEMEPEeiQaYZfZQMLYg" name="init" specification="_rZjpscEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdRsEcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>context.setPrevInteraction(context);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdRsEsEPEeiQaYZfZQMLYg" name="updateState" specification="_rZk30cEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdRsE8EPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdRsFMEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>dispatcher.updateAll((other, disp) -> {
			// check if you are receiving your own command 
			if (context != other) {
				Color c1 = context.getColor();
				Color c2 = other.getColor();
				
				if (areSimilarColors(c1, c2)) {
					// invoke the interaction strategies of the two interacting balls 
					context.interactWith(other, dispatcher, true);
					other.interactWith(context, dispatcher, false);
				}
			}
		});
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdRsFcEPEeiQaYZfZQMLYg" name="colorDifference" specification="_rbSIAMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdRsFsEPEeiQaYZfZQMLYg" name="c1" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdRsF8EPEeiQaYZfZQMLYg" name="c2" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdRsGMEPEeiQaYZfZQMLYg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>double rBar = (c1.getRed() + c2.getRed()) / 2.0;
		double deltaR = c1.getRed() - c2.getRed();
		double deltaG = c1.getGreen() - c2.getGreen();
		double deltaB = c1.getBlue() - c2.getBlue();
		double fac = (rBar * (Math.pow(deltaR, 2) - Math.pow(deltaB, 2))) / 256.0;
		
		return Math.sqrt(2 * Math.pow(deltaR, 2) + 4 * Math.pow(deltaG, 2) + 3 * Math.pow(deltaB, 2) + fac);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdRsGcEPEeiQaYZfZQMLYg" name="areSimilarColors" specification="_rbSvEMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdRsGsEPEeiQaYZfZQMLYg" name="c1" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdRsG8EPEeiQaYZfZQMLYg" name="c2" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdRsHMEPEeiQaYZfZQMLYg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return colorDifference(c1, c2) &lt; 200.0;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZjpscEPEeiQaYZfZQMLYg" name="init" method="_rdRsEMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZkQwMEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZk30cEPEeiQaYZfZQMLYg" name="updateState" method="_rdRsEsEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZk30sEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZk308EPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rbSIAMEPEeiQaYZfZQMLYg" name="colorDifference" visibility="private" method="_rdRsFcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rbSIAcEPEeiQaYZfZQMLYg" name="c1" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbSIAsEPEeiQaYZfZQMLYg" name="c2" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbSIA8EPEeiQaYZfZQMLYg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_rbSvEMEPEeiQaYZfZQMLYg" name="areSimilarColors" visibility="private" method="_rdRsGcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rbSvEcEPEeiQaYZfZQMLYg" name="c1" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbSvEsEPEeiQaYZfZQMLYg" name="c2" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rbSvE8EPEeiQaYZfZQMLYg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLYq0MEPEeiQaYZfZQMLYg" name="SpawnStrategy">
          <ownedComment xmi:id="_rdg8qcEPEeiQaYZfZQMLYg">
            <body>Strategy that both collides and interacts.
Adds an identical ball whenever it overlaps with another ball.
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <generalization xmi:id="_gSVYoMFGEei0Sok_Gsjhng" general="_gSLnoMFGEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_rcoy4cEPEeiQaYZfZQMLYg" name="count" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcpZ8MEPEeiQaYZfZQMLYg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rcpZ8sEPEeiQaYZfZQMLYg" name="delay" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcqBAMEPEeiQaYZfZQMLYg" value="100"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdSTIMEPEeiQaYZfZQMLYg" name="updateState" specification="_rZoiMcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdSTIcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rdSTIsEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rdSTI8EPEeiQaYZfZQMLYg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_rdSTJMEPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>if (delay &lt; count++) { 
			dispatcher.updateAll(new IBallCmd() {

				@Override
				public void apply(Ball other, IDispatcher&lt;IBallCmd> disp) {
					// check if you are receiving your own command 
					if (count != 0 &amp;&amp; context != other) {
						// if the balls are overlapping
						if ((context.getRadius() + other.getRadius()) > context.getLocation().distance(other.getLocation())) {
							// create a copy of the original ball but with a different velocity and a new spawn strategy
							disp.addObserver(new Ball(
									new Point(context.getLocation()),
									context.getRadius(), 
									new Point(-context.getVelocity().x + 1, -context.getVelocity().y + 1),
									context.getColor(),
									context.getContainer(), 
									new SpawnStrategy(), 
									context.getPaintStrategy()));
							count = 0;
							delay *= 5;
						}
					}
				}
			});
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZoiMcEPEeiQaYZfZQMLYg" name="updateState" method="_rdSTIMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZoiMsEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rZpJQcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rZpJQsEPEeiQaYZfZQMLYg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_rZoiM8EPEeiQaYZfZQMLYg" name="dispatcher" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLagAMEPEeiQaYZfZQMLYg" name="StraightStrategy">
          <ownedComment xmi:id="_rdhjsMEPEeiQaYZfZQMLYg">
            <body>An update strategy that does nothing.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter Dulworth (psd2)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_rZqXYsEPEeiQaYZfZQMLYg" client="_rLagAMEPEeiQaYZfZQMLYg" supplier="_rJXRkMEPEeiQaYZfZQMLYg" contract="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedOperation xmi:id="_rZq-ccEPEeiQaYZfZQMLYg" name="init">
            <ownedParameter xmi:id="_rZq-csEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZrlg8EPEeiQaYZfZQMLYg" name="updateState">
            <ownedParameter xmi:id="_rZrlhMEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZrlhcEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLc8QMEPEeiQaYZfZQMLYg" name="SwapColorStrategy">
          <ownedComment xmi:id="_rdhjscEPEeiQaYZfZQMLYg">
            <body>Swaps colors with whatever ball it interacts with.
NOTE: This strategy only installs a &quot;post-collision interaction behavior&quot; and thus at least needs 
to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send. 
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_rZszoMEPEeiQaYZfZQMLYg" client="_rLc8QMEPEeiQaYZfZQMLYg" supplier="_rJXRkMEPEeiQaYZfZQMLYg" contract="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdSTJcEPEeiQaYZfZQMLYg" name="init" specification="_rZszosEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdSTJsEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>context.setInteractStrategy(
				new MultiInteractStrategy(
						context.getInteractStrategy(), 
						(contextBall, otherBall, disp, interactFirst) -> {
							if (interactFirst) {
								// store the colors of the ball
								Color contextColor = contextBall.getColor();
								Color otherColor = otherBall.getColor();
								
								// swap the colors
								contextBall.setColor(otherColor);
								otherBall.setColor(contextColor);
							}
						}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZszosEPEeiQaYZfZQMLYg" name="init" method="_rdSTJcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZszo8EPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZtas8EPEeiQaYZfZQMLYg" name="updateState">
            <ownedParameter xmi:id="_rZtatMEPEeiQaYZfZQMLYg" name="b" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZtatcEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLexcMEPEeiQaYZfZQMLYg" name="SwitcherStrategy">
          <ownedComment xmi:id="_rdhjssEPEeiQaYZfZQMLYg">
            <body>This class is a wrapper over a single arbitrary strategy which can be changed.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter Dulworth (psd2)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_rcqoEMEPEeiQaYZfZQMLYg" name="strategy" visibility="private" type="_rJXRkMEPEeiQaYZfZQMLYg" association="_revrscEPEeiQaYZfZQMLYg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcrPIcEPEeiQaYZfZQMLYg" value="new StraightStrategy&lt;TMsg>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_rZuo0MEPEeiQaYZfZQMLYg" client="_rLexcMEPEeiQaYZfZQMLYg" supplier="_rJXRkMEPEeiQaYZfZQMLYg" contract="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdS6MMEPEeiQaYZfZQMLYg" name="updateState" specification="_rZvP4MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdS6McEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdS6MsEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>this.strategy.updateState(context, disp);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdS6M8EPEeiQaYZfZQMLYg" name="setStrategy" specification="_rZv288EPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdS6NMEPEeiQaYZfZQMLYg" name="newStrategy" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>this.strategy = newStrategy;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSd7gMFGEei0Sok_Gsjhng" name="init" specification="_rZxFEMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_gSd7gcFGEei0Sok_Gsjhng" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>strategy.init(host);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZvP4MEPEeiQaYZfZQMLYg" name="updateState" method="_rdS6MMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZvP4cEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZvP4sEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZv288EPEeiQaYZfZQMLYg" name="setStrategy" method="_rdS6M8EPEeiQaYZfZQMLYg">
            <ownedComment xmi:id="_rdhjs8EPEeiQaYZfZQMLYg">
              <body>@param newStrategy The new strategy to set.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rZv29MEPEeiQaYZfZQMLYg" name="newStrategy" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZxFEMEPEeiQaYZfZQMLYg" name="init" method="_gSd7gMFGEei0Sok_Gsjhng">
            <ownedParameter xmi:id="_rZxFEcEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLgmoMEPEeiQaYZfZQMLYg" name="TakeColorStrategy">
          <ownedComment xmi:id="_rdhjtMEPEeiQaYZfZQMLYg">
            <body>Takes the color of other ball. 
NOTE: This strategy only installs a &quot;post-collision interaction behavior&quot; and thus at least needs 
to be combined with a strategy that detects an interaction, e.g. Overlap or Collide.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
          </ownedComment>
          <interfaceRealization xmi:id="_rZxsIcEPEeiQaYZfZQMLYg" client="_rLgmoMEPEeiQaYZfZQMLYg" supplier="_rJXRkMEPEeiQaYZfZQMLYg" contract="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdS6NcEPEeiQaYZfZQMLYg" name="init" specification="_rZyTMcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdS6NsEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>context.setInteractStrategy(
				new MultiInteractStrategy(
						context.getInteractStrategy(),
						(contextBall, otherBall, disp, interactFirst) -> {
							contextBall.setColor(otherBall.getColor());
						}));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZyTMcEPEeiQaYZfZQMLYg" name="init" method="_rdS6NcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZyTMsEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rZy6QsEPEeiQaYZfZQMLYg" name="updateState">
            <ownedParameter xmi:id="_rZy6Q8EPEeiQaYZfZQMLYg" name="b" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZy6RMEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLib0MEPEeiQaYZfZQMLYg" name="TeleportingStrategy">
          <ownedComment xmi:id="_rdhjtcEPEeiQaYZfZQMLYg">
            <body>An update strategy that jumps to a random location.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_gSV_sMFGEei0Sok_Gsjhng" general="_gSLnoMFGEei0Sok_Gsjhng"/>
          <ownedAttribute xmi:id="_rcr2MMEPEeiQaYZfZQMLYg" name="counter" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcr2McEPEeiQaYZfZQMLYg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rcsdQMEPEeiQaYZfZQMLYg" name="teleportPeriod" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcsdQcEPEeiQaYZfZQMLYg" value="100"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdS6N8EPEeiQaYZfZQMLYg" name="updateState" specification="_rZ1WgcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdS6OMEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdS6OcEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>counter += 1;
		if (counter % teleportPeriod == 0) {
			Point p = Randomizer.Singleton
					.randomLoc(new Dimension(context.getContainer().getWidth() - (2 * context.getRadius()),
							context.getContainer().getHeight() - (2 * context.getRadius())));
			p.x += context.getRadius(); // move p to the right by r
			p.y += context.getRadius(); // move p down by r
			context.setLocation(p);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZ1WgcEPEeiQaYZfZQMLYg" name="updateState" method="_rdS6N8EPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZ19kMEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZ19kcEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rLkRAMEPEeiQaYZfZQMLYg" name="ZoneStrategy">
          <ownedComment xmi:id="_rdhjtsEPEeiQaYZfZQMLYg">
            <body>An update strategy that sets the color based on which quadrant the location is.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_gSXN0MFGEei0Sok_Gsjhng" general="_gSLnoMFGEei0Sok_Gsjhng"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdThQMEPEeiQaYZfZQMLYg" name="updateState" specification="_rZ5A4cEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdThQcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdThQsEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>int x = context.getLocation().x;
		int y = context.getLocation().y;
		int w = context.getContainer().getWidth();
		int h = context.getContainer().getHeight();

		// top left
		if (x > 0 &amp;&amp; x &lt;= w / 2 &amp;&amp; y > 0 &amp;&amp; y &lt;= h / 2) {
			context.setColor(Color.GREEN);
		}

		// bottom left
		if (x > 0 &amp;&amp; x &lt;= w / 2 &amp;&amp; y > h / 2 &amp;&amp; y &lt;= h) {
			context.setColor(Color.BLUE);
		}

		// top right
		if (x > w / 2 &amp;&amp; x &lt;= w &amp;&amp; y > 0 &amp;&amp; y &lt;= h / 2) {
			context.setColor(Color.RED);
		}

		// bottom right
		if (x > w / 2 &amp;&amp; x &lt;= w &amp;&amp; y > h / 2 &amp;&amp; y &lt;= h) {
			context.setColor(Color.YELLOW);
		}

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rZ5A4cEPEeiQaYZfZQMLYg" name="updateState" method="_rdThQMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rZ5A4sEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rZ5A48EPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rcisQcEPEeiQaYZfZQMLYg" name="Ball"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_ret2gcEPEeiQaYZfZQMLYg" name="" memberEnd="_ret2gsEPEeiQaYZfZQMLYg _rcgQA8EPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_ret2gsEPEeiQaYZfZQMLYg" name="" type="_rLCskMEPEeiQaYZfZQMLYg" association="_ret2gcEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ret2hMEPEeiQaYZfZQMLYg" name="" memberEnd="_ret2hcEPEeiQaYZfZQMLYg _rckhccEPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_ret2hcEPEeiQaYZfZQMLYg" name="" type="_rLL2gMEPEeiQaYZfZQMLYg" association="_ret2hMEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_reudkcEPEeiQaYZfZQMLYg" name="" memberEnd="_reudksEPEeiQaYZfZQMLYg _rclIgcEPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_reudksEPEeiQaYZfZQMLYg" name="" type="_rLL2gMEPEeiQaYZfZQMLYg" association="_reudkcEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_reudlMEPEeiQaYZfZQMLYg" name="" memberEnd="_reudlcEPEeiQaYZfZQMLYg _rclvkMEPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_reudlcEPEeiQaYZfZQMLYg" name="" type="_rLPg4MEPEeiQaYZfZQMLYg" association="_reudlMEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_revEocEPEeiQaYZfZQMLYg" name="" memberEnd="_revEosEPEeiQaYZfZQMLYg _rcmWocEPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_revEosEPEeiQaYZfZQMLYg" name="" type="_rLPg4MEPEeiQaYZfZQMLYg" association="_revEocEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_revrscEPEeiQaYZfZQMLYg" name="" memberEnd="_revrssEPEeiQaYZfZQMLYg _rcqoEMEPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_revrssEPEeiQaYZfZQMLYg" name="" type="_rLexcMEPEeiQaYZfZQMLYg" association="_revrscEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gSLnoMFGEei0Sok_Gsjhng" name="AUpdateStrategy"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_rFwj8MEPEeiQaYZfZQMLYg" name="paint">
        <packagedElement xmi:type="uml:Package" xmi:id="_rGPsIMEPEeiQaYZfZQMLYg" name="shape">
          <packagedElement xmi:type="uml:Class" xmi:id="_rJ_jsMEPEeiQaYZfZQMLYg" name="EllipseShapeFactory">
            <ownedComment xmi:id="_rdegacEPEeiQaYZfZQMLYg">
              <body>Concrete shape factory that instantiates Ellipse2D.Double shapes.
@author Peter</body>
            </ownedComment>
            <ownedAttribute xmi:id="_rcXGEsEPEeiQaYZfZQMLYg" name="Singleton" isLeaf="true" isStatic="true" type="_rJ_jsMEPEeiQaYZfZQMLYg" isReadOnly="true" association="_rekslMEPEeiQaYZfZQMLYg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcXtIMEPEeiQaYZfZQMLYg" value="new EllipseShapeFactory()"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_rYlZUcEPEeiQaYZfZQMLYg" client="_rJ_jsMEPEeiQaYZfZQMLYg" supplier="_rKHfgMEPEeiQaYZfZQMLYg" contract="_rKHfgMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdJwQ8EPEeiQaYZfZQMLYg" name="makeShape" specification="_rKB_8MEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdJwRMEPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdJwRcEPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdJwRsEPEeiQaYZfZQMLYg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdJwR8EPEeiQaYZfZQMLYg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdJwSMEPEeiQaYZfZQMLYg" type="_rYbBQMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>return new Ellipse2D.Double(x - xScale, y - yScale, 2 * xScale, 2 * yScale);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKAx0MEPEeiQaYZfZQMLYg" name="EllipseShapeFactory" visibility="private">
              <eAnnotations xmi:id="_rKAx0cEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKBY4MEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKBY4sEPEeiQaYZfZQMLYg" type="_rJ_jsMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rKB_8MEPEeiQaYZfZQMLYg" name="makeShape" method="_rdJwQ8EPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rKB_8cEPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rKB_8sEPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rKB_88EPEeiQaYZfZQMLYg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rKB_9MEPEeiQaYZfZQMLYg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_ra_NEMEPEeiQaYZfZQMLYg" type="_rYbBQMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKD1IMEPEeiQaYZfZQMLYg" name="Fish1PolygonFactory">
            <ownedComment xmi:id="_rdegasEPEeiQaYZfZQMLYg">
              <body>Concrete PolygonFactory that creates fish-shaped Polygons that have a longer tail and an open mouth.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_rYmAYcEPEeiQaYZfZQMLYg" general="_rKJUsMEPEeiQaYZfZQMLYg"/>
            <ownedAttribute xmi:id="_rcXtIcEPEeiQaYZfZQMLYg" name="fishPoints" visibility="private" isLeaf="true" isStatic="true" type="_rX0kUcEPEeiQaYZfZQMLYg" isReadOnly="true" association="_relTocEPEeiQaYZfZQMLYg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rcXtIsEPEeiQaYZfZQMLYg" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcXtJMEPEeiQaYZfZQMLYg" value="{ new Point(-10, -6), new Point(-10, 6), new Point(-4, 2),&#xA;&#x9;&#x9;&#x9;new Point(-2, 2), new Point(2, 6), new Point(8, 6), new Point(12, 2), new Point(10, 0), new Point(12, -2),&#xA;&#x9;&#x9;&#x9;new Point(8, -6), new Point(2, -6), new Point(-2, -2), new Point(-4, -2) }"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_rcYUMMEPEeiQaYZfZQMLYg" name="scale" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcYUMcEPEeiQaYZfZQMLYg" value="1.0 / 12.0"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_rYmAYMEPEeiQaYZfZQMLYg" client="_rKD1IMEPEeiQaYZfZQMLYg" supplier="_rKHfgMEPEeiQaYZfZQMLYg" contract="_rKHfgMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdJwScEPEeiQaYZfZQMLYg" name="Fish1PolygonFactory" specification="_rKEcMMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdJwSsEPEeiQaYZfZQMLYg" type="_rKD1IMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), scale, fishPoints);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKEcMMEPEeiQaYZfZQMLYg" name="Fish1PolygonFactory" method="_rdJwScEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKEcMcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKEcMsEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKEcM8EPEeiQaYZfZQMLYg" type="_rKD1IMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKFqUMEPEeiQaYZfZQMLYg" name="Fish2PolygonFactory">
            <ownedComment xmi:id="_rdega8EPEeiQaYZfZQMLYg">
              <body>Concrete PolygonFactory that creates fish-shaped Polygons that have a longer tail and an open mouth.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_rYnOgMEPEeiQaYZfZQMLYg" general="_rKJUsMEPEeiQaYZfZQMLYg"/>
            <ownedAttribute xmi:id="_rcYUM8EPEeiQaYZfZQMLYg" name="fishPoints" visibility="private" isLeaf="true" isStatic="true" type="_rX0kUcEPEeiQaYZfZQMLYg" isReadOnly="true" association="_rel6scEPEeiQaYZfZQMLYg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rcYUNMEPEeiQaYZfZQMLYg" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcYUNsEPEeiQaYZfZQMLYg" value="{ new Point(-10, -6), new Point(-10, 6), new Point(-8, 2),&#xA;&#x9;&#x9;&#x9;new Point(-4, 2), new Point(6, 8), new Point(12, 0), new Point(6, -8), new Point(-4, -8),&#xA;&#x9;&#x9;&#x9;new Point(-8, -2) }"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_rcY7QMEPEeiQaYZfZQMLYg" name="scale" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcY7QcEPEeiQaYZfZQMLYg" value="1.0 / 12.0"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_rYmncMEPEeiQaYZfZQMLYg" client="_rKFqUMEPEeiQaYZfZQMLYg" supplier="_rKHfgMEPEeiQaYZfZQMLYg" contract="_rKHfgMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdJwS8EPEeiQaYZfZQMLYg" name="Fish2PolygonFactory" specification="_rKGRYMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdJwTMEPEeiQaYZfZQMLYg" type="_rKFqUMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), scale, fishPoints);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKGRYMEPEeiQaYZfZQMLYg" name="Fish2PolygonFactory" method="_rdJwS8EPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKGRYcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKGRYsEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKGRY8EPEeiQaYZfZQMLYg" type="_rKFqUMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_rKHfgMEPEeiQaYZfZQMLYg" name="IShapeFactory">
            <ownedComment xmi:id="_rdfHcMEPEeiQaYZfZQMLYg">
              <body>Abstract factory that creates a Shape for use as prototype shapes in IPaintStrategies. The location of the center of the shape and the x and y scales can be specified.
@author Peter</body>
            </ownedComment>
            <ownedOperation xmi:id="_rKIGkMEPEeiQaYZfZQMLYg" name="makeShape">
              <ownedParameter xmi:id="_rKIGkcEPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rKIGksEPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rKIGk8EPEeiQaYZfZQMLYg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rKIGlMEPEeiQaYZfZQMLYg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_ra_0IMEPEeiQaYZfZQMLYg" type="_rYbBQMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKJUsMEPEeiQaYZfZQMLYg" name="PolygonFactory">
            <ownedComment xmi:id="_rdfHccEPEeiQaYZfZQMLYg">
              <body>Concrete IShapeFactory that provides the invariant behavior to instantiate a Shape that is a Polygon. 
This class can be instantiated and used simply by supplying the desired points in its constructor, or sub-classed an the constructor overridden. 
Note that this class cannot be used directly by the BallWorld system because it does not have a no-parameter constructor.
@author Peter Dulworth</body>
            </ownedComment>
            <ownedAttribute xmi:id="_rcY7Q8EPEeiQaYZfZQMLYg" name="at" visibility="private" type="_rYMXwcEPEeiQaYZfZQMLYg" association="_reo-AMEPEeiQaYZfZQMLYg"/>
            <ownedAttribute xmi:id="_rcZiUcEPEeiQaYZfZQMLYg" name="poly" visibility="private" type="_rYn1kMEPEeiQaYZfZQMLYg" association="_reqzMcEPEeiQaYZfZQMLYg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcZiUsEPEeiQaYZfZQMLYg" value="new Polygon()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_rcZiVMEPEeiQaYZfZQMLYg" name="scaleFactor" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_rYocoMEPEeiQaYZfZQMLYg" client="_rKJUsMEPEeiQaYZfZQMLYg" supplier="_rKHfgMEPEeiQaYZfZQMLYg" contract="_rKHfgMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdKXUMEPEeiQaYZfZQMLYg" name="PolygonFactory" specification="_rbBCQMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdKXUcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdKXUsEPEeiQaYZfZQMLYg" name="scaleFactor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdKXU8EPEeiQaYZfZQMLYg" name="pts" type="_rX0kUcEPEeiQaYZfZQMLYg">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdKXVMEPEeiQaYZfZQMLYg" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdKXVcEPEeiQaYZfZQMLYg" type="_rKJUsMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>this.at = at;
		this.scaleFactor = scaleFactor;
		for (Point pt : pts) {
			poly.addPoint(pt.x, pt.y);
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdKXVsEPEeiQaYZfZQMLYg" name="makeShape" specification="_rKKi0MEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdKXV8EPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdKXWMEPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdKXWcEPEeiQaYZfZQMLYg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdKXWsEPEeiQaYZfZQMLYg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdKXW8EPEeiQaYZfZQMLYg" type="_rYbBQMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>at.setToTranslation(x, y);
		at.scale(xScale * scaleFactor, (-1.0) * yScale * scaleFactor);
		return at.createTransformedShape(poly);

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKKi0MEPEeiQaYZfZQMLYg" name="makeShape" method="_rdKXVsEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rKKi0cEPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rKKi0sEPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rKKi08EPEeiQaYZfZQMLYg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rKKi1MEPEeiQaYZfZQMLYg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbCQYMEPEeiQaYZfZQMLYg" type="_rYbBQMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbBCQMEPEeiQaYZfZQMLYg" name="PolygonFactory" method="_rdKXUMEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rbBCRMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rbBCRcEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rbBCQcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbBCQsEPEeiQaYZfZQMLYg" name="scaleFactor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbBCQ8EPEeiQaYZfZQMLYg" name="pts" type="_rX0kUcEPEeiQaYZfZQMLYg">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rbBpUsEPEeiQaYZfZQMLYg" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbBpUcEPEeiQaYZfZQMLYg" type="_rKJUsMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKNmIMEPEeiQaYZfZQMLYg" name="RectangleShapeFactory">
            <ownedComment xmi:id="_rdfHcsEPEeiQaYZfZQMLYg">
              <body>Concrete IShapeFactory that instantiates Rectangle2d.Double shapes.
@author Peter</body>
            </ownedComment>
            <ownedAttribute xmi:id="_rcaJYcEPEeiQaYZfZQMLYg" name="Singleton" isLeaf="true" isStatic="true" type="_rKNmIMEPEeiQaYZfZQMLYg" isReadOnly="true" association="_reraQcEPEeiQaYZfZQMLYg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcaJYsEPEeiQaYZfZQMLYg" value="new RectangleShapeFactory()"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_rYpqwMEPEeiQaYZfZQMLYg" client="_rKNmIMEPEeiQaYZfZQMLYg" supplier="_rKHfgMEPEeiQaYZfZQMLYg" contract="_rKHfgMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdKXXMEPEeiQaYZfZQMLYg" name="makeShape" specification="_rKO0QMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdKXXcEPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdKXXsEPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdKXX8EPEeiQaYZfZQMLYg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdKXYMEPEeiQaYZfZQMLYg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdKXYcEPEeiQaYZfZQMLYg" type="_rYbBQMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>return new Rectangle.Double(x - xScale, y - yScale, 2.0 * xScale, 2.0 * yScale);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKONMMEPEeiQaYZfZQMLYg" name="RectangleShapeFactory" visibility="private">
              <eAnnotations xmi:id="_rKONMcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKONMsEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKONNMEPEeiQaYZfZQMLYg" type="_rKNmIMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rKO0QMEPEeiQaYZfZQMLYg" name="makeShape" method="_rdKXXMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rKO0QcEPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rKO0QsEPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rKO0Q8EPEeiQaYZfZQMLYg" name="xScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rKO0RMEPEeiQaYZfZQMLYg" name="yScale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbCQYcEPEeiQaYZfZQMLYg" type="_rYbBQMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKQpcMEPEeiQaYZfZQMLYg" name="SpaceShuttlePolygonFactory">
            <ownedComment xmi:id="_rdfHc8EPEeiQaYZfZQMLYg">
              <body>Concrete PolygonFactory that creates fish-shaped Polygons that have a longer tail and an open mouth.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_rYq44MEPEeiQaYZfZQMLYg" general="_rKJUsMEPEeiQaYZfZQMLYg"/>
            <ownedAttribute xmi:id="_rcaJY8EPEeiQaYZfZQMLYg" name="spaceShuttlePoints" visibility="private" isLeaf="true" isStatic="true" type="_rX0kUcEPEeiQaYZfZQMLYg" isReadOnly="true" association="_resBUcEPEeiQaYZfZQMLYg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rcaJZMEPEeiQaYZfZQMLYg" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcawccEPEeiQaYZfZQMLYg" value="{ new Point(-29, 8), new Point(-35, 20), new Point(-31, 21),&#xA;&#x9;&#x9;&#x9;new Point(-29, 20), new Point(-15, 5), new Point(25, 5), new Point(27, 2), new Point(37, -3),&#xA;&#x9;&#x9;&#x9;new Point(35, -6), new Point(23, -8), new Point(-23, -8), new Point(-32, -7), new Point(-27, -4),&#xA;&#x9;&#x9;&#x9;new Point(-33, -5), new Point(-31, 1), new Point(-27, 0), new Point(-27, 2), new Point(-33, 2),&#xA;&#x9;&#x9;&#x9;new Point(-32, 7), new Point(-27, 6), new Point(-26, 7) }"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_rcawcsEPEeiQaYZfZQMLYg" name="scale" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcawc8EPEeiQaYZfZQMLYg" value="1.0 / 30.0"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_rYqR0MEPEeiQaYZfZQMLYg" client="_rKQpcMEPEeiQaYZfZQMLYg" supplier="_rKHfgMEPEeiQaYZfZQMLYg" contract="_rKHfgMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdKXYsEPEeiQaYZfZQMLYg" name="SpaceShuttlePolygonFactory" specification="_rKRQgMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdKXY8EPEeiQaYZfZQMLYg" type="_rKQpcMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>super(new AffineTransform(), scale, spaceShuttlePoints);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKRQgMEPEeiQaYZfZQMLYg" name="SpaceShuttlePolygonFactory" method="_rdKXYsEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKRQgcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKRQgsEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKRQg8EPEeiQaYZfZQMLYg" type="_rKQpcMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_rekslMEPEeiQaYZfZQMLYg" name="" memberEnd="_rekslcEPEeiQaYZfZQMLYg _rcXGEsEPEeiQaYZfZQMLYg">
            <ownedEnd xmi:id="_rekslcEPEeiQaYZfZQMLYg" name="" type="_rJ_jsMEPEeiQaYZfZQMLYg" association="_rekslMEPEeiQaYZfZQMLYg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_relTocEPEeiQaYZfZQMLYg" name="" memberEnd="_relTosEPEeiQaYZfZQMLYg _rcXtIcEPEeiQaYZfZQMLYg">
            <ownedEnd xmi:id="_relTosEPEeiQaYZfZQMLYg" name="" type="_rKD1IMEPEeiQaYZfZQMLYg" association="_relTocEPEeiQaYZfZQMLYg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_rel6scEPEeiQaYZfZQMLYg" name="" memberEnd="_rel6ssEPEeiQaYZfZQMLYg _rcYUM8EPEeiQaYZfZQMLYg">
            <ownedEnd xmi:id="_rel6ssEPEeiQaYZfZQMLYg" name="" type="_rKFqUMEPEeiQaYZfZQMLYg" association="_rel6scEPEeiQaYZfZQMLYg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_reo-AMEPEeiQaYZfZQMLYg" name="" memberEnd="_reo-AcEPEeiQaYZfZQMLYg _rcY7Q8EPEeiQaYZfZQMLYg">
            <ownedEnd xmi:id="_reo-AcEPEeiQaYZfZQMLYg" name="" type="_rKJUsMEPEeiQaYZfZQMLYg" association="_reo-AMEPEeiQaYZfZQMLYg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_reqzMcEPEeiQaYZfZQMLYg" name="" memberEnd="_reqzMsEPEeiQaYZfZQMLYg _rcZiUcEPEeiQaYZfZQMLYg">
            <ownedEnd xmi:id="_reqzMsEPEeiQaYZfZQMLYg" name="" type="_rKJUsMEPEeiQaYZfZQMLYg" association="_reqzMcEPEeiQaYZfZQMLYg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_reraQcEPEeiQaYZfZQMLYg" name="" memberEnd="_reraQsEPEeiQaYZfZQMLYg _rcaJYcEPEeiQaYZfZQMLYg">
            <ownedEnd xmi:id="_reraQsEPEeiQaYZfZQMLYg" name="" type="_rKNmIMEPEeiQaYZfZQMLYg" association="_reraQcEPEeiQaYZfZQMLYg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_resBUcEPEeiQaYZfZQMLYg" name="" memberEnd="_resBUsEPEeiQaYZfZQMLYg _rcaJY8EPEeiQaYZfZQMLYg">
            <ownedEnd xmi:id="_resBUsEPEeiQaYZfZQMLYg" name="" type="_rKQpcMEPEeiQaYZfZQMLYg" association="_resBUcEPEeiQaYZfZQMLYg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_rGXn8MEPEeiQaYZfZQMLYg" name="strategy">
          <packagedElement xmi:type="uml:Class" xmi:id="_rKSeoMEPEeiQaYZfZQMLYg" name="BallPaintStrategy">
            <ownedComment xmi:id="_rdfHdMEPEeiQaYZfZQMLYg">
              <body>Paint strategy that paints a filled circle with the Ball's radius. This functionality is duplicated by the EllipsePaintStrategy. 
The class demonstrates a direct implementation of IPaintStrategy.
@author Peter</body>
            </ownedComment>
            <ownedAttribute xmi:id="_rcbXgMEPEeiQaYZfZQMLYg" name="at" visibility="private" type="_rYMXwcEPEeiQaYZfZQMLYg" association="_resoYcEPEeiQaYZfZQMLYg"/>
            <ownedAttribute xmi:id="_rcbXgsEPEeiQaYZfZQMLYg" name="ball" visibility="private" type="_rYrf8cEPEeiQaYZfZQMLYg" association="_retPccEPEeiQaYZfZQMLYg"/>
            <interfaceRealization xmi:id="_rYrf8MEPEeiQaYZfZQMLYg" client="_rKSeoMEPEeiQaYZfZQMLYg" supplier="_rJUOQMEPEeiQaYZfZQMLYg" contract="_rJUOQMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdK-YMEPEeiQaYZfZQMLYg" name="BallPaintStrategy" specification="_rKTFsMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdK-YcEPEeiQaYZfZQMLYg" type="_rKSeoMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0, 0, 1, 1);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdK-YsEPEeiQaYZfZQMLYg" name="BallPaintStrategy" specification="_rbDegMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdK-Y8EPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdK-ZMEPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdK-ZcEPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdK-ZsEPEeiQaYZfZQMLYg" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdK-Z8EPEeiQaYZfZQMLYg" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdK-aMEPEeiQaYZfZQMLYg" type="_rKSeoMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>this.at = at;
		this.ball = (Ellipse2D.Double) EllipseShapeFactory.Singleton.makeShape(x, y, width, height);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdK-acEPEeiQaYZfZQMLYg" name="paint" specification="_rbEFkMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdK-asEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdK-a8EPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
              <language>java</language>
              <body>double scale = host.getRadius();
		at.setToTranslation(host.getLocation().x, host.getLocation().y); // happens third
		at.scale(scale, scale); // happens second
		at.rotate(host.getVelocity().x, host.getVelocity().y); // happens first 
		g.setColor(host.getColor());
		paintXfrm(g, host, this.at);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdK-bMEPEeiQaYZfZQMLYg" name="paintXfrm" specification="_rbEsosEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdK-bcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdK-bsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdK-b8EPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <language>java</language>
              <body>((Graphics2D) g).fill(at.createTransformedShape(this.ball));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKTFsMEPEeiQaYZfZQMLYg" name="BallPaintStrategy" method="_rdK-YMEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKTswMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKTswcEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_rdfHdcEPEeiQaYZfZQMLYg">
                <body>No parameter constructor that creates a 1 pixel radius ball at the origin. Instantiates a new AffineTransform for internal use.</body>
              </ownedComment>
              <ownedParameter xmi:id="_rKTswsEPEeiQaYZfZQMLYg" type="_rKSeoMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rYsuEMEPEeiQaYZfZQMLYg" name="init">
              <ownedParameter xmi:id="_rYsuEcEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbDegMEPEeiQaYZfZQMLYg" name="BallPaintStrategy" method="_rdK-YsEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rbDehsEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rbDeh8EPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_rdfHdsEPEeiQaYZfZQMLYg">
                <body>Constructor that allows one to create the prototype ball of arbitrary dimension and location. The AffineTransform is externally supplied.
	 * @param at The AffineTransform to use for internal calculations.
	 * @param x floating point x-coordinate of center of circle.
	 * @param y floating point y-coordinate of center of circle.
	 * @param width floating point x-radius of the circle (ellipse).
	 * @param height floating point y-radius of the circle (ellipse).</body>
              </ownedComment>
              <ownedParameter xmi:id="_rbDegcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbDegsEPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbDeg8EPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbDehMEPEeiQaYZfZQMLYg" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbDehcEPEeiQaYZfZQMLYg" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbDeiMEPEeiQaYZfZQMLYg" type="_rKSeoMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbEFkMEPEeiQaYZfZQMLYg" name="paint" method="_rdK-acEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rbEFkcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbEFksEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbEsosEPEeiQaYZfZQMLYg" name="paintXfrm" method="_rdK-bMEPEeiQaYZfZQMLYg">
              <ownedComment xmi:id="_rdfHd8EPEeiQaYZfZQMLYg">
                <body>Paints a transformed circle, as per the given AffineTransform Uses color already set in Graphics context.
	 * @param g The Graphics context to paint on.
	 * @param host The Ball host.
	 * @param at The AffineTransform to use.</body>
              </ownedComment>
              <ownedParameter xmi:id="_rbEso8EPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbEspMEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbEspcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKWJAMEPEeiQaYZfZQMLYg" name="BirdSheepImagePaintStrategy">
            <ownedComment xmi:id="_rdfHeMEPEeiQaYZfZQMLYg">
              <body>An example of an ImagePaintStrategy that randomly picks one of two animated image files to display when it is instantiated.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_rYujQMEPEeiQaYZfZQMLYg" general="_rJ3n4MEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdLlcMEPEeiQaYZfZQMLYg" name="BirdSheepImagePaintStrategy" specification="_rKWwEMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdLlccEPEeiQaYZfZQMLYg" type="_rKWJAMEPEeiQaYZfZQMLYg" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>super((String) Randomizer.singleton.randomChoice(&quot;humbird_animate.gif&quot;, &quot;sheep_animate.gif&quot;, 0.5), 0.5);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKWwEMEPEeiQaYZfZQMLYg" name="BirdSheepImagePaintStrategy" method="_rdLlcMEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKWwEcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKWwEsEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKWwE8EPEeiQaYZfZQMLYg" type="_rKWJAMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKXXIMEPEeiQaYZfZQMLYg" name="BoxAndBallPaintStrategy">
            <ownedComment xmi:id="_rdfHecEPEeiQaYZfZQMLYg">
              <body>A composite upright strategy that contains a box and a ball.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_rYvKUMEPEeiQaYZfZQMLYg" general="_rJ5dEMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdLlcsEPEeiQaYZfZQMLYg" name="BoxAndBallPaintStrategy" specification="_rKXXIcEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdLlc8EPEeiQaYZfZQMLYg" type="_rKXXIMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdLldMEPEeiQaYZfZQMLYg" name="BoxAndBallPaintStrategy" specification="_rbFTsMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdLldcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdLldsEPEeiQaYZfZQMLYg" type="_rKXXIMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>super(at, new RectanglePaintStrategy(at, -0.5, -0.5, 0.5, 0.5),
				new EllipsePaintStrategy(at, 0.5, 0.5, 0.5, 0.5));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKXXIcEPEeiQaYZfZQMLYg" name="BoxAndBallPaintStrategy" method="_rdLlcsEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKX-MMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKX-McEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKX-MsEPEeiQaYZfZQMLYg" type="_rKXXIMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbFTsMEPEeiQaYZfZQMLYg" name="BoxAndBallPaintStrategy" method="_rdLldMEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rbF6wMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rbF6wcEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rbFTscEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbF6wsEPEeiQaYZfZQMLYg" type="_rKXXIMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKYlQMEPEeiQaYZfZQMLYg" name="DuckPaintStrategy">
            <ownedComment xmi:id="_rdfHesEPEeiQaYZfZQMLYg">
              <body>Paint strategy that paints a duck that always stays upright.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_rYvxYMEPEeiQaYZfZQMLYg" general="_rJ3n4MEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdLld8EPEeiQaYZfZQMLYg" name="DuckPaintStrategy" specification="_rKZMUMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdLleMEPEeiQaYZfZQMLYg" type="_rKYlQMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>super(&quot;duck.gif&quot;, 0.6);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKZMUMEPEeiQaYZfZQMLYg" name="DuckPaintStrategy" method="_rdLld8EPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKZMUcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKZMUsEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKZMU8EPEeiQaYZfZQMLYg" type="_rKYlQMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKZzYMEPEeiQaYZfZQMLYg" name="EllipsePaintStrategy">
            <ownedComment xmi:id="_rdfHe8EPEeiQaYZfZQMLYg">
              <body>Paint strategy to paint an ellipse shape.</body>
            </ownedComment>
            <generalization xmi:id="_rYvxYcEPEeiQaYZfZQMLYg" general="_rJz9gMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdLlecEPEeiQaYZfZQMLYg" name="EllipsePaintStrategy" specification="_rKZzYcEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdLlesEPEeiQaYZfZQMLYg" type="_rKZzYMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0, 0, 4.0 / 3.0, 2.0 / 3.0);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdLle8EPEeiQaYZfZQMLYg" name="EllipsePaintStrategy" specification="_rbF6w8EPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdLlfMEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdLlfcEPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdLlfsEPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdLlf8EPEeiQaYZfZQMLYg" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdLlgMEPEeiQaYZfZQMLYg" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdLlgcEPEeiQaYZfZQMLYg" type="_rKZzYMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>super(at, EllipseShapeFactory.Singleton.makeShape(x, y, width, height));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKZzYcEPEeiQaYZfZQMLYg" name="EllipsePaintStrategy" method="_rdLlecEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKaacMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKaaccEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKaacsEPEeiQaYZfZQMLYg" type="_rKZzYMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbF6w8EPEeiQaYZfZQMLYg" name="EllipsePaintStrategy" method="_rdLle8EPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rbGh0cEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rbGh0sEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rbF6xMEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbF6xcEPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbF6xsEPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbF6x8EPEeiQaYZfZQMLYg" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbGh0MEPEeiQaYZfZQMLYg" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbGh08EPEeiQaYZfZQMLYg" type="_rKZzYMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKbokMEPEeiQaYZfZQMLYg" name="Fish1PaintStrategy">
            <ownedComment xmi:id="_rdfugMEPEeiQaYZfZQMLYg">
              <body>Paint strategy that paints a fish-shaped Polygon generated by a Fish1PolygonFactory.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_rYwYcMEPEeiQaYZfZQMLYg" general="_rJz9gMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdMMgMEPEeiQaYZfZQMLYg" name="Fish1PaintStrategy" specification="_rKcPoMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdMMgcEPEeiQaYZfZQMLYg" type="_rKbokMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdMMgsEPEeiQaYZfZQMLYg" name="Fish1PaintStrategy" specification="_rbGh1MEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdMMg8EPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdMMhMEPEeiQaYZfZQMLYg" type="_rKbokMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish1PolygonFactory().makeShape(0, 0, 1, 1));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKcPoMEPEeiQaYZfZQMLYg" name="Fish1PaintStrategy" method="_rdMMgMEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKcPocEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKcPosEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKcPo8EPEeiQaYZfZQMLYg" type="_rKbokMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbGh1MEPEeiQaYZfZQMLYg" name="Fish1PaintStrategy" method="_rdMMgsEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rbHI4MEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rbHI4cEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rbGh1cEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbHI4sEPEeiQaYZfZQMLYg" type="_rKbokMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKc2sMEPEeiQaYZfZQMLYg" name="Fish2PaintStrategy">
            <ownedComment xmi:id="_rdfugcEPEeiQaYZfZQMLYg">
              <body>Paint strategy that paints a fish-shaped Polygon generated by a Fish2PolygonFactory.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_rYw_gMEPEeiQaYZfZQMLYg" general="_rJz9gMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdMMhcEPEeiQaYZfZQMLYg" name="Fish2PaintStrategy" specification="_rKddwMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdMMhsEPEeiQaYZfZQMLYg" type="_rKc2sMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdMMh8EPEeiQaYZfZQMLYg" name="Fish2PaintStrategy" specification="_rbHI48EPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdMMiMEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdMMicEPEeiQaYZfZQMLYg" type="_rKc2sMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish2PolygonFactory().makeShape(0, 0, 1, 1));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKddwMEPEeiQaYZfZQMLYg" name="Fish2PaintStrategy" method="_rdMMhcEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKddwcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKddwsEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKddw8EPEeiQaYZfZQMLYg" type="_rKc2sMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbHI48EPEeiQaYZfZQMLYg" name="Fish2PaintStrategy" method="_rdMMh8EPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rbHI5cEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rbHI5sEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rbHI5MEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbHI58EPEeiQaYZfZQMLYg" type="_rKc2sMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKer4MEPEeiQaYZfZQMLYg" name="MarioSonicImagePaintStrategy">
            <ownedComment xmi:id="_rdfugsEPEeiQaYZfZQMLYg">
              <body>Paint strategy that uses either an animated Mario or Sonic image.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_rYw_gcEPEeiQaYZfZQMLYg" general="_rJ3n4MEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdMMisEPEeiQaYZfZQMLYg" name="MarioSonicImagePaintStrategy" specification="_rKfS8MEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdMMi8EPEeiQaYZfZQMLYg" type="_rKer4MEPEeiQaYZfZQMLYg" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>super((String) Randomizer.singleton.randomChoice(&quot;Mario_animate.gif&quot;, &quot;Sonic_animate.gif&quot;, 0.5), 0.5);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKfS8MEPEeiQaYZfZQMLYg" name="MarioSonicImagePaintStrategy" method="_rdMMisEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKfS8cEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKfS8sEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKfS88EPEeiQaYZfZQMLYg" type="_rKer4MEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKf6AMEPEeiQaYZfZQMLYg" name="NiceFishPaintStrategy">
            <ownedComment xmi:id="_rdfug8EPEeiQaYZfZQMLYg">
              <body>Subclass of MultiPaintStrategy that uses a Fish1PaintStrategy and an EllipsePaintStrategy to paint a fish shape that has an eye.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_rYxmkMEPEeiQaYZfZQMLYg" general="_rJ5dEMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdMMjMEPEeiQaYZfZQMLYg" name="NiceFishPaintStrategy" specification="_rKghEMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdMMjcEPEeiQaYZfZQMLYg" type="_rKf6AMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdMzkMEPEeiQaYZfZQMLYg" name="NiceFishPaintStrategy" specification="_rbHv8MEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdMzkcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdMzksEPEeiQaYZfZQMLYg" type="_rKf6AMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>super(at, new Fish1PaintStrategy(), // body
				new FixedColorDecoratorPaintStrategy(Color.WHITE, new EllipsePaintStrategy(at, 0.5, -0.2, 0.15, 0.15)),  // white of the eye
				new FixedColorDecoratorPaintStrategy(Color.BLACK, new EllipsePaintStrategy(at, 0.5, -0.2, 0.08, 0.08))); // pupil
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKghEMEPEeiQaYZfZQMLYg" name="NiceFishPaintStrategy" method="_rdMMjMEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKghEcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKghEsEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKghE8EPEeiQaYZfZQMLYg" type="_rKf6AMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbHv8MEPEeiQaYZfZQMLYg" name="NiceFishPaintStrategy" method="_rdMzkMEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rbHv8sEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rbHv88EPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rbHv8cEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbHv9MEPEeiQaYZfZQMLYg" type="_rKf6AMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKhvMMEPEeiQaYZfZQMLYg" name="PlanetImagePaintStrategy">
            <ownedComment xmi:id="_rdfuhMEPEeiQaYZfZQMLYg">
              <body>Paint strategy that upon instantiation, randomly picks an image.
* @author sgj1
* @author psd2
*</body>
            </ownedComment>
            <generalization xmi:id="_rYxmkcEPEeiQaYZfZQMLYg" general="_rJud8MEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdMzk8EPEeiQaYZfZQMLYg" name="PlanetImagePaintStrategy" specification="_rKiWQMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdMzlMEPEeiQaYZfZQMLYg" type="_rKhvMMEPEeiQaYZfZQMLYg" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>super((new String[]{ &quot;Earth.png&quot;, &quot;Jupiter.png&quot;, &quot;Mars.png&quot;, &quot;Saturn.png&quot;, &quot;Venus.png&quot; }) // done to avoid using a static array
				[Randomizer.singleton.randomInt(0, 4)], .75);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKiWQMEPEeiQaYZfZQMLYg" name="PlanetImagePaintStrategy" method="_rdMzk8EPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKiWQcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKiWQsEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKiWQ8EPEeiQaYZfZQMLYg" type="_rKhvMMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKi9UMEPEeiQaYZfZQMLYg" name="RectanglePaintStrategy">
            <ownedComment xmi:id="_rdfuhcEPEeiQaYZfZQMLYg">
              <body>Concrete paint strategy that paints a rectangular shape scaled to the size of the ball.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_rYxmksEPEeiQaYZfZQMLYg" general="_rJz9gMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdMzlcEPEeiQaYZfZQMLYg" name="RectanglePaintStrategy" specification="_rKjkYMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdMzlsEPEeiQaYZfZQMLYg" type="_rKi9UMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform(), 0, 0, 4.0 / 3.0, 2.0 / 3.0);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdMzl8EPEeiQaYZfZQMLYg" name="RectanglePaintStrategy" specification="_rbIXAMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdMzmMEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdMzmcEPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdMzmsEPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdMzm8EPEeiQaYZfZQMLYg" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdMznMEPEeiQaYZfZQMLYg" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rdMzncEPEeiQaYZfZQMLYg" type="_rKi9UMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>super(at, RectangleShapeFactory.Singleton.makeShape(x, y, width, height));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKjkYMEPEeiQaYZfZQMLYg" name="RectanglePaintStrategy" method="_rdMzlcEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKjkYcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKjkYsEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKjkY8EPEeiQaYZfZQMLYg" type="_rKi9UMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbIXAMEPEeiQaYZfZQMLYg" name="RectanglePaintStrategy" method="_rdMzl8EPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rbI-EMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rbI-EcEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rbIXAcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbIXAsEPEeiQaYZfZQMLYg" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbIXA8EPEeiQaYZfZQMLYg" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbIXBMEPEeiQaYZfZQMLYg" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbIXBcEPEeiQaYZfZQMLYg" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbI-EsEPEeiQaYZfZQMLYg" type="_rKi9UMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKkygMEPEeiQaYZfZQMLYg" name="SoccerImagePaintStrategy">
            <ownedComment xmi:id="_rdfuhsEPEeiQaYZfZQMLYg">
              <body>Paint strategy that paints a FIFA soccer ball as its image.
@author sgj1
@author psd2</body>
            </ownedComment>
            <generalization xmi:id="_rYyNoMEPEeiQaYZfZQMLYg" general="_rJud8MEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdMznsEPEeiQaYZfZQMLYg" name="SoccerImagePaintStrategy" specification="_rKlZkMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdMzn8EPEeiQaYZfZQMLYg" type="_rKkygMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>super(&quot;FIFA_Soccer_Ball.png&quot;, .75);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKlZkMEPEeiQaYZfZQMLYg" name="SoccerImagePaintStrategy" method="_rdMznsEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKlZkcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKlZksEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKlZk8EPEeiQaYZfZQMLYg" type="_rKkygMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKmAoMEPEeiQaYZfZQMLYg" name="SpaceShuttlePaintStrategy">
            <ownedComment xmi:id="_rdfuh8EPEeiQaYZfZQMLYg">
              <body>Paint strategy that paints a space-shuttle-shaped Polygon generated by a Fish1PolyfonFactory.
@author Peter</body>
            </ownedComment>
            <generalization xmi:id="_rYyNocEPEeiQaYZfZQMLYg" general="_rJ9ugMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdNaoMEPEeiQaYZfZQMLYg" name="SpaceShuttlePaintStrategy" specification="_rKmAocEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdNaocEPEeiQaYZfZQMLYg" type="_rKmAoMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>this(new AffineTransform());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdNaosEPEeiQaYZfZQMLYg" name="SpaceShuttlePaintStrategy" specification="_rbI-E8EPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdNao8EPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdNapMEPEeiQaYZfZQMLYg" type="_rKmAoMEPEeiQaYZfZQMLYg" direction="return"/>
              <language>java</language>
              <body>super(at, new SpaceShuttlePolygonFactory().makeShape(0, 0, 1, 1));
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKmAocEPEeiQaYZfZQMLYg" name="SpaceShuttlePaintStrategy" method="_rdNaoMEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rKmnsMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKmnscEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKmnssEPEeiQaYZfZQMLYg" type="_rKmAoMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbI-E8EPEeiQaYZfZQMLYg" name="SpaceShuttlePaintStrategy" method="_rdNaosEPEeiQaYZfZQMLYg">
              <eAnnotations xmi:id="_rbJlIcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rbJlIsEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rbJlIMEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbJlI8EPEeiQaYZfZQMLYg" type="_rKmAoMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rKnOwMEPEeiQaYZfZQMLYg" name="SquarePaintStrategy">
            <ownedComment xmi:id="_rdfuiMEPEeiQaYZfZQMLYg">
              <body>Paint strategy that paints a filled square with the Ball's radius.
This functionality is duplicated by the RectanglePaintStrategy.
The class demonstrates a direct implementation of IPaintStrategy.</body>
            </ownedComment>
            <interfaceRealization xmi:id="_rYy0sMEPEeiQaYZfZQMLYg" client="_rKnOwMEPEeiQaYZfZQMLYg" supplier="_rJUOQMEPEeiQaYZfZQMLYg" contract="_rJUOQMEPEeiQaYZfZQMLYg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdNapcEPEeiQaYZfZQMLYg" name="paint" specification="_rbJlJMEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rdNapsEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rdNap8EPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
              <language>java</language>
              <body>int halfSide = host.getRadius();
		g.setColor(host.getColor());
		g.fillRect(host.getLocation().x - halfSide, host.getLocation().y - halfSide, 2 * halfSide, 2 * halfSide);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_rKn10MEPEeiQaYZfZQMLYg" name="SquarePaintStrategy">
              <eAnnotations xmi:id="_rKn10cEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rKn10sEPEeiQaYZfZQMLYg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rKn11MEPEeiQaYZfZQMLYg" type="_rKnOwMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rYzbwMEPEeiQaYZfZQMLYg" name="init">
              <ownedParameter xmi:id="_rYzbwcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbJlJMEPEeiQaYZfZQMLYg" name="paint" method="_rdNapcEPEeiQaYZfZQMLYg">
              <ownedParameter xmi:id="_rbJlJcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbKMMMEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_resoYcEPEeiQaYZfZQMLYg" name="" memberEnd="_resoYsEPEeiQaYZfZQMLYg _rcbXgMEPEeiQaYZfZQMLYg">
            <ownedEnd xmi:id="_resoYsEPEeiQaYZfZQMLYg" name="" type="_rKSeoMEPEeiQaYZfZQMLYg" association="_resoYcEPEeiQaYZfZQMLYg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_retPccEPEeiQaYZfZQMLYg" name="" memberEnd="_retPcsEPEeiQaYZfZQMLYg _rcbXgsEPEeiQaYZfZQMLYg">
            <ownedEnd xmi:id="_retPcsEPEeiQaYZfZQMLYg" name="" type="_rKSeoMEPEeiQaYZfZQMLYg" association="_retPccEPEeiQaYZfZQMLYg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rJf0cMEPEeiQaYZfZQMLYg" name="ADecoratorPaintStrategy" isAbstract="true">
          <ownedComment xmi:id="_rdd5VMEPEeiQaYZfZQMLYg">
            <body>Abstract class that provides default behavior for subclasses that will decorate another IPaintStrategy to add functionality to that strategy. 
All this class's methods do is to simply delegate to the decoree. A subclass should override one or more methods, adding additional 
processing either before or after delegating to the decoree. 
Note that this class cannot be used by the BallWorld system directly as it lacks a no-parameter constructor.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_rYOM8MEPEeiQaYZfZQMLYg" general="_rJi3wMEPEeiQaYZfZQMLYg"/>
          <ownedAttribute xmi:id="_rcSNkcEPEeiQaYZfZQMLYg" name="decoree" visibility="private" type="_rJi3wMEPEeiQaYZfZQMLYg" association="_regbIcEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdFe1MEPEeiQaYZfZQMLYg" name="ADecoratorPaintStrategy" specification="_rYM-0cEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdFe1cEPEeiQaYZfZQMLYg" name="decoree" type="_rJi3wMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdFe1sEPEeiQaYZfZQMLYg" type="_rJf0cMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>super(decoree.getAT());
		this.decoree = decoree;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdFe18EPEeiQaYZfZQMLYg" name="paint" specification="_rasSIMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdFe2MEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdFe2cEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>decoree.paint(g, host);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdGF4MEPEeiQaYZfZQMLYg" name="paintXfrm" specification="_ratgQMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdGF4cEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdGF4sEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdGF48EPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>decoree.paintXfrm(g, host, at);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdGF5MEPEeiQaYZfZQMLYg" name="init" specification="_rYNl4cEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdGF5cEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>decoree.init(host);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rYM-0cEPEeiQaYZfZQMLYg" name="ADecoratorPaintStrategy" method="_rdFe1MEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_rYM-08EPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rYM-1MEPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_rdd5VcEPEeiQaYZfZQMLYg">
              <body>Constructor that takes the decoree paint strategy.
	 * @param decoree The paint strategy that is to be decorated.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rYM-0sEPEeiQaYZfZQMLYg" name="decoree" type="_rJi3wMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rYNl4MEPEeiQaYZfZQMLYg" type="_rJf0cMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rYNl4cEPEeiQaYZfZQMLYg" name="init" method="_rdGF5MEPEeiQaYZfZQMLYg">
            <ownedComment xmi:id="_rdd5VsEPEeiQaYZfZQMLYg">
              <body>Default behavior is to simply delegate to the decoree's init method.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rYNl4sEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rasSIMEPEeiQaYZfZQMLYg" name="paint" method="_rdFe18EPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rasSIcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rasSIsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ratgQMEPEeiQaYZfZQMLYg" name="paintXfrm" method="_rdGF4MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_ratgQcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ratgQsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ratgQ8EPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rJi3wMEPEeiQaYZfZQMLYg" name="APaintStrategy" isAbstract="true">
          <ownedComment xmi:id="_rdd5V8EPEeiQaYZfZQMLYg">
            <body>The top-level affine transform-based paint strategy that provides services for its subclasses, plus default behaviors and abstract behaviors.
@author Peter</body>
          </ownedComment>
          <ownedAttribute xmi:id="_rcTbsMEPEeiQaYZfZQMLYg" name="at" visibility="protected" type="_rYMXwcEPEeiQaYZfZQMLYg" association="_rehCMcEPEeiQaYZfZQMLYg"/>
          <interfaceRealization xmi:id="_rYO0AMEPEeiQaYZfZQMLYg" client="_rJi3wMEPEeiQaYZfZQMLYg" supplier="_rJUOQMEPEeiQaYZfZQMLYg" contract="_rJUOQMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdGF5sEPEeiQaYZfZQMLYg" name="APaintStrategy" specification="_rauuYMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdGF58EPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdGF6MEPEeiQaYZfZQMLYg" type="_rJi3wMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>this.at = at;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdGF6cEPEeiQaYZfZQMLYg" name="paint" specification="_ravVcMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdGF6sEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdGF68EPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>double scale = host.getRadius();
		at.setToTranslation(host.getLocation().x, host.getLocation().y); // happens third
		at.scale(scale, scale); // happens second
		at.rotate(host.getVelocity().x, host.getVelocity().y); // happens first 
		g.setColor(host.getColor());
		paintCfg(g, host);
		paintXfrm(g, host, this.at);

		// FOR DEBUGGING:
		//		g.drawOval(host.getLocation().x - host.getRadius(), host.getLocation().y - host.getRadius(), 2 * host.getRadius(), 2 * host.getRadius());
		//		g.drawRect(host.getLocation().x - host.getRadius(), host.getLocation().y - host.getRadius(), 2 * host.getRadius(), 2 * host.getRadius());
		//		g.fillOval(host.getLocation().x - 3, host.getLocation().y - 3, 6, 6);
		//		g.fillOval(host.getLocation().x - host.getRadius() - 3, host.getLocation().y - host.getRadius() - 3, 6, 6);

		/*
		 * First, when the painting strategy is created, the prototype is created ONCE.   The prototype is INVARIANT and thus, is never modified.
		 * 
		 * Typically we will reuse the AffineTransform object rather than re-instantiate it for every use.
		 * 
		 * We can summarize the painting process using prototypes in these steps, which occur at EVERY painting event:
		 * 
		 * 	Set the affine transform to translate by the ball's position
		 * 	Add the rotation and scaling to the affine transform as determined by the balls size (radius), velocity and/or other properties at the moment of painting.
		 * 	Add any other desired transformations.
		 * 	Transform the prototype shape into a new Shape object which has the desired position, rotation, size, etc. 
		 * 	Use the provided Graphics2D object to paint the new, transformed Shape onto the screen.
		 * 
		 * Do not confuse the moving of the ball, which is the changing of the value of the ball's location, with the translation of the prototype shape, which is the generation of the desired shape for painting at the current ball location from the origin-centered prototype shape.
		 * 
		 * Moving the ball is a completely separate operation from painting the ball.   
		 * The ball is painted at the position on the screen corresponding to the current location of the ball.   
		 * The ball does not move during painting.    
		 * The prototype is invariant and thus never moves from the origin. 
		 * 
		 * The prototype shape is NOT the ball.   
		 * The prototype shape contains just the shape information of ball, without any location, size or rotational information.     
		 * The location, size and rotational information needed to create the final displayed image of the ball is determined at painting time.   
		 * That information is embodied in the affine transform.    
		 * Thus, it is the combination of the invariant prototype and the variant affine transform that creates the final shape to be painted on the screen.
		 */
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdGs8MEPEeiQaYZfZQMLYg" name="paintCfg" specification="_rav8g8EPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdGs8cEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdGs8sEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>/*
		 * The paintCfg method is set to be a concrete no-op that the subclasses may or may not override.   
		 * This method allows the subclass to inject additional processing into the paint method process before the final transformations are performed.     
		 * Since this method is &quot;protected&quot;, it is only available for use by the subclasses and not other types of objects.
		 */
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdGs88EPEeiQaYZfZQMLYg" name="getAT" specification="_rJks8MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdGs9MEPEeiQaYZfZQMLYg" type="_rYMXwcEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>return at;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rJks8MEPEeiQaYZfZQMLYg" name="getAT" visibility="protected" method="_rdGs88EPEeiQaYZfZQMLYg">
            <ownedComment xmi:id="_rdd5W8EPEeiQaYZfZQMLYg">
              <body>A secondary paint operation that is the last step of the above paint method, which does not calculate its own affine transform, but instead, uses a supplied affine transform.   
	 * Notice that the translation, rotation and scaling have already been added to the affine transform before it gets to paintXfrm.  
	 * This allows the same affine transform to be shared amongst paint strategies, reducing the number of times that it has to be calculated.   
	 * When an affine transform instance is being shared amongst strategies, then it is invariant across those strategies.  
	 * Thus, this method allows an invariant translation, rotation and scaling to be performed (previously in the paint method) that applies to all composed strategies.    
	 * But as we have seen before, invariant properties cause problems when we try to compose entities together as those invariant properties tend to &quot;run into each other&quot; and make 
	 * composition very difficult.   
	 * This method does not include the invariant parts of the affine transform process, so affine transform-based paint strategies can be combined based on this method 
	 * but not based on the paint method.  
	 * Since APaintStrategy doesn't know what sort of thing is being painted, it has no idea how exactly to apply the affine transform, so the paintXfrm method must 
	 * remain abstract, forcing the subclasses to implement it.</body>
            </ownedComment>
            <ownedParameter xmi:id="_raxKoMEPEeiQaYZfZQMLYg" type="_rYMXwcEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rYPbEMEPEeiQaYZfZQMLYg" name="init">
            <ownedParameter xmi:id="_rYPbEcEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rauuYMEPEeiQaYZfZQMLYg" name="APaintStrategy" method="_rdGF5sEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_rauuYsEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rauuY8EPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_rdd5WMEPEeiQaYZfZQMLYg">
              <body>Constructor that initializes the strategy with an affine transform.
	 * @param at The AffineTransform for this paint strategy to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rauuYcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rauuZMEPEeiQaYZfZQMLYg" type="_rJi3wMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ravVcMEPEeiQaYZfZQMLYg" name="paint" method="_rdGF6cEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_ravVccEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ravVcsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rav8g8EPEeiQaYZfZQMLYg" name="paintCfg" visibility="protected" method="_rdGs8MEPEeiQaYZfZQMLYg">
            <ownedComment xmi:id="_rdd5WcEPEeiQaYZfZQMLYg">
              <body>Defined by a subclass if additional processing, e.g. staying upright, is required before the actual painting takes place.
	 * @param g The Graphics context that will be paint on.
	 * @param host The host Ball that the required information will be pulled from.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rav8hMEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rawjkMEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rawjkcEPEeiQaYZfZQMLYg" name="paintXfrm" isAbstract="true">
            <ownedComment xmi:id="_rdd5WsEPEeiQaYZfZQMLYg">
              <body>Paints the host onto the given Graphics context. The image is translated, scaled and 
	 * rotated as determined by the given affine transformation. This method is intended to 
	 * be called either by a class's (or superclass's) own paint method or by another paint 
	 * strategy who is sharing the affine transform. This allows the same transformation to 
	 * be shared amongst multiple paint strategies.
	 * @param g The graphics context to draw upon.
	 * @param host The host ball.
	 * @param at The affine transform to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rawjksEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rawjk8EPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rawjlMEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rJsowMEPEeiQaYZfZQMLYg" name="FixedColorDecoratorPaintStrategy">
          <ownedComment xmi:id="_rdd5XMEPEeiQaYZfZQMLYg">
            <body>Decorator paint strategy that decorates another IPaintStrategy and causes the painted color to always be a specified, fixed color. 
Useful when you want a shape that is a specific color and not the color of the host Ball, for example, the black colored eye on a fish. 
Note that this class only works in situations where paintXfrm is called, because if paint is called, the call is delegated to the decoree, 
which will then delegate to its own paintXfrm method, not this decorator's method. Thus, this class is best used when being composed 
with other paint strategies inside a MultiPaintStrategy.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_rYR3UMEPEeiQaYZfZQMLYg" general="_rJf0cMEPEeiQaYZfZQMLYg"/>
          <ownedAttribute xmi:id="_rcUCwcEPEeiQaYZfZQMLYg" name="color" visibility="package" type="_rXz9QMEPEeiQaYZfZQMLYg" association="_rehpQcEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdGs9cEPEeiQaYZfZQMLYg" name="FixedColorDecoratorPaintStrategy" specification="_raxKocEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdGs9sEPEeiQaYZfZQMLYg" name="color" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdGs98EPEeiQaYZfZQMLYg" name="decoree" type="_rJi3wMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdGs-MEPEeiQaYZfZQMLYg" type="_rJsowMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>super(decoree);
		this.color = color;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdGs-cEPEeiQaYZfZQMLYg" name="paintXfrm" specification="_raxxtcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdGs-sEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdGs-8EPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdGs_MEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>g.setColor(this.color);
		super.paintXfrm(g, host, at);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_raxKocEPEeiQaYZfZQMLYg" name="FixedColorDecoratorPaintStrategy" method="_rdGs9cEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_raxxssEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_raxxs8EPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_raxxsMEPEeiQaYZfZQMLYg" name="color" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_raxxscEPEeiQaYZfZQMLYg" name="decoree" type="_rJi3wMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_raxxtMEPEeiQaYZfZQMLYg" type="_rJsowMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_raxxtcEPEeiQaYZfZQMLYg" name="paintXfrm" method="_rdGs-cEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_raxxtsEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rayYwMEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rayYwcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rJud8MEPEeiQaYZfZQMLYg" name="ImagePaintStrategy">
          <ownedComment xmi:id="_rdd5XcEPEeiQaYZfZQMLYg">
            <body>Paint strategy that paints an image from a file, scaled to the host Ball's radius.
Note that this class cannot be used by the BallWar system directly as it is lacking a no-parameter constructor.

@author sgj1
@author psd2
 *</body>
          </ownedComment>
          <generalization xmi:id="_rYXW4sEPEeiQaYZfZQMLYg" general="_rJi3wMEPEeiQaYZfZQMLYg"/>
          <ownedAttribute xmi:id="_rcUp0MEPEeiQaYZfZQMLYg" name="fillFactor" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcUp0cEPEeiQaYZfZQMLYg" value="0.5"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rcUp08EPEeiQaYZfZQMLYg" name="image" visibility="private" type="_rYTFccEPEeiQaYZfZQMLYg" association="_reiQUcEPEeiQaYZfZQMLYg"/>
          <ownedAttribute xmi:id="_rcVQ4cEPEeiQaYZfZQMLYg" name="imageObs" visibility="private" type="_rYTsgcEPEeiQaYZfZQMLYg" association="_rei3YcEPEeiQaYZfZQMLYg"/>
          <ownedAttribute xmi:id="_rcVQ48EPEeiQaYZfZQMLYg" name="localAT" visibility="protected" type="_rYMXwcEPEeiQaYZfZQMLYg" association="_rejeccEPEeiQaYZfZQMLYg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcVQ5MEPEeiQaYZfZQMLYg" value="new AffineTransform()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rcV38cEPEeiQaYZfZQMLYg" name="scaleFactor" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdHUAMEPEeiQaYZfZQMLYg" name="ImagePaintStrategy" specification="_razm4MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdHUAcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdHUAsEPEeiQaYZfZQMLYg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdHUA8EPEeiQaYZfZQMLYg" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdHUBMEPEeiQaYZfZQMLYg" type="_rJud8MEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>super(at);
		try {
			image = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource(&quot;images&quot; + filename));
		} catch (Exception e) {
			System.err.println(&quot;ImagePaintStrategy: Error reading file: &quot; + filename + &quot;\n&quot; + e);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdHUBcEPEeiQaYZfZQMLYg" name="ImagePaintStrategy" specification="_rJvsEMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdHUBsEPEeiQaYZfZQMLYg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdHUB8EPEeiQaYZfZQMLYg" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdHUCMEPEeiQaYZfZQMLYg" type="_rJud8MEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>super(new AffineTransform());
		try {
			image = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource(&quot;images/&quot; + filename));
		} catch (Exception e) {
			System.err.println(&quot;ImagePaintStrategy: Error reading file: &quot; + filename + &quot;\n&quot; + e);
		}

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdHUCcEPEeiQaYZfZQMLYg" name="paintXfrm" specification="_ra0N8MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdHUCsEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdHUC8EPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdHUDMEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>localAT.setToScale(scaleFactor, scaleFactor);
		localAT.translate(-image.getWidth(imageObs) / 2.0, -image.getHeight(imageObs) / 2.0);
		localAT.preConcatenate(at);
		((Graphics2D) g).drawImage(image, localAT, imageObs);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdHUDcEPEeiQaYZfZQMLYg" name="init" specification="_rYWv0MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdHUDsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>imageObs = host.getContainer();
		MediaTracker mt = new MediaTracker(host.getContainer());
		mt.addImage(image, 1);
		try {
			mt.waitForAll();
		} catch (Exception e) {
			System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot; + e);
		}
		scaleFactor = 2.0 / (fillFactor * (image.getWidth(imageObs) + image.getHeight(imageObs)) / 2.0);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rJvsEMEPEeiQaYZfZQMLYg" name="ImagePaintStrategy" visibility="protected" method="_rdHUBcEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_rJvsE8EPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rJvsFMEPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_rdegYcEPEeiQaYZfZQMLYg">
              <body>Constructor that takes the image filename and fill factor.
	 * An AffineTransform is instantiated for internal use.
	 * GIF, JPG, PNG and any other file that can be loaded by an ImageIcon object can be used,
	 * including animated GIF's as the above files are.
	 * @param filename The filename of the image file to use.
	 * @param fillFactor The ratio of the desired average radius of the image to the actual average of the image's width and height.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rJvsEcEPEeiQaYZfZQMLYg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rJvsEsEPEeiQaYZfZQMLYg" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rJvsFcEPEeiQaYZfZQMLYg" type="_rJud8MEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rYWv0MEPEeiQaYZfZQMLYg" name="init" method="_rdHUDcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rYWv0cEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_razm4MEPEeiQaYZfZQMLYg" name="ImagePaintStrategy" method="_rdHUAMEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_razm5MEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_razm5cEPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_rdegYMEPEeiQaYZfZQMLYg">
              <body>Constructor that takes an external AffineTransform, the filename of the image to paint and a fill factor of the image.
	 * @param at The AffineTransform to use internally.
	 * @param filename The filename of the image file to use.
	 * @param fillFactor The ratio of the desired average radius of the image to the actual average of the image's width and height.</body>
            </ownedComment>
            <ownedParameter xmi:id="_razm4cEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_razm4sEPEeiQaYZfZQMLYg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_razm48EPEeiQaYZfZQMLYg" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_razm5sEPEeiQaYZfZQMLYg" type="_rJud8MEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ra0N8MEPEeiQaYZfZQMLYg" name="paintXfrm" method="_rdHUCcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_ra0N8cEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra0N8sEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra0N88EPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rJxhQMEPEeiQaYZfZQMLYg" name="MultiPaintStrategy">
          <ownedComment xmi:id="_rdegYsEPEeiQaYZfZQMLYg">
            <body>A composite design pattern extension of APaintStrategy that paints a set of paint strategies. 
Note: This paint strategy cannot be used directly by the BallWorld system because it lacks a no-parameter constructor.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_rYaaMsEPEeiQaYZfZQMLYg" general="_rJi3wMEPEeiQaYZfZQMLYg"/>
          <ownedAttribute xmi:id="_rcWfAMEPEeiQaYZfZQMLYg" name="pstrats" visibility="private" type="_rJi3wMEPEeiQaYZfZQMLYg" association="_rekFgcEPEeiQaYZfZQMLYg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rcWfAcEPEeiQaYZfZQMLYg" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdH7EMEPEeiQaYZfZQMLYg" name="MultiPaintStrategy" specification="_rYYlAMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdH7EcEPEeiQaYZfZQMLYg" name="pstrats" type="_rJi3wMEPEeiQaYZfZQMLYg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdH7EsEPEeiQaYZfZQMLYg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdH7E8EPEeiQaYZfZQMLYg" type="_rJxhQMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>super(new AffineTransform());
		this.pstrats = pstrats;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdH7FMEPEeiQaYZfZQMLYg" name="MultiPaintStrategy" specification="_ra1cEMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdH7FcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdH7FsEPEeiQaYZfZQMLYg" name="pstrats" type="_rJi3wMEPEeiQaYZfZQMLYg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdH7F8EPEeiQaYZfZQMLYg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdH7GMEPEeiQaYZfZQMLYg" type="_rJxhQMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>super(at);
		this.pstrats = pstrats;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdIiIMEPEeiQaYZfZQMLYg" name="init" specification="_rYZzIcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdIiIcEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>for (int i = 0; i &lt; pstrats.length; i++) {
			pstrats[i].init(host);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdIiIsEPEeiQaYZfZQMLYg" name="paintXfrm" specification="_ra2qMMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdIiI8EPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdIiJMEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdIiJcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>for (int i = 0; i &lt; pstrats.length; i++) {
			pstrats[i].paintXfrm(g, host, at);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rYYlAMEPEeiQaYZfZQMLYg" name="MultiPaintStrategy" method="_rdH7EMEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_rYZMEcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rYZMEsEPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_rYZMEMEPEeiQaYZfZQMLYg" name="pstrats" type="_rJi3wMEPEeiQaYZfZQMLYg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rYZMFcEPEeiQaYZfZQMLYg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rYZMFMEPEeiQaYZfZQMLYg" type="_rJxhQMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rYZzIcEPEeiQaYZfZQMLYg" name="init" method="_rdIiIMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rYZzIsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ra1cEMEPEeiQaYZfZQMLYg" name="MultiPaintStrategy" method="_rdH7FMEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_ra2DIMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ra2DIcEPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ra1cEcEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra1cEsEPEeiQaYZfZQMLYg" name="pstrats" type="_rJi3wMEPEeiQaYZfZQMLYg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ra2DJMEPEeiQaYZfZQMLYg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ra2DI8EPEeiQaYZfZQMLYg" type="_rJxhQMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ra2qMMEPEeiQaYZfZQMLYg" name="paintXfrm" method="_rdIiIsEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_ra2qMcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra2qMsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra2qM8EPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rJz9gMEPEeiQaYZfZQMLYg" name="ShapePaintStrategy">
          <ownedComment xmi:id="_rdegY8EPEeiQaYZfZQMLYg">
            <body>Concrete class that defines invariant painting behaviors to paint Shape objects for all its subclasses. 
Note: This cannot be directly instantiated by the BallWorld system because it lacks a no-parameter constructor.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_rYboUMEPEeiQaYZfZQMLYg" general="_rJi3wMEPEeiQaYZfZQMLYg"/>
          <ownedAttribute xmi:id="_rcXGEMEPEeiQaYZfZQMLYg" name="shape" visibility="private" type="_rYbBQMEPEeiQaYZfZQMLYg" association="_rekskcEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdIiJsEPEeiQaYZfZQMLYg" name="ShapePaintStrategy" specification="_ra4fYMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdIiJ8EPEeiQaYZfZQMLYg" name="shape" type="_rYbBQMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdIiKMEPEeiQaYZfZQMLYg" type="_rJz9gMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), shape); // store at in the at field
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdIiKcEPEeiQaYZfZQMLYg" name="ShapePaintStrategy" specification="_ra4fZcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdIiKsEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdIiK8EPEeiQaYZfZQMLYg" name="shape" type="_rYbBQMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdIiLMEPEeiQaYZfZQMLYg" type="_rJz9gMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>super(at); // store at in the at field
		this.shape = shape;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdIiLcEPEeiQaYZfZQMLYg" name="paintXfrm" specification="_ra5tgMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdIiLsEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdIiL8EPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdIiMMEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>((Graphics2D) g).fill(at.createTransformedShape(this.shape));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ra4fYMEPEeiQaYZfZQMLYg" name="ShapePaintStrategy" method="_rdIiJsEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_ra4fYsEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ra4fY8EPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_rdegZMEPEeiQaYZfZQMLYg">
              <body>Constructor that allocates a new AffineTransform for internal use.
	 * @param shape The Shape to be painted.</body>
            </ownedComment>
            <ownedParameter xmi:id="_ra4fYcEPEeiQaYZfZQMLYg" name="shape" type="_rYbBQMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra4fZMEPEeiQaYZfZQMLYg" type="_rJz9gMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ra4fZcEPEeiQaYZfZQMLYg" name="ShapePaintStrategy" method="_rdIiKcEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_ra5GcsEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ra5Gc8EPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_rdegZcEPEeiQaYZfZQMLYg">
              <body>Constructor that uses a supplied AffineTransform for internal use.
	 * @param at The AffineTransform to use.
	 * @param shape The Shape to be painted.</body>
            </ownedComment>
            <ownedParameter xmi:id="_ra5GcMEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra5GccEPEeiQaYZfZQMLYg" name="shape" type="_rYbBQMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra5GdMEPEeiQaYZfZQMLYg" type="_rJz9gMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ra5tgMEPEeiQaYZfZQMLYg" name="paintXfrm" method="_rdIiLcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_ra5tgcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra5tgsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra5tg8EPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rJ3n4MEPEeiQaYZfZQMLYg" name="UprightImagePaintStrategy">
          <ownedComment xmi:id="_rdegZsEPEeiQaYZfZQMLYg">
            <body>An image painting strategy that adds a paintCfg override that keeps the image upright no matter which way it is going.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_rYc2cMEPEeiQaYZfZQMLYg" general="_rJud8MEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdIiMcEPEeiQaYZfZQMLYg" name="UprightImagePaintStrategy" specification="_rJ4O8MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdIiMsEPEeiQaYZfZQMLYg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdIiM8EPEeiQaYZfZQMLYg" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdIiNMEPEeiQaYZfZQMLYg" type="_rJ3n4MEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>super(filename, fillFactor);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdJJMMEPEeiQaYZfZQMLYg" name="paintCfg" specification="_ra6UkcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdJJMcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdJJMsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>super.paintCfg(g, host);
		if (Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x)) > Math.PI / 2.0) {
			at.scale(1.0, -1.0);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rJ4O8MEPEeiQaYZfZQMLYg" name="UprightImagePaintStrategy" method="_rdIiMcEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_rJ42AMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rJ42AcEPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_rJ4O8cEPEeiQaYZfZQMLYg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rJ4O8sEPEeiQaYZfZQMLYg" name="fillFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rJ42AsEPEeiQaYZfZQMLYg" type="_rJ3n4MEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ra6UkcEPEeiQaYZfZQMLYg" name="paintCfg" visibility="protected" method="_rdJJMMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_ra6UksEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra6Uk8EPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rJ5dEMEPEeiQaYZfZQMLYg" name="UprightMultiPaintStrategy">
          <ownedComment xmi:id="_rdegZ8EPEeiQaYZfZQMLYg">
            <body>An image painting strategy that adds a paintCfg override that keeps the image upright no matter which way it is going.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_rYerocEPEeiQaYZfZQMLYg" general="_rJxhQMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdJJM8EPEeiQaYZfZQMLYg" name="UprightMultiPaintStrategy" specification="_rYddgMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdJJNMEPEeiQaYZfZQMLYg" name="pstrats" type="_rJi3wMEPEeiQaYZfZQMLYg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdJJNcEPEeiQaYZfZQMLYg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdJJNsEPEeiQaYZfZQMLYg" type="_rJ5dEMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), pstrats);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdJJN8EPEeiQaYZfZQMLYg" name="UprightMultiPaintStrategy" specification="_ra7isMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdJJOMEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdJJOcEPEeiQaYZfZQMLYg" name="pstrats" type="_rJi3wMEPEeiQaYZfZQMLYg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdJJOsEPEeiQaYZfZQMLYg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rdJJO8EPEeiQaYZfZQMLYg" type="_rJ5dEMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>super(at, pstrats);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdJJPMEPEeiQaYZfZQMLYg" name="paintCfg" specification="_ra8JwsEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdJJPcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdJJPsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>super.paintCfg(g, host);
		if (Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x)) > Math.PI / 2.0) {
			at.scale(1.0, -1.0);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rYddgMEPEeiQaYZfZQMLYg" name="UprightMultiPaintStrategy" method="_rdJJM8EPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_rYeEkMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rYeEkcEPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_rYddgcEPEeiQaYZfZQMLYg" name="pstrats" type="_rJi3wMEPEeiQaYZfZQMLYg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rYeElMEPEeiQaYZfZQMLYg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rYeEk8EPEeiQaYZfZQMLYg" type="_rJ5dEMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ra7isMEPEeiQaYZfZQMLYg" name="UprightMultiPaintStrategy" method="_rdJJN8EPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_ra7is8EPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ra7itMEPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ra7iscEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra7issEPEeiQaYZfZQMLYg" name="pstrats" type="_rJi3wMEPEeiQaYZfZQMLYg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ra8JwMEPEeiQaYZfZQMLYg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ra7itsEPEeiQaYZfZQMLYg" type="_rJ5dEMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ra8JwsEPEeiQaYZfZQMLYg" name="paintCfg" visibility="protected" method="_rdJJPMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_ra8Jw8EPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra8JxMEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rJ9ugMEPEeiQaYZfZQMLYg" name="UprightShapePaintStrategy">
          <ownedComment xmi:id="_rdegaMEPEeiQaYZfZQMLYg">
            <body>A shape painting strategy that adds a paintCfg override that keeps the shape upright no matter which direction it is going.
@author Peter</body>
          </ownedComment>
          <generalization xmi:id="_rYfSsMEPEeiQaYZfZQMLYg" general="_rJz9gMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdJJP8EPEeiQaYZfZQMLYg" name="UprightShapePaintStrategy" specification="_ra9X4MEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdJJQMEPEeiQaYZfZQMLYg" name="shape" type="_rYbBQMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdJJQcEPEeiQaYZfZQMLYg" type="_rJ9ugMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>this(new AffineTransform(), shape);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdJJQsEPEeiQaYZfZQMLYg" name="UprightShapePaintStrategy" specification="_ra9X5cEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdJJQ8EPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdJJRMEPEeiQaYZfZQMLYg" name="shape" type="_rYbBQMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdJJRcEPEeiQaYZfZQMLYg" type="_rJ9ugMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>super(at, shape);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdJwQMEPEeiQaYZfZQMLYg" name="paintCfg" specification="_ra9-9cEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdJwQcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_rdJwQsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
            <language>java</language>
            <body>super.paintCfg(g, host);
		if (Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x)) > Math.PI / 2.0) {
			at.scale(1.0, -1.0);
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ra9X4MEPEeiQaYZfZQMLYg" name="UprightShapePaintStrategy" method="_rdJJP8EPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_ra9X4sEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ra9X48EPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ra9X4cEPEeiQaYZfZQMLYg" name="shape" type="_rYbBQMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra9X5MEPEeiQaYZfZQMLYg" type="_rJ9ugMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ra9X5cEPEeiQaYZfZQMLYg" name="UprightShapePaintStrategy" method="_rdJJQsEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_ra9-8sEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ra9-88EPEeiQaYZfZQMLYg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ra9-8MEPEeiQaYZfZQMLYg" name="at" type="_rYMXwcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra9-8cEPEeiQaYZfZQMLYg" name="shape" type="_rYbBQMEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra9-9MEPEeiQaYZfZQMLYg" type="_rJ9ugMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ra9-9cEPEeiQaYZfZQMLYg" name="paintCfg" visibility="protected" method="_rdJwQMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_ra9-9sEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
            <ownedParameter xmi:id="_ra9-98EPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_regbIcEPEeiQaYZfZQMLYg" name="" memberEnd="_regbIsEPEeiQaYZfZQMLYg _rcSNkcEPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_regbIsEPEeiQaYZfZQMLYg" name="" type="_rJf0cMEPEeiQaYZfZQMLYg" association="_regbIcEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rehCMcEPEeiQaYZfZQMLYg" name="" memberEnd="_rehCMsEPEeiQaYZfZQMLYg _rcTbsMEPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_rehCMsEPEeiQaYZfZQMLYg" name="" type="_rJi3wMEPEeiQaYZfZQMLYg" association="_rehCMcEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rehpQcEPEeiQaYZfZQMLYg" name="" memberEnd="_rehpQsEPEeiQaYZfZQMLYg _rcUCwcEPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_rehpQsEPEeiQaYZfZQMLYg" name="" type="_rJsowMEPEeiQaYZfZQMLYg" association="_rehpQcEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_reiQUcEPEeiQaYZfZQMLYg" name="" memberEnd="_reiQUsEPEeiQaYZfZQMLYg _rcUp08EPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_reiQUsEPEeiQaYZfZQMLYg" name="" type="_rJud8MEPEeiQaYZfZQMLYg" association="_reiQUcEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rei3YcEPEeiQaYZfZQMLYg" name="" memberEnd="_rei3YsEPEeiQaYZfZQMLYg _rcVQ4cEPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_rei3YsEPEeiQaYZfZQMLYg" name="" type="_rJud8MEPEeiQaYZfZQMLYg" association="_rei3YcEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rejeccEPEeiQaYZfZQMLYg" name="" memberEnd="_rejecsEPEeiQaYZfZQMLYg _rcVQ48EPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_rejecsEPEeiQaYZfZQMLYg" name="" type="_rJud8MEPEeiQaYZfZQMLYg" association="_rejeccEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rekFgcEPEeiQaYZfZQMLYg" name="" memberEnd="_rekFgsEPEeiQaYZfZQMLYg _rcWfAMEPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_rekFgsEPEeiQaYZfZQMLYg" name="" type="_rJxhQMEPEeiQaYZfZQMLYg" association="_rekFgcEPEeiQaYZfZQMLYg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rekskcEPEeiQaYZfZQMLYg" name="" memberEnd="_reksksEPEeiQaYZfZQMLYg _rcXGEMEPEeiQaYZfZQMLYg">
          <ownedEnd xmi:id="_reksksEPEeiQaYZfZQMLYg" name="" type="_rJz9gMEPEeiQaYZfZQMLYg" association="_rekskcEPEeiQaYZfZQMLYg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_rIzQ4MEPEeiQaYZfZQMLYg" name="Ball">
        <ownedComment xmi:id="_rdbdE8EPEeiQaYZfZQMLYg">
          <body>The Ball class provides methods and fields that are common to all balls.
@author Peter Dulworth (psd2)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_rcH1gMEPEeiQaYZfZQMLYg" name="p" visibility="private" type="_rX0kUcEPEeiQaYZfZQMLYg" association="_rd5XIsEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rcIckMEPEeiQaYZfZQMLYg" name="r" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rcIcksEPEeiQaYZfZQMLYg" name="v" visibility="private" type="_rX0kUcEPEeiQaYZfZQMLYg" association="_reYfUcEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rcJDocEPEeiQaYZfZQMLYg" name="c" visibility="private" type="_rXz9QMEPEeiQaYZfZQMLYg" association="_reZGYcEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rcJqscEPEeiQaYZfZQMLYg" name="prevInteraction" type="_rIzQ4MEPEeiQaYZfZQMLYg" association="_rdbdFMEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rcKRwMEPEeiQaYZfZQMLYg" name="component" visibility="private" type="_rXxhAMEPEeiQaYZfZQMLYg" association="_reZtccEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rcK40cEPEeiQaYZfZQMLYg" name="updateStrategy" type="_rJXRkMEPEeiQaYZfZQMLYg" isReadOnly="true" association="_reaUgcEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcLf4cEPEeiQaYZfZQMLYg" value="(new IUpdateStrategyFac.NullFactory&lt;IBallCmd>()).make()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rcLf4sEPEeiQaYZfZQMLYg" name="paintStrategy" type="_rJUOQMEPEeiQaYZfZQMLYg" isReadOnly="true" association="_rea7kcEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcLf48EPEeiQaYZfZQMLYg" value="IPaintStrategy.NULL"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rcMG8MEPEeiQaYZfZQMLYg" name="interactStrategy" type="_rJP80MEPEeiQaYZfZQMLYg" isReadOnly="true" association="_rebiocEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcMG8cEPEeiQaYZfZQMLYg" value="IInteractStrategy.NULL"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSZqEMFGEei0Sok_Gsjhng" name="NULL" isLeaf="true" isStatic="true" type="_rIzQ4MEPEeiQaYZfZQMLYg" isReadOnly="true" association="_gSnFcMFGEei0Sok_Gsjhng">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSZqEcFGEei0Sok_Gsjhng" value="new Ball() {}"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_rX1LYMEPEeiQaYZfZQMLYg" client="_rIzQ4MEPEeiQaYZfZQMLYg" supplier="_rLpwkMEPEeiQaYZfZQMLYg" contract="_rLpwkMEPEeiQaYZfZQMLYg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdBNYMEPEeiQaYZfZQMLYg" name="Ball" specification="_ramykMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdBNYcEPEeiQaYZfZQMLYg" name="initialLocation" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdBNYsEPEeiQaYZfZQMLYg" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdBNY8EPEeiQaYZfZQMLYg" name="velocity" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdBNZMEPEeiQaYZfZQMLYg" name="color" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdBNZcEPEeiQaYZfZQMLYg" name="component" type="_rXxhAMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdBNZsEPEeiQaYZfZQMLYg" name="updateStrategy" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdBNZ8EPEeiQaYZfZQMLYg" name="paintStrategy" type="_rJUOQMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdBNaMEPEeiQaYZfZQMLYg" type="_rIzQ4MEPEeiQaYZfZQMLYg" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>this.p = initialLocation;
		this.r = radius;
		this.v = velocity;
		this.c = color;
		this.component = component;
		
		this.setUpdateStrategy(updateStrategy);

		// IPaintStrategy.init() is used to initialize the strategy and host ball. This method must be run whenever the ball gets a new strategy, 
		// such as in a setPaintStrategy method or even in the constructor of the ball. The safest way to do this is to have 
		// the constructor set the paint strategy field by calling the setPaintStrategy method thus keeping the code to
		// initialize the strategy only in a single location.
		this.setPaintStrategy(paintStrategy);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdBNacEPEeiQaYZfZQMLYg" name="update" specification="_rX2ZgMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdBNasEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdBNa8EPEeiQaYZfZQMLYg" name="cmd" type="_rJOusMEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>cmd.apply(this, disp);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdBNbMEPEeiQaYZfZQMLYg" name="updateState" specification="_rX3noMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdBNbcEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>updateStrategy.updateState(this, disp); // update this ball's state using the strategy.     
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdBNbsEPEeiQaYZfZQMLYg" name="move" specification="_rI1tIMEPEeiQaYZfZQMLYg">
          <language>java</language>
          <body>this.p.translate(v.x, v.y);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdB0cMEPEeiQaYZfZQMLYg" name="bounce" specification="_rI2UMMEPEeiQaYZfZQMLYg">
          <language>java</language>
          <body>if (p.x + r > component.getWidth()) { // right
			p.x = p.x - 2 * (p.x - component.getWidth() + r);
			v.x = (int) Math.round(-1.0 * v.x);
		}

		if (p.x - r &lt; 0) { // left
			p.x = p.x + 2 * (-p.x + r);
			v.x = (int) Math.round(-1.0 * v.x);
		}

		if (p.y + r > component.getHeight()) { // bottom
			p.y = p.y - 2 * (p.y - component.getHeight() + r);
			v.y = (int) Math.round(-1.0 * v.y);
		}

		if (p.y - r &lt; 0) { // top
			p.y = p.y + 2 * (-p.y + r);
			v.y = (int) Math.round(-1.0 * v.y);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdB0ccEPEeiQaYZfZQMLYg" name="paint" specification="_ranZocEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdB0csEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>this.paintStrategy.paint(g, this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdB0c8EPEeiQaYZfZQMLYg" name="interactWith" specification="_rX41wMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdB0dMEPEeiQaYZfZQMLYg" name="target" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdB0dcEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdB0dsEPEeiQaYZfZQMLYg" name="interactFirst">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.interactStrategy.interact(this, target, disp, interactFirst);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdB0d8EPEeiQaYZfZQMLYg" name="getVelocity" specification="_rI2UMcEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdB0eMEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.v;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdB0ecEPEeiQaYZfZQMLYg" name="setVelocity" specification="_raoAssEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdB0esEPEeiQaYZfZQMLYg" name="v" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>this.v = v;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdB0e8EPEeiQaYZfZQMLYg" name="getLocation" specification="_rI27QMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdB0fMEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return p;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdCbgMEPEeiQaYZfZQMLYg" name="setLocation" specification="_raonwMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdCbgcEPEeiQaYZfZQMLYg" name="p" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>this.p = p;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdCbgsEPEeiQaYZfZQMLYg" name="getRadius" specification="_rI27QcEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdCbg8EPEeiQaYZfZQMLYg" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return r;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdCbhMEPEeiQaYZfZQMLYg" name="setRadius" specification="_rI3iUcEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdCbhcEPEeiQaYZfZQMLYg" name="r">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.r = r;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdCbhsEPEeiQaYZfZQMLYg" name="getColor" specification="_rI3iU8EPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdCbh8EPEeiQaYZfZQMLYg" type="_rXz9QMEPEeiQaYZfZQMLYg" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return c;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdCbiMEPEeiQaYZfZQMLYg" name="setColor" specification="_raonw8EPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdCbicEPEeiQaYZfZQMLYg" name="c" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>this.c = c;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdCbisEPEeiQaYZfZQMLYg" name="getContainer" specification="_rI4JYMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdCbi8EPEeiQaYZfZQMLYg" type="_rXxhAMEPEeiQaYZfZQMLYg" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return component;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdDCkMEPEeiQaYZfZQMLYg" name="setContainer" specification="_rapO0cEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdDCkcEPEeiQaYZfZQMLYg" name="component" type="_rXxhAMEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>this.component = component;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdDCksEPEeiQaYZfZQMLYg" name="setUpdateStrategy" specification="_rX5c0cEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdDCk8EPEeiQaYZfZQMLYg" name="updateStrategy" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>this.updateStrategy = updateStrategy;
		this.updateStrategy.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdDClMEPEeiQaYZfZQMLYg" name="setPaintStrategy" specification="_rX6D4cEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdDClcEPEeiQaYZfZQMLYg" name="paintStrategy" type="_rJUOQMEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>this.paintStrategy = paintStrategy;
		this.paintStrategy.init(this);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdDClsEPEeiQaYZfZQMLYg" name="setInteractStrategy" specification="_rX6D48EPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdDCl8EPEeiQaYZfZQMLYg" name="interactStrategy" type="_rJP80MEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>this.interactStrategy = interactStrategy;
		// TODO: initialize strategy?
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSeikMFGEei0Sok_Gsjhng" name="Ball" specification="_rY1Q8MEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_gSeikcFGEei0Sok_Gsjhng" type="_rIzQ4MEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>setLocation(new Point(0, 0));
		setRadius(0);
		setVelocity(new Point(0, 0));
		setColor(Color.BLACK);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_rI1tIMEPEeiQaYZfZQMLYg" name="move" method="_rdBNbsEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcEIsEPEeiQaYZfZQMLYg">
            <body>The following method updates the balls {@link #p location} based on its {@link #v velocity vector}.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_rI2UMMEPEeiQaYZfZQMLYg" name="bounce" method="_rdB0cMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcEI8EPEeiQaYZfZQMLYg">
            <body>The following method detecting if the edge of the ball is beyond the top/bottom left/right edge of the {@link #component canvas}.
	 * It updates the {@link #p location} of the ball based on which wall it went past.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_rI2UMcEPEeiQaYZfZQMLYg" name="getVelocity" method="_rdB0d8EPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcEJsEPEeiQaYZfZQMLYg">
            <body>Gets the current velocity.
	 * @return current velocity.</body>
          </ownedComment>
          <ownedParameter xmi:id="_raoAscEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rI27QMEPEeiQaYZfZQMLYg" name="getLocation" method="_rdB0e8EPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcEKMEPEeiQaYZfZQMLYg">
            <body>@return the p</body>
          </ownedComment>
          <ownedParameter xmi:id="_raoAtMEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rI27QcEPEeiQaYZfZQMLYg" name="getRadius" method="_rdCbgsEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcEKsEPEeiQaYZfZQMLYg">
            <body>@return r, the radius.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rI3iUMEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rI3iUcEPEeiQaYZfZQMLYg" name="setRadius" method="_rdCbhMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcEK8EPEeiQaYZfZQMLYg">
            <body>@param r The radius to set.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rI3iUsEPEeiQaYZfZQMLYg" name="r">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rI3iU8EPEeiQaYZfZQMLYg" name="getColor" method="_rdCbhsEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcELMEPEeiQaYZfZQMLYg">
            <body>@return the c</body>
          </ownedComment>
          <ownedParameter xmi:id="_raonwsEPEeiQaYZfZQMLYg" type="_rXz9QMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rI4JYMEPEeiQaYZfZQMLYg" name="getContainer" method="_rdCbisEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcELsEPEeiQaYZfZQMLYg">
            <body>@return the component</body>
          </ownedComment>
          <ownedParameter xmi:id="_rapO0MEPEeiQaYZfZQMLYg" type="_rXxhAMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rX2ZgMEPEeiQaYZfZQMLYg" name="update" method="_rdBNacEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rX2ZgcEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rX2ZgsEPEeiQaYZfZQMLYg" name="cmd" type="_rJOusMEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rX3noMEPEeiQaYZfZQMLYg" name="updateState" method="_rdBNbMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcEIcEPEeiQaYZfZQMLYg">
            <body>Update the state of the ball. Delegates to the update strategy.
	 * @param disp The Dispatcher that sent the command that is calling this method.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rX3nocEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rX41wMEPEeiQaYZfZQMLYg" name="interactWith" method="_rdB0c8EPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcEJcEPEeiQaYZfZQMLYg">
            <body>Used to invoke the ball's interaction strategy. 
	 * @param target The Ball that is the &quot;other ball&quot; in the perspective of this processing.
	 * @param disp The dispatcher.
	 * @param interactFirst A boolean denoting whether this is the first in a series (usually two) of interactions.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rX41wcEPEeiQaYZfZQMLYg" name="target" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rX41wsEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rX41w8EPEeiQaYZfZQMLYg" name="interactFirst">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rX5c0cEPEeiQaYZfZQMLYg" name="setUpdateStrategy" method="_rdDCksEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcrMcEPEeiQaYZfZQMLYg">
            <body>@param updateStrategy The update strategy to set.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rX5c0sEPEeiQaYZfZQMLYg" name="updateStrategy" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rX6D4cEPEeiQaYZfZQMLYg" name="setPaintStrategy" method="_rdDClMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcrMsEPEeiQaYZfZQMLYg">
            <body>@param paintStrategy The paint strategy to set the instance's paint strategy to.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rX6D4sEPEeiQaYZfZQMLYg" name="paintStrategy" type="_rJUOQMEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rX6D48EPEeiQaYZfZQMLYg" name="setInteractStrategy" method="_rdDClsEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcrM8EPEeiQaYZfZQMLYg">
            <body>@param interactStrategy the interactStrategy to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_rX6D5MEPEeiQaYZfZQMLYg" name="interactStrategy" type="_rJP80MEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ramykMEPEeiQaYZfZQMLYg" name="Ball" method="_rdBNYMEPEeiQaYZfZQMLYg">
          <eAnnotations xmi:id="_ramymMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ramymcEPEeiQaYZfZQMLYg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_rdcEIMEPEeiQaYZfZQMLYg">
            <body>The following constructor takes all the parameters and assigns them to their respective fields in the ball.
	 * 
	 * @param initialLocation A point representing the initial location of the center of the ball.
	 * @param radius An integer representing the radius of the ball.
	 * @param velocity A point representing the velocity vector of the ball.
	 * @param color A color representing the color of the ball.
	 * @param component The component on which the ball will be painted.
	 * @param updateStrategy The update strategy that the ball uses.
	 * @param paintStrategy The paint strategy that the ball uses.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ramykcEPEeiQaYZfZQMLYg" name="initialLocation" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_ramyksEPEeiQaYZfZQMLYg" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ramyk8EPEeiQaYZfZQMLYg" name="velocity" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_ramylMEPEeiQaYZfZQMLYg" name="color" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_ramylcEPEeiQaYZfZQMLYg" name="component" type="_rXxhAMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_ramylsEPEeiQaYZfZQMLYg" name="updateStrategy" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_ramyl8EPEeiQaYZfZQMLYg" name="paintStrategy" type="_rJUOQMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_ramymsEPEeiQaYZfZQMLYg" type="_rIzQ4MEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ranZocEPEeiQaYZfZQMLYg" name="paint" method="_rdB0ccEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcEJMEPEeiQaYZfZQMLYg">
            <body>The following method paints the ball on the {@link #component canvas} based on its {@link #c color} field, {@link #p location} and its {@link #r radius}. 
	 * 
	 * @param g This is the {@link java.awt.Graphics Graphics} object that the ball should paint itself on.</body>
          </ownedComment>
          <ownedParameter xmi:id="_raoAsMEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_raoAssEPEeiQaYZfZQMLYg" name="setVelocity" method="_rdB0ecEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcEJ8EPEeiQaYZfZQMLYg">
            <body>Sets a new velocity.
	 * @param v New velocity to set.</body>
          </ownedComment>
          <ownedParameter xmi:id="_raoAs8EPEeiQaYZfZQMLYg" name="v" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_raonwMEPEeiQaYZfZQMLYg" name="setLocation" method="_rdCbgMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcEKcEPEeiQaYZfZQMLYg">
            <body>@param p the p to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_raonwcEPEeiQaYZfZQMLYg" name="p" type="_rX0kUcEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_raonw8EPEeiQaYZfZQMLYg" name="setColor" method="_rdCbiMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcELcEPEeiQaYZfZQMLYg">
            <body>@param c the c to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_raonxMEPEeiQaYZfZQMLYg" name="c" type="_rXz9QMEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rapO0cEPEeiQaYZfZQMLYg" name="setContainer" method="_rdDCkMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcrMMEPEeiQaYZfZQMLYg">
            <body>@param component the component to set</body>
          </ownedComment>
          <ownedParameter xmi:id="_rapO0sEPEeiQaYZfZQMLYg" name="component" type="_rXxhAMEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rY1Q8MEPEeiQaYZfZQMLYg" name="Ball" method="_gSeikMFGEei0Sok_Gsjhng">
          <eAnnotations xmi:id="_gP4hkMFGEei0Sok_Gsjhng" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gP4hkcFGEei0Sok_Gsjhng" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gShl4MFGEei0Sok_Gsjhng">
            <body>No parameter constructor used for creating a null ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gP4hksFGEei0Sok_Gsjhng" type="_rIzQ4MEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_rJEWoMEPEeiQaYZfZQMLYg" name="BallModel">
        <ownedComment xmi:id="_rdcrNMEPEeiQaYZfZQMLYg">
          <body>The class that manages the creation, deletion and animation of the balls.
@author Peter Dulworth (psd2), Andrew Hadad (aah6)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_rcMuAMEPEeiQaYZfZQMLYg" name="m2vAdapter" visibility="private" type="_rJRyAMEPEeiQaYZfZQMLYg" association="_recwwMEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcMuAcEPEeiQaYZfZQMLYg" value="IM2VAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rcNVEcEPEeiQaYZfZQMLYg" name="myDispatcher" visibility="private" type="_rLmGMMEPEeiQaYZfZQMLYg" association="_redX0cEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcN8IcEPEeiQaYZfZQMLYg" value="new SequentialDispatcher&lt;IBallCmd>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rcN8I8EPEeiQaYZfZQMLYg" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcN8JMEPEeiQaYZfZQMLYg" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rcOjMcEPEeiQaYZfZQMLYg" name="timer" visibility="private" type="_rX9HM8EPEeiQaYZfZQMLYg" association="_red-4cEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcOjMsEPEeiQaYZfZQMLYg" value="new Timer(timeSlice, (e) -> m2vAdapter.update())"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rcOjNMEPEeiQaYZfZQMLYg" name="switcher" visibility="private" type="_rLexcMEPEeiQaYZfZQMLYg" association="_red-5MEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcPKQcEPEeiQaYZfZQMLYg" value="new SwitcherStrategy&lt;IBallCmd>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rcPxUMEPEeiQaYZfZQMLYg" name="_errorStrategyFac" visibility="private" type="_rJYfsMEPEeiQaYZfZQMLYg" association="_reel8cEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcPxUsEPEeiQaYZfZQMLYg" value="new IUpdateStrategyFac.ErrorFactory&lt;IBallCmd>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rcQYYcEPEeiQaYZfZQMLYg" name="updateStrategyLoader" visibility="package" type="_rL0IoMEPEeiQaYZfZQMLYg" association="_refNAcEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcQ_cMEPEeiQaYZfZQMLYg" value="new ObjectLoader&lt;IUpdateStrategy&lt;IBallCmd>>((a) -> _errorStrategyFac.make())"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rcQ_csEPEeiQaYZfZQMLYg" name="_errorPaintStrategyFac" visibility="private" type="_rJVcYMEPEeiQaYZfZQMLYg" association="_ref0EMEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcQ_c8EPEeiQaYZfZQMLYg" value="IPaintStrategyFac.NULL"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rcRmgMEPEeiQaYZfZQMLYg" name="paintStrategyLoader" visibility="package" type="_rL0IoMEPEeiQaYZfZQMLYg" association="_ref0E8EPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcRmgsEPEeiQaYZfZQMLYg" value="new ObjectLoader&lt;IPaintStrategy>((a) -> _errorPaintStrategyFac.make())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdDpoMEPEeiQaYZfZQMLYg" name="BallModel" specification="_rYAKgMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdDpocEPEeiQaYZfZQMLYg" name="m2vAdapter" type="_rJRyAMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdDposEPEeiQaYZfZQMLYg" type="_rJEWoMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>this.m2vAdapter = m2vAdapter;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdDpo8EPEeiQaYZfZQMLYg" name="loadUpdateStrategy" specification="_rJGL0MEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdDppMEPEeiQaYZfZQMLYg" name="strategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdDppcEPEeiQaYZfZQMLYg" type="_rJXRkMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>return this.updateStrategyLoader.loadInstance(strategyName, new Object[] {});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdDppsEPEeiQaYZfZQMLYg" name="loadPaintStrategy" specification="_rJHZ8MEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdDpp8EPEeiQaYZfZQMLYg" name="paintStrategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdDpqMEPEeiQaYZfZQMLYg" type="_rJUOQMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>return this.paintStrategyLoader.loadInstance(paintStrategyName, new Object[] {});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdDpqcEPEeiQaYZfZQMLYg" name="makeBall" specification="_rYAxksEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdDpqsEPEeiQaYZfZQMLYg" name="updateStrategy" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdDpq8EPEeiQaYZfZQMLYg" name="paintStrategy" type="_rJUOQMEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>// Generate random initial conditions for the ball.
		int r = Randomizer.singleton.randomInt(15, 30);
		Point p = Randomizer.singleton
				.randomLoc(new Dimension(m2vAdapter.getPnlWidth() - (2 * r), m2vAdapter.getPnlHeight() - (2 * r)));
		p.x += r; // move p to the right by r
		p.y += r; // move p down by r
		Point v = Randomizer.singleton.randomVel(new Rectangle(7, 7));
		if (v.x == 0 || v.y == 0) { // Ensure the ball has a non-zero velocity.
			v.x = 1;
			v.y = 1;
		}
		Color c = Randomizer.singleton.randomColor();
		Component pnlCenter = m2vAdapter.getComponent();

		Ball newBall = new Ball(p, r, v, c, pnlCenter, updateStrategy, paintStrategy);
		myDispatcher.addObserver(newBall); // Add the ball to the dispatcher.
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdDprMEPEeiQaYZfZQMLYg" name="switchSwitcherStrategy" specification="_rYBYocEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdDprcEPEeiQaYZfZQMLYg" name="newStrategy" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>switcher.setStrategy(newStrategy);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdDprsEPEeiQaYZfZQMLYg" name="clearBalls" specification="_rJIBAMEPEeiQaYZfZQMLYg">
          <language>java</language>
          <body>myDispatcher.removeAllObservers();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdEQsMEPEeiQaYZfZQMLYg" name="update" specification="_rarEAMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdEQscEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>myDispatcher.updateAll((context, disp) -> {
			context.move();
			context.bounce();

			// Variant behavior:
			context.paint(g);
			context.updateState(disp);
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdEQssEPEeiQaYZfZQMLYg" name="start" specification="_rJIoEMEPEeiQaYZfZQMLYg">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdEQs8EPEeiQaYZfZQMLYg" name="makeUpdateStrategyFac" specification="_rJIoEcEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdEQtMEPEeiQaYZfZQMLYg" name="className">
            <eAnnotations xmi:id="_rdEQtcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rdEQtsEPEeiQaYZfZQMLYg" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdEQt8EPEeiQaYZfZQMLYg" type="_rJYfsMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>if (null == loadUpdateStrategy(fixName(&quot;model.strategy&quot;, className, &quot;Strategy&quot;)))
			return _errorStrategyFac;
		return new IUpdateStrategyFac&lt;IBallCmd>() {
			/**
			 * Instantiate a strategy corresponding to the given class name.
			 * @return An IUpdateStrategy instance
			 */
			public IUpdateStrategy&lt;IBallCmd> make() {
				return loadUpdateStrategy(fixName(&quot;model.strategy&quot;, className, &quot;Strategy&quot;));
			}

			/**
			 * Return the given class name string
			 */
			public String toString() {
				return className;
			}
		};
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdEQuMEPEeiQaYZfZQMLYg" name="makePaintStrategyFac" specification="_rJJPI8EPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdEQucEPEeiQaYZfZQMLYg" name="className">
            <eAnnotations xmi:id="_rdEQusEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rdEQu8EPEeiQaYZfZQMLYg" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdEQvMEPEeiQaYZfZQMLYg" type="_rJVcYMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>if (null == loadPaintStrategy(fixName(&quot;model.paint.strategy&quot;, className, &quot;PaintStrategy&quot;))) {
			return null; // TODO: make error paint strategy
			//			return _errorStrategyFac;
		}
		return new IPaintStrategyFac() {
			/**
			 * Instantiate a strategy corresponding to the given class name.
			 * @return An IUpdateStrategy instance
			 */
			public IPaintStrategy make() {
				return loadPaintStrategy(fixName(&quot;model.paint.strategy&quot;, className, &quot;PaintStrategy&quot;));
			}

			/**
			 * Return the given class name string
			 */
			public String toString() {
				return className;
			}
		};
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdEQvcEPEeiQaYZfZQMLYg" name="fixName" specification="_rJJ2M8EPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdEQvsEPEeiQaYZfZQMLYg" name="folder">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdEQv8EPEeiQaYZfZQMLYg" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdEQwMEPEeiQaYZfZQMLYg" name="append">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdEQwcEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return folder + &quot;.&quot; + className + append;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdE3wMEPEeiQaYZfZQMLYg" name="combineStrategyFacs" specification="_rYCmwsEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdE3wcEPEeiQaYZfZQMLYg" name="stratFac1" type="_rJYfsMEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_rdE3wsEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rdE3w8EPEeiQaYZfZQMLYg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_rdE3xMEPEeiQaYZfZQMLYg" name="stratFac2" type="_rJYfsMEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_rdE3xcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rdE3xsEPEeiQaYZfZQMLYg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_rdE3x8EPEeiQaYZfZQMLYg" type="_rJYfsMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2)
			return _errorStrategyFac;
		return new IUpdateStrategyFac&lt;IBallCmd>() {
			/**
			 * Instantiate a new MultiStrategy with the strategies from the given strategy factories
			 * @return A MultiStrategy instance
			 */
			public IUpdateStrategy&lt;IBallCmd> make() {
				return new MultiStrategy&lt;IBallCmd>(stratFac1.make(), stratFac2.make());
			}

			/**
			 * Return a string that is the toString()'s of the given strategy factories concatenated with a &quot;-&quot;
			 */
			public String toString() {
				return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
			}
		};
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdE3yMEPEeiQaYZfZQMLYg" name="getSwitcherStrategy" specification="_rJKdQ8EPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdE3ycEPEeiQaYZfZQMLYg" type="_rLexcMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>return this.switcher;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_rJGL0MEPEeiQaYZfZQMLYg" name="loadUpdateStrategy" visibility="private" method="_rdDpo8EPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcrNsEPEeiQaYZfZQMLYg">
            <body>The following method returns an instance of an IUpdateStrategy, given a fully qualified class name (package.classname) of
	 * a class that implements IUpdateStrategy.
	 * The method assumes that there is only one constructor for the supplied class that has the same *number* of
	 * input parameters as specified in the args array and that it conforms to a specific
	 * signature, i.e. specific order and types of input parameters in the args array.
	 * @param strategyName A string that is the fully qualified class name of the desired object.
	 * @return An instance of the supplied class.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rJGL0cEPEeiQaYZfZQMLYg" name="strategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rYAxkMEPEeiQaYZfZQMLYg" type="_rJXRkMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rJHZ8MEPEeiQaYZfZQMLYg" name="loadPaintStrategy" visibility="private" method="_rdDppsEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcrN8EPEeiQaYZfZQMLYg">
            <body>The following method returns an instance of an IUpdateStrategy, given a fully qualified class name (package.classname) of
	 * a class that implements IUpdateStrategy.
	 * The method assumes that there is only one constructor for the supplied class that has the same *number* of
	 * input parameters as specified in the args array and that it conforms to a specific
	 * signature, i.e. specific order and types of input parameters in the args array.
	 * @param paintStrategyName A string that is the fully qualified class name of the desired object.
	 * @return An instance of the supplied class.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rJHZ8cEPEeiQaYZfZQMLYg" name="paintStrategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rYAxkcEPEeiQaYZfZQMLYg" type="_rJUOQMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rJIBAMEPEeiQaYZfZQMLYg" name="clearBalls" method="_rdDprsEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcrOsEPEeiQaYZfZQMLYg">
            <body>The following method removes all {@link model.Ball ABalls} from the dispatcher.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_rJIoEMEPEeiQaYZfZQMLYg" name="start" method="_rdEQssEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcrPMEPEeiQaYZfZQMLYg">
            <body>The following method starts the model by starting the timer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_rJIoEcEPEeiQaYZfZQMLYg" name="makeUpdateStrategyFac" method="_rdEQs8EPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rddSQMEPEeiQaYZfZQMLYg">
            <body>Returns an IUpdateStrategyFac that can instantiate the strategy specified by
	 * className. Returns a factory for a beeping error strategy if className is null. 
	 * The toString() of the returned factory is the className.
	 * 
	 * @param className Shortened name of desired strategy.
	 * @return A factory to make that strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rJIoEsEPEeiQaYZfZQMLYg" name="className">
            <eAnnotations xmi:id="_rJJPIcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rJJPIsEPEeiQaYZfZQMLYg" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rYCmwMEPEeiQaYZfZQMLYg" type="_rJYfsMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rJJPI8EPEeiQaYZfZQMLYg" name="makePaintStrategyFac" method="_rdEQuMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rddSQcEPEeiQaYZfZQMLYg">
            <body>Returns an IPaintStrategyFac that can instantiate the strategy specified by 
	 * className. Returns a factory for a beeping error strategy if className is null. 
	 * The toString() of the returned factory is the className.
	 * 
	 * @param className Shortened name of desired strategy.
	 * @return A factory to make that strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rJJ2MMEPEeiQaYZfZQMLYg" name="className">
            <eAnnotations xmi:id="_rJJ2McEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rJJ2MsEPEeiQaYZfZQMLYg" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rYCmwcEPEeiQaYZfZQMLYg" type="_rJVcYMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rJJ2M8EPEeiQaYZfZQMLYg" name="fixName" visibility="private" method="_rdEQvcEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rddSQsEPEeiQaYZfZQMLYg">
            <body>Converts a shortened class name (XXX) to a fully qualified class name (folder.XXXappend).
	 * @param folder The name of the folder for fully qualified class name.
	 * @param className The abbreviated, shortened name.
	 * @param append The string to append to the end.
	 * @return The fully qualified class name.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rJJ2NMEPEeiQaYZfZQMLYg" name="folder">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rJKdQMEPEeiQaYZfZQMLYg" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rJKdQcEPEeiQaYZfZQMLYg" name="append">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rJKdQsEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rJKdQ8EPEeiQaYZfZQMLYg" name="getSwitcherStrategy" method="_rdE3yMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rddSRMEPEeiQaYZfZQMLYg">
            <body>@return The switcher field.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rYEb8cEPEeiQaYZfZQMLYg" type="_rLexcMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rYAKgMEPEeiQaYZfZQMLYg" name="BallModel" method="_rdDpoMEPEeiQaYZfZQMLYg">
          <eAnnotations xmi:id="_rYAKgsEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_rYAKg8EPEeiQaYZfZQMLYg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_rdcrNcEPEeiQaYZfZQMLYg">
            <body>The BallModel constructor. Creates a new BallModel by taking an adapter.
	 * @param m2vAdapter Constructor is supplied with an instance of the model-to-view adapter.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rYAKgcEPEeiQaYZfZQMLYg" name="m2vAdapter" type="_rJRyAMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rYAKhMEPEeiQaYZfZQMLYg" type="_rJEWoMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rYAxksEPEeiQaYZfZQMLYg" name="makeBall" method="_rdDpqcEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcrOMEPEeiQaYZfZQMLYg">
            <body>The following method creates an instance of an Ball (with random parameters), given a shortened class name (model.XXXStrategy) of a 
	 * update strategy. It then adds the ball as an observer to the dispatcher.
	 * @param updateStrategy The update strategy of the ball.
	 * @param paintStrategy An IPaintStrategy for the new ball to use.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rYAxk8EPEeiQaYZfZQMLYg" name="updateStrategy" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rYAxlMEPEeiQaYZfZQMLYg" name="paintStrategy" type="_rJUOQMEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rYBYocEPEeiQaYZfZQMLYg" name="switchSwitcherStrategy" method="_rdDprMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcrOcEPEeiQaYZfZQMLYg">
            <body>Sets the strategy of the switcher to newStrategy.
	 * @param newStrategy The new strategy to give the switcher.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rYBYosEPEeiQaYZfZQMLYg" name="newStrategy" type="_rJXRkMEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rYCmwsEPEeiQaYZfZQMLYg" name="combineStrategyFacs" method="_rdE3wMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rddSQ8EPEeiQaYZfZQMLYg">
            <body>Returns an IUpdateStrategyFac that can instantiate a MultiStrategy with the two
	 * strategies made by the two given IUpdateStrategyFac objects. Returns null if
	 * either supplied factory is null. The toString() of the returned factory
	 * is the toString()'s of the two given factories, concatenated with &quot;-&quot;. 
	 * If either factory is null, then a factory for a beeping error strategy is returned.
	 * 
	 * @param stratFac1 An IUpdateStrategyFac for a strategy
	 * @param stratFac2 An IUpdateStrategyFac for a strategy
	 * @return An IUpdateStrategyFac for the composition of the two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_rYCmw8EPEeiQaYZfZQMLYg" name="stratFac1" type="_rJYfsMEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_rYDN0sEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rYDN08EPEeiQaYZfZQMLYg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_rYCmxMEPEeiQaYZfZQMLYg" name="stratFac2" type="_rJYfsMEPEeiQaYZfZQMLYg">
            <eAnnotations xmi:id="_rYD04cEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rYD04sEPEeiQaYZfZQMLYg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_rYDN0cEPEeiQaYZfZQMLYg" type="_rJYfsMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rarEAMEPEeiQaYZfZQMLYg" name="update" method="_rdEQsMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdcrO8EPEeiQaYZfZQMLYg">
            <body>This is the method that is called by the view's adapter to the model, i.e. is called by IV2MUpdateAdapter.paint().
	 * The following method notifies all the balls in the dispatcher (which in turn calls the update method of each ball) and 
	 * passes each update method the correct {@link java.awt.Graphics Graphics} object to paint on.
	 * @param g The Graphics object from the view's paintComponent() call.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rarEAcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_rJOusMEPEeiQaYZfZQMLYg" name="IBallCmd">
        <ownedOperation xmi:id="_rYFqEMEPEeiQaYZfZQMLYg" name="apply" isAbstract="true">
          <ownedComment xmi:id="_rddSRcEPEeiQaYZfZQMLYg">
            <body>The method run by the ball's update method which is called when the ball is updated by the dispatcher.
	 * @param context The ball that is calling this method. The context under which the command is to be run.
	 * @param disp The dispatcher.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rYGRIMEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rYGRIcEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_rJP80MEPEeiQaYZfZQMLYg" name="IInteractStrategy">
        <ownedComment xmi:id="_rddSRsEPEeiQaYZfZQMLYg">
          <body>Strategy that defines a directed interaction between two balls where the balls are NOT
equivalently processed. 
@author Peter Dulworth (psd2), Rocky Wu (lw31)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_rJQj4MEPEeiQaYZfZQMLYg" name="NULL" isLeaf="true" isStatic="true" type="_rJP80MEPEeiQaYZfZQMLYg" isReadOnly="true" association="_rd0eoMEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJQj4cEPEeiQaYZfZQMLYg" value="(context, target, disp, isSource) -> {}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_rYG4McEPEeiQaYZfZQMLYg" name="interact">
          <ownedParameter xmi:id="_rYG4MsEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rYG4M8EPEeiQaYZfZQMLYg" name="target" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rYHfQMEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rYHfQcEPEeiQaYZfZQMLYg" name="interactFirst">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_rJRyAMEPEeiQaYZfZQMLYg" name="IM2VAdapter">
        <ownedComment xmi:id="_rddSR8EPEeiQaYZfZQMLYg">
          <body>This interface defines behavior the model expects from the view.

@author Peter Dulworth (psd2)
@author Andrew Hadad (aah6)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_rJSZEMEPEeiQaYZfZQMLYg" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_rJRyAMEPEeiQaYZfZQMLYg" isReadOnly="true" association="_rd1FscEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJSZEcEPEeiQaYZfZQMLYg" value="new IM2VAdapter() {&#xA;&#x9;&#x9;public void update() {&#xA;&#x9;&#x9;};&#xA;&#xA;&#x9;&#x9;public Integer getPnlHeight() {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;};&#xA;&#xA;&#x9;&#x9;public Integer getPnlWidth() {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;};&#xA;&#xA;&#x9;&#x9;public Component getComponent() {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;};&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rJTAIcEPEeiQaYZfZQMLYg" name="pnlHeight" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rJTnMcEPEeiQaYZfZQMLYg" name="component" type="_rXxhAMEPEeiQaYZfZQMLYg" isReadOnly="true" association="_rd1swMEPEeiQaYZfZQMLYg"/>
        <ownedOperation xmi:id="_rJTAIMEPEeiQaYZfZQMLYg" name="update">
          <ownedComment xmi:id="_rddSSMEPEeiQaYZfZQMLYg">
            <body>This is the method the model will call when it wants to update the view.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_rJTAIsEPEeiQaYZfZQMLYg" name="getPnlWidth">
          <ownedComment xmi:id="_rddSScEPEeiQaYZfZQMLYg">
            <body>This is the method the model will call to get the width of the view.
	 * @return The width of the view.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rJTnMMEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_rJUOQMEPEeiQaYZfZQMLYg" name="IPaintStrategy">
        <ownedComment xmi:id="_rddSSsEPEeiQaYZfZQMLYg">
          <body>Top-level interface that represents a strategy used by a Ball when asked to perform variant paint operations. A Ball has only one IPaintStrategy.
@author Peter Dulworth (psd2)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_rJUOQcEPEeiQaYZfZQMLYg" name="NULL" isLeaf="true" isStatic="true" type="_rJUOQMEPEeiQaYZfZQMLYg" isReadOnly="true" association="_rd1sw8EPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJU1UMEPEeiQaYZfZQMLYg" value="new IPaintStrategy() {&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public void init(Ball host) {&#xA;&#x9;&#x9;&#x9;// No-op.&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public void paint(Graphics g, Ball host) {&#xA;&#x9;&#x9;&#x9;// No-op.&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_rYIGUMEPEeiQaYZfZQMLYg" name="init">
          <ownedParameter xmi:id="_rYIGUcEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rarrEMEPEeiQaYZfZQMLYg" name="paint">
          <ownedParameter xmi:id="_rarrEcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rarrEsEPEeiQaYZfZQMLYg" name="host" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_rJVcYMEPEeiQaYZfZQMLYg" name="IPaintStrategyFac">
        <ownedComment xmi:id="_rddSS8EPEeiQaYZfZQMLYg">
          <body>An interface that defines a factory that instantiates a specific IPaintStrategy.
@author Peter Dulworth (psd2)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_rJWDccEPEeiQaYZfZQMLYg" name="NULL" isLeaf="true" isStatic="true" type="_rJVcYMEPEeiQaYZfZQMLYg" isReadOnly="true" association="_rd2T0cEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJWqgMEPEeiQaYZfZQMLYg" value="new IPaintStrategyFac() {&#xA;&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy make() {&#xA;&#x9;&#x9;&#x9;return new IPaintStrategy() {&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void init(Ball host) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No-op.&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void paint(Graphics g, Ball host) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No-op.&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;};&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Return the given class name string&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public String toString() {&#xA;&#x9;&#x9;&#x9;return &quot;NULL PAINT FAC&quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rJWqgcEPEeiQaYZfZQMLYg" name="ERROR" isLeaf="true" isStatic="true" type="_rJVcYMEPEeiQaYZfZQMLYg" isReadOnly="true" association="_rd264cEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJWqgsEPEeiQaYZfZQMLYg" value="new IPaintStrategyFac() {&#xA;&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public IPaintStrategy make() {&#xA;&#x9;&#x9;&#x9;return new IPaintStrategy() {&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void init(Ball host) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No-op.&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public void paint(Graphics g, Ball host) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No-op.&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;};&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Return the given class name string&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public String toString() {&#xA;&#x9;&#x9;&#x9;return &quot;ERROR PAINT FAC&quot;;&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_rJWDcMEPEeiQaYZfZQMLYg" name="make">
          <ownedComment xmi:id="_rddSTMEPEeiQaYZfZQMLYg">
            <body>Instantiate the specific IPaintStrategy for which this factory is defined.
	 * @return An IPaintStrategy instance.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rYItYMEPEeiQaYZfZQMLYg" type="_rJUOQMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_rJXRkMEPEeiQaYZfZQMLYg" name="IUpdateStrategy">
        <ownedComment xmi:id="_rddSTcEPEeiQaYZfZQMLYg">
          <body>The strategy that runs when a Ball updates its state. 
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.
@author Peter</body>
        </ownedComment>
        <ownedOperation xmi:id="_rYJUcMEPEeiQaYZfZQMLYg" name="init">
          <ownedParameter xmi:id="_rYJUccEPEeiQaYZfZQMLYg" name="context" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rYJUcsEPEeiQaYZfZQMLYg" name="updateState">
          <ownedParameter xmi:id="_rYJ7gMEPEeiQaYZfZQMLYg" name="b" type="_rIzQ4MEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rYJ7gcEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_rJYfsMEPEeiQaYZfZQMLYg" name="IUpdateStrategyFac">
        <ownedComment xmi:id="_rddSTsEPEeiQaYZfZQMLYg">
          <body>An interface that defines a factory that instantiates 
a specific IUpdateStrategy.
@param &lt;TMsg> The type of message that the supplied IDispatcher can send.</body>
        </ownedComment>
        <nestedClassifier xmi:type="uml:Class" xmi:id="_rJaU4cEPEeiQaYZfZQMLYg" name="ErrorFactory" isLeaf="true">
          <eAnnotations xmi:id="_rJa78MEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_rJa78cEPEeiQaYZfZQMLYg" key="static"/>
          </eAnnotations>
          <ownedComment xmi:id="_rdd5UcEPEeiQaYZfZQMLYg">
            <body>A factory for a beeping error strategy that beeps the speaker every 25 updates.
	 * Either use the _errorStrategyFac variable directly if you need a factory that makes an error strategy,
	 * or call _errorStrategyFac.make() to create an instance of a beeping error strategy.
	 * @param &lt;TMsg> The type of message that the supplied IDispatcher can send.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_rYKiksEPEeiQaYZfZQMLYg" client="_rJaU4cEPEeiQaYZfZQMLYg" supplier="_rJYfsMEPEeiQaYZfZQMLYg" contract="_rJYfsMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdE3ysEPEeiQaYZfZQMLYg" name="make" specification="_rJbjAMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdE3y8EPEeiQaYZfZQMLYg" type="_rJXRkMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>System.out.println(&quot;MAKING ERROR STRATEGY&quot;);
			return new IUpdateStrategy&lt;TMsg>() {

				private int count = 0; // update counter

				@Override
				/**
				 * Beep the speaker every 25 updates
				 */
				public void updateState(Ball context, IDispatcher&lt;TMsg> disp) {
					if (25 &lt; count++) {
						java.awt.Toolkit.getDefaultToolkit().beep();
						count = 0;
					}
				}

				@Override
				public void init(Ball host) {}
				
			};
		</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdFe0MEPEeiQaYZfZQMLYg" name="toString" specification="_rJcxIcEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdFe0cEPEeiQaYZfZQMLYg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;INVALID!!!&quot;;
		</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rJbjAMEPEeiQaYZfZQMLYg" name="make" method="_rdE3ysEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rYLwsMEPEeiQaYZfZQMLYg" type="_rJXRkMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rJcxIcEPEeiQaYZfZQMLYg" name="toString" method="_rdFe0MEPEeiQaYZfZQMLYg">
            <ownedComment xmi:id="_rdd5UsEPEeiQaYZfZQMLYg">
              <body>Return the given class name string</body>
            </ownedComment>
            <ownedParameter xmi:id="_rJcxIsEPEeiQaYZfZQMLYg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Class" xmi:id="_rJdYMMEPEeiQaYZfZQMLYg" name="NullFactory" isLeaf="true">
          <eAnnotations xmi:id="_rJdYMcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_rJdYMsEPEeiQaYZfZQMLYg" key="static"/>
          </eAnnotations>
          <ownedComment xmi:id="_rdd5U8EPEeiQaYZfZQMLYg">
            <body>A factory for a typed null strategy object.&lt;br>
     * Usage: instantiate this factory class using the desired TDispMsg type and then call its make() method
     * to create the correctly typed null strategy object.
	 * @param &lt;TMsg> The type of message that the supplied IDispatcher can send.</body>
          </ownedComment>
          <interfaceRealization xmi:id="_rYLwscEPEeiQaYZfZQMLYg" client="_rJdYMMEPEeiQaYZfZQMLYg" supplier="_rJYfsMEPEeiQaYZfZQMLYg" contract="_rJYfsMEPEeiQaYZfZQMLYg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdFe0sEPEeiQaYZfZQMLYg" name="make" specification="_rJd_QMEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rdFe08EPEeiQaYZfZQMLYg" type="_rJXRkMEPEeiQaYZfZQMLYg" direction="return"/>
            <language>java</language>
            <body>return new IUpdateStrategy&lt;TMsg>() {

				@Override
				/**
				 * No-op
				 * @param context Ignored
				 */
				public void init(Ball context) {}

				@Override
				/**
				 * No-op
				 * @param context Ignored
				 * @param dispatcher Ignored
				 */
				public void updateState(Ball context, IDispatcher&lt;TMsg> dispatcher) {}		
			};
		</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_rJd_QMEPEeiQaYZfZQMLYg" name="make" method="_rdFe0sEPEeiQaYZfZQMLYg">
            <ownedParameter xmi:id="_rYMXwMEPEeiQaYZfZQMLYg" type="_rJXRkMEPEeiQaYZfZQMLYg" direction="return"/>
          </ownedOperation>
        </nestedClassifier>
        <ownedOperation xmi:id="_rJZt0cEPEeiQaYZfZQMLYg" name="make">
          <ownedComment xmi:id="_rdd5UMEPEeiQaYZfZQMLYg">
            <body>Instantiate the specific IUpdateStrategy for which this factory is defined.
	 * @return An IUpdateStrategy instance.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rYKikcEPEeiQaYZfZQMLYg" type="_rJXRkMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rdbdFMEPEeiQaYZfZQMLYg" name="" memberEnd="_rcJqscEPEeiQaYZfZQMLYg _rdbdFcEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rdbdFcEPEeiQaYZfZQMLYg" name="" type="_rIzQ4MEPEeiQaYZfZQMLYg" association="_rdbdFMEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rd0eoMEPEeiQaYZfZQMLYg" name="" memberEnd="_rd0eocEPEeiQaYZfZQMLYg _rJQj4MEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rd0eocEPEeiQaYZfZQMLYg" name="" type="_rJP80MEPEeiQaYZfZQMLYg" association="_rd0eoMEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rd1FscEPEeiQaYZfZQMLYg" name="" memberEnd="_rd1FssEPEeiQaYZfZQMLYg _rJSZEMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rd1FssEPEeiQaYZfZQMLYg" name="" type="_rJRyAMEPEeiQaYZfZQMLYg" association="_rd1FscEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rd1swMEPEeiQaYZfZQMLYg" name="" memberEnd="_rd1swcEPEeiQaYZfZQMLYg _rJTnMcEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rd1swcEPEeiQaYZfZQMLYg" name="" type="_rJRyAMEPEeiQaYZfZQMLYg" association="_rd1swMEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rd1sw8EPEeiQaYZfZQMLYg" name="" memberEnd="_rd1sxMEPEeiQaYZfZQMLYg _rJUOQcEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rd1sxMEPEeiQaYZfZQMLYg" name="" type="_rJUOQMEPEeiQaYZfZQMLYg" association="_rd1sw8EPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rd2T0cEPEeiQaYZfZQMLYg" name="" memberEnd="_rd2T0sEPEeiQaYZfZQMLYg _rJWDccEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rd2T0sEPEeiQaYZfZQMLYg" name="" type="_rJVcYMEPEeiQaYZfZQMLYg" association="_rd2T0cEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rd264cEPEeiQaYZfZQMLYg" name="" memberEnd="_rd264sEPEeiQaYZfZQMLYg _rJWqgcEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rd264sEPEeiQaYZfZQMLYg" name="" type="_rJVcYMEPEeiQaYZfZQMLYg" association="_rd264cEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rd5XIsEPEeiQaYZfZQMLYg" name="" memberEnd="_rd5XI8EPEeiQaYZfZQMLYg _rcH1gMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rd5XI8EPEeiQaYZfZQMLYg" name="" type="_rIzQ4MEPEeiQaYZfZQMLYg" association="_rd5XIsEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reYfUcEPEeiQaYZfZQMLYg" name="" memberEnd="_reYfUsEPEeiQaYZfZQMLYg _rcIcksEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_reYfUsEPEeiQaYZfZQMLYg" name="" type="_rIzQ4MEPEeiQaYZfZQMLYg" association="_reYfUcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reZGYcEPEeiQaYZfZQMLYg" name="" memberEnd="_reZGYsEPEeiQaYZfZQMLYg _rcJDocEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_reZGYsEPEeiQaYZfZQMLYg" name="" type="_rIzQ4MEPEeiQaYZfZQMLYg" association="_reZGYcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reZtccEPEeiQaYZfZQMLYg" name="" memberEnd="_reZtcsEPEeiQaYZfZQMLYg _rcKRwMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_reZtcsEPEeiQaYZfZQMLYg" name="" type="_rIzQ4MEPEeiQaYZfZQMLYg" association="_reZtccEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reaUgcEPEeiQaYZfZQMLYg" name="" memberEnd="_reaUgsEPEeiQaYZfZQMLYg _rcK40cEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_reaUgsEPEeiQaYZfZQMLYg" name="" type="_rIzQ4MEPEeiQaYZfZQMLYg" association="_reaUgcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rea7kcEPEeiQaYZfZQMLYg" name="" memberEnd="_rea7ksEPEeiQaYZfZQMLYg _rcLf4sEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rea7ksEPEeiQaYZfZQMLYg" name="" type="_rIzQ4MEPEeiQaYZfZQMLYg" association="_rea7kcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rebiocEPEeiQaYZfZQMLYg" name="" memberEnd="_rebiosEPEeiQaYZfZQMLYg _rcMG8MEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rebiosEPEeiQaYZfZQMLYg" name="" type="_rIzQ4MEPEeiQaYZfZQMLYg" association="_rebiocEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_recwwMEPEeiQaYZfZQMLYg" name="" memberEnd="_recwwcEPEeiQaYZfZQMLYg _rcMuAMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_recwwcEPEeiQaYZfZQMLYg" name="" type="_rJEWoMEPEeiQaYZfZQMLYg" association="_recwwMEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_redX0cEPEeiQaYZfZQMLYg" name="" memberEnd="_redX0sEPEeiQaYZfZQMLYg _rcNVEcEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_redX0sEPEeiQaYZfZQMLYg" name="" type="_rJEWoMEPEeiQaYZfZQMLYg" association="_redX0cEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_red-4cEPEeiQaYZfZQMLYg" name="" memberEnd="_red-4sEPEeiQaYZfZQMLYg _rcOjMcEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_red-4sEPEeiQaYZfZQMLYg" name="" type="_rJEWoMEPEeiQaYZfZQMLYg" association="_red-4cEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_red-5MEPEeiQaYZfZQMLYg" name="" memberEnd="_red-5cEPEeiQaYZfZQMLYg _rcOjNMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_red-5cEPEeiQaYZfZQMLYg" name="" type="_rJEWoMEPEeiQaYZfZQMLYg" association="_red-5MEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reel8cEPEeiQaYZfZQMLYg" name="" memberEnd="_reel8sEPEeiQaYZfZQMLYg _rcPxUMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_reel8sEPEeiQaYZfZQMLYg" name="" type="_rJEWoMEPEeiQaYZfZQMLYg" association="_reel8cEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_refNAcEPEeiQaYZfZQMLYg" name="" memberEnd="_refNAsEPEeiQaYZfZQMLYg _rcQYYcEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_refNAsEPEeiQaYZfZQMLYg" name="" type="_rJEWoMEPEeiQaYZfZQMLYg" association="_refNAcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_ref0EMEPEeiQaYZfZQMLYg" name="" memberEnd="_ref0EcEPEeiQaYZfZQMLYg _rcQ_csEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_ref0EcEPEeiQaYZfZQMLYg" name="" type="_rJEWoMEPEeiQaYZfZQMLYg" association="_ref0EMEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_ref0E8EPEeiQaYZfZQMLYg" name="" memberEnd="_ref0FMEPEeiQaYZfZQMLYg _rcRmgMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_ref0FMEPEeiQaYZfZQMLYg" name="" type="_rJEWoMEPEeiQaYZfZQMLYg" association="_ref0E8EPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gSnFcMFGEei0Sok_Gsjhng" name="" memberEnd="_gSnFccFGEei0Sok_Gsjhng _gSZqEMFGEei0Sok_Gsjhng">
        <ownedEnd xmi:id="_gSnFccFGEei0Sok_Gsjhng" name="" type="_rIzQ4MEPEeiQaYZfZQMLYg" association="_gSnFcMFGEei0Sok_Gsjhng"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rFTQ8sEPEeiQaYZfZQMLYg" name="view">
      <packagedElement xmi:type="uml:Interface" xmi:id="_rMdB0MEPEeiQaYZfZQMLYg" name="IV2MControlAdapter">
        <ownedComment xmi:id="_rdj_-MEPEeiQaYZfZQMLYg">
          <body>Adapter that the view uses to communicate to the model for non-repetitive control tasks such as manipulating strategies.
@param &lt;TDropListItem> The type of the items put on the update strategy drop lists.
@param &lt;TPaintDropListItem> The type of the items put on the paint strategy drop lists.
@author Peter Dulworth (psd2)</body>
        </ownedComment>
        <ownedOperation xmi:id="_rMeP8MEPEeiQaYZfZQMLYg" name="addStrategy">
          <ownedComment xmi:id="_rdj_-cEPEeiQaYZfZQMLYg">
            <body>Take the given short strategy name and return a corresponding something to put onto both drop lists.
	 * @param className The shortened class name of the desired strategy.
	 * @return Something to put onto both the drop lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rMeP8cEPEeiQaYZfZQMLYg" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rb6aIcEPEeiQaYZfZQMLYg" type="_rb5zEMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rMe3AMEPEeiQaYZfZQMLYg" name="addPaintStrategy">
          <ownedComment xmi:id="_rdj_-sEPEeiQaYZfZQMLYg">
            <body>Converts a paint strategy's class name in the form of a string, into an object that can be placed onto the paint strategy drop list.
	 * @param className The text from the user's input (text field).
	 * @return An object to put onto the paint strategy drop list.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rMe3AcEPEeiQaYZfZQMLYg" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rb7BMcEPEeiQaYZfZQMLYg" type="_rb6aIsEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rMfeEMEPEeiQaYZfZQMLYg" name="clearBalls">
          <ownedComment xmi:id="_rdknAcEPEeiQaYZfZQMLYg">
            <body>This is the method the view will call to remove all the balls from the model.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_rb7BMsEPEeiQaYZfZQMLYg" name="makeBall">
          <ownedComment xmi:id="_rdj_-8EPEeiQaYZfZQMLYg">
            <body>Make a ball with the selected short update and paint strategy names.
	 * @param tDropListItem  A shorten class name for the desired strategy.
	 * @param tPaintDropListItem A shorten class name for the desired paint strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rb7BM8EPEeiQaYZfZQMLYg" name="tDropListItem" type="_rb5zEMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb7BNMEPEeiQaYZfZQMLYg" name="tPaintDropListItem" type="_rb6aIsEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb7oQMEPEeiQaYZfZQMLYg" name="combineStrategies">
          <ownedComment xmi:id="_rdj__MEPEeiQaYZfZQMLYg">
            <body>Return a new object to put on both lists, given two items from the lists.
	 * @param selectedItem1  An object from one drop list
	 * @param selectedItem2 An object from the other drop list
	 * @return An object to put back on both lists.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rb7oQcEPEeiQaYZfZQMLYg" name="selectedItem1" type="_rb5zEMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb7oQsEPEeiQaYZfZQMLYg" name="selectedItem2" type="_rb5zEMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb7oQ8EPEeiQaYZfZQMLYg" type="_rb5zEMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb8PUMEPEeiQaYZfZQMLYg" name="makeSwitcherBall">
          <ownedComment xmi:id="_rdj__cEPEeiQaYZfZQMLYg">
            <body>Make a switcher ball.
	 * @param selectedItem The selected paint strategy.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rb8PUcEPEeiQaYZfZQMLYg" name="selectedItem" type="_rb6aIsEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb8PUsEPEeiQaYZfZQMLYg" name="switchStrategy">
          <ownedComment xmi:id="_rdknAMEPEeiQaYZfZQMLYg">
            <body>Switch the strategy of the switcher balls to selectedItem.
	 * @param selectedItem An object from the top drop list to use as the new switcher decoree.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rb8PU8EPEeiQaYZfZQMLYg" name="selectedItem" type="_rb5zEMEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_rMhTQMEPEeiQaYZfZQMLYg" name="IV2MUpdateAdapter">
        <ownedComment xmi:id="_rdknAsEPEeiQaYZfZQMLYg">
          <body>Adapter that the view uses to communicate to the model for repetitive update tasks such as painting.
@author Peter Dulworth (psd2)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_rMh6UMEPEeiQaYZfZQMLYg" name="NULL" isLeaf="true" isStatic="true" type="_rMhTQMEPEeiQaYZfZQMLYg" isReadOnly="true" association="_rd3h8cEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rMh6UcEPEeiQaYZfZQMLYg" value="new IV2MUpdateAdapter() {&#xA;&#x9;&#x9;public void paint(Graphics g) {&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_rb82YMEPEeiQaYZfZQMLYg" name="paint">
          <ownedParameter xmi:id="_rb82YcEPEeiQaYZfZQMLYg" name="g" type="_rXyvIcEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_rMihYMEPEeiQaYZfZQMLYg" name="View">
        <ownedComment xmi:id="_rdknA8EPEeiQaYZfZQMLYg">
          <body>The View class is the specific instance/extension of the JFrame class
that we are using to create our desired GUI window.
@param &lt;TStrategyDropListItem> The type of the items put on the update strategy drop lists.
@param &lt;TPaintDropListItem> The type of the items put on the paint strategy drop lists.
@author Peter Dulworth (psd2)
@author Sophia Jefferson (sgj1)</body>
        </ownedComment>
        <generalization xmi:id="_rb_SocEPEeiQaYZfZQMLYg" general="_raO_IsEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc21UMEPEeiQaYZfZQMLYg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rc21UcEPEeiQaYZfZQMLYg" value="-3317320981608676115L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rc21UsEPEeiQaYZfZQMLYg" name="contentPane" visibility="private" type="_raPmMcEPEeiQaYZfZQMLYg" association="_rezWEcEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc3cYMEPEeiQaYZfZQMLYg" name="inputTF" visibility="private" type="_raQNQcEPEeiQaYZfZQMLYg" association="_rez9IcEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc3cYsEPEeiQaYZfZQMLYg" name="v2mControlAdapter" visibility="private" type="_rMdB0MEPEeiQaYZfZQMLYg" association="_re0kMcEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc4DcsEPEeiQaYZfZQMLYg" name="v2mUpdateAdapter" visibility="private" type="_rMhTQMEPEeiQaYZfZQMLYg" association="_re1LQcEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc4qgMEPEeiQaYZfZQMLYg" name="controlPnl" visibility="private" type="_raPmMcEPEeiQaYZfZQMLYg" association="_re1yUMEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc4qgsEPEeiQaYZfZQMLYg" name="canvasPnl" visibility="private" type="_raPmMcEPEeiQaYZfZQMLYg" association="_re2ZYcEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc4qhMEPEeiQaYZfZQMLYg" name="makeSwitcherBtn" visibility="private" type="_raNxAsEPEeiQaYZfZQMLYg" association="_re2ZZMEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc5RkcEPEeiQaYZfZQMLYg" name="dropListTop" visibility="private" type="_raO_IMEPEeiQaYZfZQMLYg" association="_re3AccEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc54ocEPEeiQaYZfZQMLYg" name="dropListBottom" visibility="private" type="_raO_IMEPEeiQaYZfZQMLYg" association="_re3ngcEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc6fsMEPEeiQaYZfZQMLYg" name="combineBtn" visibility="private" type="_raNxAsEPEeiQaYZfZQMLYg" association="_re4OkcEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc6fssEPEeiQaYZfZQMLYg" name="addBtn" visibility="private" type="_raNxAsEPEeiQaYZfZQMLYg" association="_re41ocEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc6ftMEPEeiQaYZfZQMLYg" name="switchBtn" visibility="private" type="_raNxAsEPEeiQaYZfZQMLYg" association="_re5csMEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc7GwcEPEeiQaYZfZQMLYg" name="inputPnl" visibility="private" type="_raPmMcEPEeiQaYZfZQMLYg" association="_re5cs8EPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc7Gw8EPEeiQaYZfZQMLYg" name="switcherPnl" visibility="private" type="_raPmMcEPEeiQaYZfZQMLYg" association="_re6DwcEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc7GxcEPEeiQaYZfZQMLYg" name="cbPanel" visibility="private" type="_raPmMcEPEeiQaYZfZQMLYg" association="_re6q0cEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc7t0cEPEeiQaYZfZQMLYg" name="paintPanel" visibility="private" type="_raPmMcEPEeiQaYZfZQMLYg" association="_re7R4cEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc8U4MEPEeiQaYZfZQMLYg" name="paintTF" visibility="private" type="_raQNQcEPEeiQaYZfZQMLYg" association="_re748cEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc8U4sEPEeiQaYZfZQMLYg" name="addPaintBtn" visibility="private" type="_raNxAsEPEeiQaYZfZQMLYg" association="_re749MEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rc8U5MEPEeiQaYZfZQMLYg" name="paintDropList" visibility="private" type="_raO_IMEPEeiQaYZfZQMLYg" association="_re8gAcEPEeiQaYZfZQMLYg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdYZwMEPEeiQaYZfZQMLYg" name="View" specification="_raT3oMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdYZwcEPEeiQaYZfZQMLYg" name="v2mControlAdapter" type="_rMdB0MEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdYZwsEPEeiQaYZfZQMLYg" name="v2mUpdateAdapter" type="_rMhTQMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdYZw8EPEeiQaYZfZQMLYg" type="_rMihYMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>this.v2mControlAdapter = v2mControlAdapter;
		this.v2mUpdateAdapter = v2mUpdateAdapter; // take the settings from the anonymous inner class you pass in the controller and apply them 
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdYZxMEPEeiQaYZfZQMLYg" name="initGUI" specification="_rMlksMEPEeiQaYZfZQMLYg">
          <language>java</language>
          <body>// Initialize the frame.
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 881, 450);
		contentPane = new JPanel();
		contentPane.setToolTipText(&quot;Panel holding the entirety of the tool.&quot;);
		contentPane.setBorder(new EmptyBorder(0, 0, 0, 0));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);

		// Create a special panel with an overridden paintComponent method.
		canvasPnl = new JPanel() {
			/**
			 * Quick Fix to suppress warning.
			 */
			private static final long serialVersionUID = 2142918265458861003L;

			Boolean init = false;

			/**
			* Overridden paintComponent method to paint a shape in the panel.
			* @param g The Graphics object to paint on.
			**/
			public void paintComponent(Graphics g) { // gets called every time pnlCenter.repaint() is called
				super.paintComponent(g); // Do everything normally done first, e.g. clear the screen.
				if (init) // don't paint the first time
					v2mUpdateAdapter.paint(g);
				init = true; // paint every other time
			}
		};
		canvasPnl.setBorder(null);

		canvasPnl.setName(&quot;Center Panel&quot;);
		canvasPnl.setToolTipText(&quot;Panel in which the balls appear.&quot;);
		contentPane.add(canvasPnl, BorderLayout.CENTER);

		// The north panel that contains the changeable text field and button.
		controlPnl = new JPanel();
		controlPnl.setToolTipText(&quot;Panel containing controls for the tool.&quot;);
		controlPnl.setBackground(new Color(0, 255, 127));
		contentPane.add(controlPnl, BorderLayout.NORTH);

		inputPnl = new JPanel();
		inputPnl.setBackground(Color.YELLOW);
		inputPnl.setToolTipText(&quot;Panel holding the text field and add-to-list button.&quot;);
		controlPnl.add(inputPnl);
		inputPnl.setLayout(new GridLayout(2, 1, 0, 0));

		// The text field that the user can change the label to.
		inputTF = new JTextField();
		inputPnl.add(inputTF);
		inputTF.setHorizontalAlignment(SwingConstants.CENTER);
		inputTF.setText(&quot;Kill&quot;);
		inputTF.setToolTipText(&quot;Name of strategy, XXX, from model.XXXStrategy&quot;);
		inputTF.setColumns(1);

		// Add to lists button
		addBtn = new JButton(&quot;Add to lists&quot;);
		addBtn.addActionListener((e) -> {
			TStrategyDropListItem stratFac = v2mControlAdapter.addStrategy(inputTF.getText());
			dropListTop.addItem(stratFac);
			dropListBottom.addItem(stratFac);
		});
		inputPnl.add(addBtn);
		addBtn.setToolTipText(&quot;Add strategy to both droplists. The rest of the classname is automatically added.&quot;);

		// The button that the user can press to clear all the balls from the screen.
		JButton clearAllBtn = new JButton(&quot;ClearAll&quot;);
		clearAllBtn.setToolTipText(&quot;Clears all balls from the screen.&quot;);
		clearAllBtn.addActionListener((e) -> {
			v2mControlAdapter.clearBalls();
		});

		cbPanel = new JPanel();
		cbPanel.setBorder(new LineBorder(Color.CYAN, 3));
		cbPanel.setToolTipText(&quot;Panel for making balls of selected type and/or for making combined strategy balls. &quot;);
		controlPnl.add(cbPanel);
		cbPanel.setLayout(new GridLayout(4, 1, 0, 0));

		// The button that the user can press to create a new ball.
		JButton makeSelectedBtn = new JButton(&quot;Make Selected Ball&quot;);
		cbPanel.add(makeSelectedBtn);
		makeSelectedBtn.setToolTipText(&quot;Instantiate a Ball with the strategy selected in the upper droplist.&quot;);
		makeSelectedBtn.addActionListener((e) -> {
			v2mControlAdapter.makeBall(dropListTop.getItemAt(dropListTop.getSelectedIndex()),
					paintDropList.getItemAt(paintDropList.getSelectedIndex()));
		});

		dropListTop = new JComboBox&lt;TStrategyDropListItem>();
		dropListTop.setToolTipText(&quot;Upper drop down list containing all added balls/strategies&quot;);
		cbPanel.add(dropListTop);
		dropListTop.setAlignmentY(Component.TOP_ALIGNMENT);
		dropListTop.setAlignmentX(Component.LEFT_ALIGNMENT);

		dropListBottom = new JComboBox&lt;TStrategyDropListItem>();
		dropListBottom.setToolTipText(&quot;Lower drop down list containing all added balls/strategies&quot;);
		cbPanel.add(dropListBottom);
		dropListBottom.setAlignmentX(Component.LEFT_ALIGNMENT);
		dropListBottom.setAlignmentY(Component.TOP_ALIGNMENT);

		combineBtn = new JButton(&quot;Combine!&quot;);
		combineBtn.addActionListener((e) -> {
			TStrategyDropListItem combinedStratFac = v2mControlAdapter.combineStrategies(
					dropListTop.getItemAt(dropListTop.getSelectedIndex()),
					dropListBottom.getItemAt(dropListBottom.getSelectedIndex()));
			dropListTop.addItem(combinedStratFac);
			dropListBottom.addItem(combinedStratFac);
		});
		cbPanel.add(combineBtn);
		combineBtn.setMaximumSize(new Dimension(159, 29));
		combineBtn.setToolTipText(
				&quot;Combine the selected strategies from both droplists into a single strategy that is added to both droplists.&quot;);
		combineBtn.setAlignmentY(Component.TOP_ALIGNMENT);

		switcherPnl = new JPanel();
		switcherPnl.setBorder(
				new TitledBorder(null, &quot;Switcher Controls&quot;, TitledBorder.CENTER, TitledBorder.TOP, null, null));
		switcherPnl.setToolTipText(&quot;Panel related to Switcher balls.&quot;);
		controlPnl.add(switcherPnl);
		switcherPnl.setLayout(new GridLayout(2, 1, 0, 0));

		makeSwitcherBtn = new JButton(&quot;Make Switcher&quot;);
		makeSwitcherBtn.addActionListener((e) -> {
			v2mControlAdapter.makeSwitcherBall(paintDropList.getItemAt(paintDropList.getSelectedIndex()));
		});
		switcherPnl.add(makeSwitcherBtn);
		makeSwitcherBtn.setToolTipText(&quot;Instantiate a Ball that can switch strategies.&quot;);
		makeSwitcherBtn.setAlignmentY(Component.TOP_ALIGNMENT);

		switchBtn = new JButton(&quot;Switch!&quot;);
		switchBtn.addActionListener((e) -> {
			v2mControlAdapter.switchStrategy(dropListTop.getItemAt(dropListTop.getSelectedIndex()));
		});
		switcherPnl.add(switchBtn);
		switchBtn.setToolTipText(
				&quot;Switch the strategy on all switcher balls to the currently selected strategy in the upper droplist.&quot;);
		switchBtn.setMaximumSize(new Dimension(134, 29));
		switchBtn.setMinimumSize(new Dimension(134, 29));
		switchBtn.setAlignmentY(0.0f);
		controlPnl.add(clearAllBtn);

		paintPanel = new JPanel();
		paintPanel.setBorder(new TitledBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null), &quot;Paint Strategies&quot;,
				TitledBorder.CENTER, TitledBorder.TOP, null, new Color(0, 0, 0)));
		paintPanel.setToolTipText(&quot;Control panel for paint strategies.&quot;);
		controlPnl.add(paintPanel);
		paintPanel.setLayout(new GridLayout(3, 1, 0, 0));

		paintTF = new JTextField();
		paintTF.setText(&quot;Ball&quot;);
		paintTF.setToolTipText(&quot;Text field for paint strategy to use.&quot;);
		paintPanel.add(paintTF);
		paintTF.setColumns(10);

		addPaintBtn = new JButton(&quot;Add&quot;);
		addPaintBtn.setToolTipText(&quot;Button to add specified paint strategy to dropdown.&quot;);
		addPaintBtn.addActionListener((e) -> {
			TPaintDropListItem paintStrat = v2mControlAdapter.addPaintStrategy(paintTF.getText());
			paintDropList.addItem(paintStrat);
		});
		paintPanel.add(addPaintBtn);

		paintDropList = new JComboBox&lt;TPaintDropListItem>();
		paintDropList.setToolTipText(&quot;Dropdown containing added paint strategies.&quot;);
		paintPanel.add(paintDropList);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdYZxcEPEeiQaYZfZQMLYg" name="getPanelHeight" specification="_rMlkscEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdYZxsEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <language>java</language>
          <body>return canvasPnl.getHeight();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdYZx8EPEeiQaYZfZQMLYg" name="getPanelWidth" specification="_rMmLwcEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdYZyMEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <language>java</language>
          <body>return canvasPnl.getWidth();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdYZycEPEeiQaYZfZQMLYg" name="update" specification="_rMmLw8EPEeiQaYZfZQMLYg">
          <language>java</language>
          <body>canvasPnl.repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdYZysEPEeiQaYZfZQMLYg" name="getComponent" specification="_rMmy0MEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdYZy8EPEeiQaYZfZQMLYg" type="_rXxhAMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>return canvasPnl;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdYZzMEPEeiQaYZfZQMLYg" name="start" specification="_rMmy0cEPEeiQaYZfZQMLYg">
          <language>java</language>
          <body>setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_rMlksMEPEeiQaYZfZQMLYg" name="initGUI" visibility="private" method="_rdYZxMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdknBcEPEeiQaYZfZQMLYg">
            <body>Method that initializes the GUI window and its components (created 
	 * through WindowBuilder). Paints shapes based on the button and has 
	 * a text field that can be toggled with a button.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_rMlkscEPEeiQaYZfZQMLYg" name="getPanelHeight" method="_rdYZxcEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdknBsEPEeiQaYZfZQMLYg">
            <body>@return The height of the center panel.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rMmLwMEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rMmLwcEPEeiQaYZfZQMLYg" name="getPanelWidth" method="_rdYZx8EPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdknB8EPEeiQaYZfZQMLYg">
            <body>@return the width of the center panel.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rMmLwsEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rMmLw8EPEeiQaYZfZQMLYg" name="update" method="_rdYZycEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdknCMEPEeiQaYZfZQMLYg">
            <body>This method repaints the center panel.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_rMmy0MEPEeiQaYZfZQMLYg" name="getComponent" method="_rdYZysEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdknCcEPEeiQaYZfZQMLYg">
            <body>@return Returns the center panel.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rb_SoMEPEeiQaYZfZQMLYg" type="_rXxhAMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rMmy0cEPEeiQaYZfZQMLYg" name="start" method="_rdYZzMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdknCsEPEeiQaYZfZQMLYg">
            <body>Starts the already initialized frame, making it visible 
	 * and ready to interact with the user.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_raT3oMEPEeiQaYZfZQMLYg" name="View" method="_rdYZwMEPEeiQaYZfZQMLYg">
          <eAnnotations xmi:id="_raUescEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_raUessEPEeiQaYZfZQMLYg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_rdknBMEPEeiQaYZfZQMLYg">
            <body>Constructor that creates/initializes the frame.
	 * @param v2mControlAdapter adapter from the view to the mode that handles control.
	 * @param v2mUpdateAdapter adapter from the view to the model that handles updating.</body>
          </ownedComment>
          <ownedParameter xmi:id="_raT3ocEPEeiQaYZfZQMLYg" name="v2mControlAdapter" type="_rMdB0MEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_raUesMEPEeiQaYZfZQMLYg" name="v2mUpdateAdapter" type="_rMhTQMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_raUes8EPEeiQaYZfZQMLYg" type="_rMihYMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_rb5zEMEPEeiQaYZfZQMLYg" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rb6aIsEPEeiQaYZfZQMLYg" name="TPaintDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_rd3h8cEPEeiQaYZfZQMLYg" name="" memberEnd="_rd3h8sEPEeiQaYZfZQMLYg _rMh6UMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rd3h8sEPEeiQaYZfZQMLYg" name="" type="_rMhTQMEPEeiQaYZfZQMLYg" association="_rd3h8cEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rezWEcEPEeiQaYZfZQMLYg" name="" memberEnd="_rezWEsEPEeiQaYZfZQMLYg _rc21UsEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rezWEsEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_rezWEcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rez9IcEPEeiQaYZfZQMLYg" name="" memberEnd="_rez9IsEPEeiQaYZfZQMLYg _rc3cYMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rez9IsEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_rez9IcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re0kMcEPEeiQaYZfZQMLYg" name="" memberEnd="_re0kMsEPEeiQaYZfZQMLYg _rc3cYsEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re0kMsEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re0kMcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re1LQcEPEeiQaYZfZQMLYg" name="" memberEnd="_re1LQsEPEeiQaYZfZQMLYg _rc4DcsEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re1LQsEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re1LQcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re1yUMEPEeiQaYZfZQMLYg" name="" memberEnd="_re1yUcEPEeiQaYZfZQMLYg _rc4qgMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re1yUcEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re1yUMEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re2ZYcEPEeiQaYZfZQMLYg" name="" memberEnd="_re2ZYsEPEeiQaYZfZQMLYg _rc4qgsEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re2ZYsEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re2ZYcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re2ZZMEPEeiQaYZfZQMLYg" name="" memberEnd="_re2ZZcEPEeiQaYZfZQMLYg _rc4qhMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re2ZZcEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re2ZZMEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re3AccEPEeiQaYZfZQMLYg" name="" memberEnd="_re3AcsEPEeiQaYZfZQMLYg _rc5RkcEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re3AcsEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re3AccEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re3ngcEPEeiQaYZfZQMLYg" name="" memberEnd="_re3ngsEPEeiQaYZfZQMLYg _rc54ocEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re3ngsEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re3ngcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re4OkcEPEeiQaYZfZQMLYg" name="" memberEnd="_re4OksEPEeiQaYZfZQMLYg _rc6fsMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re4OksEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re4OkcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re41ocEPEeiQaYZfZQMLYg" name="" memberEnd="_re41osEPEeiQaYZfZQMLYg _rc6fssEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re41osEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re41ocEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re5csMEPEeiQaYZfZQMLYg" name="" memberEnd="_re5cscEPEeiQaYZfZQMLYg _rc6ftMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re5cscEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re5csMEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re5cs8EPEeiQaYZfZQMLYg" name="" memberEnd="_re5ctMEPEeiQaYZfZQMLYg _rc7GwcEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re5ctMEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re5cs8EPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re6DwcEPEeiQaYZfZQMLYg" name="" memberEnd="_re6DwsEPEeiQaYZfZQMLYg _rc7Gw8EPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re6DwsEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re6DwcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re6q0cEPEeiQaYZfZQMLYg" name="" memberEnd="_re6q0sEPEeiQaYZfZQMLYg _rc7GxcEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re6q0sEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re6q0cEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re7R4cEPEeiQaYZfZQMLYg" name="" memberEnd="_re7R4sEPEeiQaYZfZQMLYg _rc7t0cEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re7R4sEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re7R4cEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re748cEPEeiQaYZfZQMLYg" name="" memberEnd="_re748sEPEeiQaYZfZQMLYg _rc8U4MEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re748sEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re748cEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re749MEPEeiQaYZfZQMLYg" name="" memberEnd="_re749cEPEeiQaYZfZQMLYg _rc8U4sEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re749cEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re749MEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_re8gAcEPEeiQaYZfZQMLYg" name="" memberEnd="_re8gAsEPEeiQaYZfZQMLYg _rc8U5MEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_re8gAsEPEeiQaYZfZQMLYg" name="" type="_rMihYMEPEeiQaYZfZQMLYg" association="_re8gAcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rFUfEMEPEeiQaYZfZQMLYg" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_rIwNkMEPEeiQaYZfZQMLYg" name="Controller">
        <ownedComment xmi:id="_rda2AMEPEeiQaYZfZQMLYg">
          <body>This class contains the main method. Its job is to instantiate the model and view and to start them.
@author Peter Dulworth (psd2), Sophia Jefferson (sgj1)</body>
        </ownedComment>
        <ownedAttribute xmi:id="_rcGAUMEPEeiQaYZfZQMLYg" name="view" visibility="private" type="_rMihYMEPEeiQaYZfZQMLYg" association="_rd4JAcEPEeiQaYZfZQMLYg"/>
        <ownedAttribute xmi:id="_rcGnYsEPEeiQaYZfZQMLYg" name="model" visibility="private" type="_rJEWoMEPEeiQaYZfZQMLYg" association="_rd4wEcEPEeiQaYZfZQMLYg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rc__QMEPEeiQaYZfZQMLYg" name="Controller" specification="_rIxbsMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rc__QcEPEeiQaYZfZQMLYg" type="_rIwNkMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>// instantiate model
		model = new BallModel(new IM2VAdapter() {
			@Override
			public void update() {
				view.update();
			}

			@Override
			public Integer getPnlHeight() {
				return view.getPanelHeight();
			};

			@Override
			public Integer getPnlWidth() {
				return view.getPanelWidth();
			};

			@Override
			public Component getComponent() {
				return view.getComponent();
			}
		});

		// instantiate view
		view = new View&lt;IUpdateStrategyFac&lt;IBallCmd>, IPaintStrategyFac>(new IV2MControlAdapter&lt;IUpdateStrategyFac&lt;IBallCmd>, IPaintStrategyFac>() {
			@Override
			public void clearBalls() {
				model.clearBalls();
			};

			@Override
			/**
			 * Returns an IUpdateStrategyFac that can instantiate the strategy specified
			 * by className. Returns null if className is null. The toString() of
			 * the returned factory is the className.
			 * @param classname  Shortened name of desired strategy 
			 * @return A factory to make that strategy
			 */
			public IUpdateStrategyFac&lt;IBallCmd> addStrategy(String className) {
				return model.makeUpdateStrategyFac(className);
			}

			@Override
			/**
			 * Add a ball to the system with a strategy as given by the given IUpdateStrategyFac
			 * @param selectedItem The fully qualified name of the desired strategy.
			 */
			public void makeBall(IUpdateStrategyFac&lt;IBallCmd> updateStratFac, IPaintStrategyFac paintStratFac) {
				if (null != updateStratFac &amp;&amp; null != paintStratFac) {
					model.makeBall(updateStratFac.make(), paintStratFac.make()); // Here, loadBall takes a strategy object, but your method may take the strategy factory instead.
				}
			}

			@Override
			/**
			 * Returns an IUpdateStrategyFac that can instantiate a MultiStrategy with the
			 * two strategies made by the two given IUpdateStrategyFac objects. Returns
			 * null if either supplied factory is null. The toString() of the
			 * returned factory is the toString()'s of the two given factories,
			 * concatenated with &quot;-&quot;.             * 
			 * @param selectedItem1 An IUpdateStrategyFac for a strategy
			 * @param selectedItem2 An IUpdateStrategyFac for a strategy
			 * @return An IUpdateStrategyFac for the composition of the two strategies
			 */
			public IUpdateStrategyFac&lt;IBallCmd> combineStrategies(IUpdateStrategyFac&lt;IBallCmd> selectedItem1, IUpdateStrategyFac&lt;IBallCmd> selectedItem2) {
				return model.combineStrategyFacs(selectedItem1, selectedItem2);
			}

			@Override
			public void makeSwitcherBall(IPaintStrategyFac paintStratFac) {
				model.makeBall(model.getSwitcherStrategy(), paintStratFac.make()); // Here, loadBall takes a strategy object, but your method may take the strategy factory instead.
			}

			@Override
			public void switchStrategy(IUpdateStrategyFac&lt;IBallCmd> selectedItem) {
				model.switchSwitcherStrategy(selectedItem.make());

			}

			@Override
			public IPaintStrategyFac addPaintStrategy(String className) {
				return model.makePaintStrategyFac(className);
			}

		}, new IV2MUpdateAdapter() {

			@Override
			public void paint(Graphics g) {
				model.update(g);
			}

		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdAmUMEPEeiQaYZfZQMLYg" name="start" specification="_rIyCw8EPEeiQaYZfZQMLYg">
          <language>java</language>
          <body>view.start();
		model.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdAmUcEPEeiQaYZfZQMLYg" name="main" specification="_rIyp0MEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdAmUsEPEeiQaYZfZQMLYg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdAmU8EPEeiQaYZfZQMLYg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(() -> {
			try {
				(new Controller()).start();
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_rIxbsMEPEeiQaYZfZQMLYg" name="Controller" method="_rc__QMEPEeiQaYZfZQMLYg">
          <eAnnotations xmi:id="_rIyCwMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_rIyCwcEPEeiQaYZfZQMLYg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_rdbdEMEPEeiQaYZfZQMLYg">
            <body>Constructor that builds the system by instantiating the model and the view.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rIyCwsEPEeiQaYZfZQMLYg" type="_rIwNkMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rIyCw8EPEeiQaYZfZQMLYg" name="start" method="_rdAmUMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdbdEcEPEeiQaYZfZQMLYg">
            <body>Start the system.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_rIyp0MEPEeiQaYZfZQMLYg" name="main" isStatic="true" method="_rdAmUcEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdbdEsEPEeiQaYZfZQMLYg">
            <body>This is the main entry point for the system. Executing this will instantiate 
	 * the controller then start the controller.
	 * 
	 * @param args No arguments are used at this time.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rIyp0cEPEeiQaYZfZQMLYg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rIyp0sEPEeiQaYZfZQMLYg" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rd4JAcEPEeiQaYZfZQMLYg" name="" memberEnd="_rd4JAsEPEeiQaYZfZQMLYg _rcGAUMEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rd4JAsEPEeiQaYZfZQMLYg" name="" type="_rIwNkMEPEeiQaYZfZQMLYg" association="_rd4JAcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_rd4wEcEPEeiQaYZfZQMLYg" name="" memberEnd="_rd5XIMEPEeiQaYZfZQMLYg _rcGnYsEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_rd5XIMEPEeiQaYZfZQMLYg" name="" type="_rIwNkMEPEeiQaYZfZQMLYg" association="_rd4wEcEPEeiQaYZfZQMLYg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rFVGIMEPEeiQaYZfZQMLYg" name="provided">
      <packagedElement xmi:type="uml:Package" xmi:id="_rFVtMMEPEeiQaYZfZQMLYg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_rFVtMcEPEeiQaYZfZQMLYg" name="dispatcher">
          <packagedElement xmi:type="uml:Package" xmi:id="_rFh6c8EPEeiQaYZfZQMLYg" name="impl">
            <packagedElement xmi:type="uml:Class" xmi:id="_rLqXoMEPEeiQaYZfZQMLYg" name="ADispatcher" isAbstract="true">
              <ownedComment xmi:id="_rdiKw8EPEeiQaYZfZQMLYg">
                <body>Mid-level abstraction of a dispatcher that establishes the ability to hold and manage&#xD;
observers in a thread-safe manner.&#xD;
@author swong&#xD;
 *&#xD;
@param &lt;TMsg>  The type of messages that will be sent out to the observers.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rctEUMEPEeiQaYZfZQMLYg" name="comparator" visibility="private" type="_rZ95YMEPEeiQaYZfZQMLYg" association="_rewSwcEPEeiQaYZfZQMLYg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rctrYcEPEeiQaYZfZQMLYg" value="new Comparator&lt;IObserver&lt;TMsg>>() {&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public int compare(IObserver&lt;TMsg> o1, IObserver&lt;TMsg> o2) {&#xD;&#xA;&#x9;&#x9;&#x9;if (o1.equals(o2)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return 0;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (o1.hashCode() &lt;= o2.hashCode()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return +1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rctrY8EPEeiQaYZfZQMLYg" name="observers" visibility="private" type="_rZ-gccEPEeiQaYZfZQMLYg" association="_rew50cEPEeiQaYZfZQMLYg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcuSccEPEeiQaYZfZQMLYg" value="new ConcurrentSkipListSet&lt;IObserver&lt;TMsg>>(comparator)"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_rZ-gc8EPEeiQaYZfZQMLYg" client="_rLqXoMEPEeiQaYZfZQMLYg" supplier="_rLmGMMEPEeiQaYZfZQMLYg" contract="_rLmGMMEPEeiQaYZfZQMLYg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdThQ8EPEeiQaYZfZQMLYg" name="getObserverSet" specification="_rLq-scEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdThRMEPEeiQaYZfZQMLYg" type="_rLpwkMEPEeiQaYZfZQMLYg" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdThRcEPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return observers;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdThRsEPEeiQaYZfZQMLYg" name="addObserver" specification="_rZ_HgcEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdThR8EPEeiQaYZfZQMLYg" name="obs" type="_rLpwkMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rdThSMEPEeiQaYZfZQMLYg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return observers.add(obs);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdUIUMEPEeiQaYZfZQMLYg" name="removeObserver" specification="_raAVocEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdUIUcEPEeiQaYZfZQMLYg" name="obs" type="_rLpwkMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rdUIUsEPEeiQaYZfZQMLYg" type="_rLpwkMEPEeiQaYZfZQMLYg" direction="return"/>
                <language>java</language>
                <body>IObserver&lt;TMsg> foundObs = null; // in case obs is not in the collection.&#xD;
		// Note that equality does not guarantee that two objects are identically the same entity, &#xD;
		// so must retrieve the actual entity in the collection.&#xD;
		if (observers.contains(obs)) { // make sure it is in the collection &#xD;
			foundObs = observers.floor(obs); // returns the desired obs only because we already know that it is in the collection.&#xD;
			observers.remove(obs); // remove it from the collection&#xD;
		}&#xD;
		return foundObs;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdUIU8EPEeiQaYZfZQMLYg" name="getAllObservers" specification="_rLsM0MEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdUIVMEPEeiQaYZfZQMLYg" type="_rLpwkMEPEeiQaYZfZQMLYg" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdUIVcEPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return observers.clone();&#xD;
		//		return new CopyOnWriteArraySet&lt;IObserver&lt;TMsg>>(observers);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdUIVsEPEeiQaYZfZQMLYg" name="removeAllObservers" specification="_rLta88EPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdUIV8EPEeiQaYZfZQMLYg" type="_rLpwkMEPEeiQaYZfZQMLYg" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdUIWMEPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>Set&lt;IObserver&lt;TMsg>> original_set = this.getAllObservers();&#xD;
		observers.clear();&#xD;
		return original_set;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rLq-scEPEeiQaYZfZQMLYg" name="getObserverSet" visibility="protected" method="_rdThQ8EPEeiQaYZfZQMLYg">
                <ownedComment xmi:id="_rdiKxMEPEeiQaYZfZQMLYg">
                  <body>Protected method to allow implementing subclasses access to the set of observers.&#xD;
	 * The actual set of observers is returned and is thus mutable.&#xD;
	 * @return The set of observers currently in use.  This is NOT a copy.</body>
                </ownedComment>
                <ownedParameter xmi:id="_rLrlwMEPEeiQaYZfZQMLYg" type="_rLpwkMEPEeiQaYZfZQMLYg" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rLrlwcEPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rLsM0MEPEeiQaYZfZQMLYg" name="getAllObservers" method="_rdUIU8EPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rLsz4MEPEeiQaYZfZQMLYg" type="_rLpwkMEPEeiQaYZfZQMLYg" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rLsz4cEPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rLta88EPEeiQaYZfZQMLYg" name="removeAllObservers" method="_rdUIVsEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rLuCAMEPEeiQaYZfZQMLYg" type="_rLpwkMEPEeiQaYZfZQMLYg" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rLuCAcEPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rZ_HgcEPEeiQaYZfZQMLYg" name="addObserver" method="_rdThRsEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rZ_HgsEPEeiQaYZfZQMLYg" name="obs" type="_rLpwkMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rZ_ukMEPEeiQaYZfZQMLYg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_raAVocEPEeiQaYZfZQMLYg" name="removeObserver" method="_rdUIUMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_raAVosEPEeiQaYZfZQMLYg" name="obs" type="_rLpwkMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_raAVpMEPEeiQaYZfZQMLYg" type="_rLpwkMEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_rLxFUMEPEeiQaYZfZQMLYg" name="ParallelDispatcher">
              <ownedComment xmi:id="_rdiKxcEPEeiQaYZfZQMLYg">
                <body>A dispatcher that updates its observers in parallel if possible on multiple threads.&#xD;
@author swong&#xD;
 *&#xD;
@param &lt;TMsg>  The type of message being sent to the observers.</body>
              </ownedComment>
              <generalization xmi:id="_raBjwMEPEeiQaYZfZQMLYg" general="_rLqXoMEPEeiQaYZfZQMLYg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdUvYMEPEeiQaYZfZQMLYg" name="updateAll" specification="_rbXnkcEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdUvYcEPEeiQaYZfZQMLYg" name="msg" type="_rbXAgMEPEeiQaYZfZQMLYg"/>
                <language>java</language>
                <body>this.getObserverSet().parallelStream().forEach((obs) -> obs.update(this, msg));&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rbXnkcEPEeiQaYZfZQMLYg" name="updateAll" method="_rdUvYMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rbXnksEPEeiQaYZfZQMLYg" name="msg" type="_rbXAgMEPEeiQaYZfZQMLYg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_rLxsYMEPEeiQaYZfZQMLYg" name="SequentialDispatcher">
              <ownedComment xmi:id="_rdiKxsEPEeiQaYZfZQMLYg">
                <body>A simple dispatcher that updates its observers sequentially on a single thread.&#xD;
@author swong&#xD;
 *&#xD;
@param &lt;TMsg>  The type of message being sent to the observers.</body>
              </ownedComment>
              <generalization xmi:id="_raCK0cEPEeiQaYZfZQMLYg" general="_rLqXoMEPEeiQaYZfZQMLYg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdUvYsEPEeiQaYZfZQMLYg" name="updateAll" specification="_rbY1sMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdUvY8EPEeiQaYZfZQMLYg" name="msg" type="_rbXAgMEPEeiQaYZfZQMLYg"/>
                <language>java</language>
                <body>this.getObserverSet().forEach((obs) -> obs.update(this, msg));&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rbY1sMEPEeiQaYZfZQMLYg" name="updateAll" method="_rdUvYsEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rbY1scEPEeiQaYZfZQMLYg" name="msg" type="_rbXAgMEPEeiQaYZfZQMLYg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_rbXAgMEPEeiQaYZfZQMLYg" name="TMsg"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_rewSwcEPEeiQaYZfZQMLYg" name="" memberEnd="_rewSwsEPEeiQaYZfZQMLYg _rctEUMEPEeiQaYZfZQMLYg">
              <ownedEnd xmi:id="_rewSwsEPEeiQaYZfZQMLYg" name="" type="_rLqXoMEPEeiQaYZfZQMLYg" association="_rewSwcEPEeiQaYZfZQMLYg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rew50cEPEeiQaYZfZQMLYg" name="" memberEnd="_rew50sEPEeiQaYZfZQMLYg _rctrY8EPEeiQaYZfZQMLYg">
              <ownedEnd xmi:id="_rew50sEPEeiQaYZfZQMLYg" name="" type="_rLqXoMEPEeiQaYZfZQMLYg" association="_rew50cEPEeiQaYZfZQMLYg"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_rLmGMMEPEeiQaYZfZQMLYg" name="IDispatcher">
            <ownedComment xmi:id="_rdhjt8EPEeiQaYZfZQMLYg">
              <body>Top-level abstraction of a Dispatcher which is the Observable in the &#xD;
Observer-Observable Design Pattern without the requirement to set the state &#xD;
before sending a message to the observers.&#xD;
&#xD;
A Dispatcher sends IMsg-type messages to all its observers which therefore must &#xD;
be capable of receiving and processing those messages, i.e. are IObserver&amp;lt;TMSg&amp;gt;.&#xD;
 *&#xD;
To maximally decouple an application from the randomizer's implementation any variable representing a randomizer&#xD;
should be typed to this interface, not to any concrete implementation.  For example:&#xD;
IDispatcher&amp;lt;Graphics&amp;gt; myDispatcher = new SequentialDispatcher&amp;lt;Graphics&amp;gt;() &#xD;
&#xD;
@author swong&#xD;
 *&#xD;
@param &lt;TMsg>   The type of message to send to all the observers.</body>
            </ownedComment>
            <ownedAttribute xmi:id="_rLnUUMEPEeiQaYZfZQMLYg" name="allObservers" type="_rLpwkMEPEeiQaYZfZQMLYg" association="_rdhjusEPEeiQaYZfZQMLYg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rLn7YcEPEeiQaYZfZQMLYg" value="*"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_rLn7YsEPEeiQaYZfZQMLYg" name="removeAllObservers">
              <ownedComment xmi:id="_rdiKwMEPEeiQaYZfZQMLYg">
                <body>Removes all the observers currently in the dispatcher&#xD;
	 * @return A COPY of the set of IObservers in the dispatcher before they were all removed.</body>
              </ownedComment>
              <ownedParameter xmi:id="_rLn7Y8EPEeiQaYZfZQMLYg" type="_rLpwkMEPEeiQaYZfZQMLYg" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rLn7ZMEPEeiQaYZfZQMLYg" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_rZ7dIcEPEeiQaYZfZQMLYg" name="addObserver">
              <ownedComment xmi:id="_rdhjuMEPEeiQaYZfZQMLYg">
                <body>Add an observer to the dispatcher.   If the observer is already in the dispatcher, &#xD;
	 * as determined by the comparison (equals()) process, the dispatcher is NOT mutated and false is returned. &#xD;
	 * @param obs  The IObserver to add&#xD;
	 * @return true if the given observer was not already in the dispatcher, false otherwise.&#xD;
	 * @throws ClassCastException If the observer cannot be properly compared against the existing observers&#xD;
	 * @throws NullPointerException If the supplied value is null</body>
              </ownedComment>
              <ownedParameter xmi:id="_rZ7dIsEPEeiQaYZfZQMLYg" name="obs" type="_rLpwkMEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rZ7dI8EPEeiQaYZfZQMLYg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_rZ8EMcEPEeiQaYZfZQMLYg" name="removeObserver">
              <ownedComment xmi:id="_rdhjucEPEeiQaYZfZQMLYg">
                <body>Remove an observer from the dispatcher.   The dispatcher does not make any &#xD;
	 * assumptions that the observer being removed is identically the same object as &#xD;
	 * that it was requested to remove via the input parameter.  The returned object &#xD;
	 * is the object that was internally held by the dispatcher.&#xD;
	 * @param obs  The IObserver to add&#xD;
	 * @return The observer that was removed or null if it was not found.</body>
              </ownedComment>
              <ownedParameter xmi:id="_rZ8EMsEPEeiQaYZfZQMLYg" name="obs" type="_rLpwkMEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rZ8rQcEPEeiQaYZfZQMLYg" type="_rLpwkMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbUkQcEPEeiQaYZfZQMLYg" name="updateAll">
              <ownedComment xmi:id="_rdiKwcEPEeiQaYZfZQMLYg">
                <body>Send the given message to all the observers in the dispatcher &#xD;
	 * @param msg   The IMsg to send to all the observers</body>
              </ownedComment>
              <ownedParameter xmi:id="_rbUkQsEPEeiQaYZfZQMLYg" name="msg" type="_rbT9MMEPEeiQaYZfZQMLYg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_rLpwkMEPEeiQaYZfZQMLYg" name="IObserver">
            <ownedComment xmi:id="_rdiKwsEPEeiQaYZfZQMLYg">
              <body>Top-level abstraction of the Observer in the Observer-Observable Design Pattern.&#xD;
An IObserver receives TMsg-type messages from its associated, matched Observable, &#xD;
an IDispatcher&amp;lt;TMsg&amp;gt;. &#xD;
@author swong&#xD;
 *&#xD;
@param &lt;TMsg>  The type of message this observer is capable of receiving and processing.</body>
            </ownedComment>
            <ownedOperation xmi:id="_rbVLUMEPEeiQaYZfZQMLYg" name="update">
              <ownedParameter xmi:id="_rbVLUcEPEeiQaYZfZQMLYg" name="disp" type="_rLmGMMEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbVLUsEPEeiQaYZfZQMLYg" name="msg" type="_rbT9MMEPEeiQaYZfZQMLYg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rbT9MMEPEeiQaYZfZQMLYg" name="TMsg"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_rdhjusEPEeiQaYZfZQMLYg" name="" memberEnd="_rLnUUMEPEeiQaYZfZQMLYg _rdhju8EPEeiQaYZfZQMLYg">
            <ownedEnd xmi:id="_rdhju8EPEeiQaYZfZQMLYg" name="" type="_rLmGMMEPEeiQaYZfZQMLYg" association="_rdhjusEPEeiQaYZfZQMLYg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_rFh6dMEPEeiQaYZfZQMLYg" name="loader">
          <packagedElement xmi:type="uml:Package" xmi:id="_rFh6dcEPEeiQaYZfZQMLYg" name="impl">
            <packagedElement xmi:type="uml:Class" xmi:id="_rL0IoMEPEeiQaYZfZQMLYg" name="ObjectLoader">
              <ownedComment xmi:id="_rdiKyMEPEeiQaYZfZQMLYg">
                <body>Factory that dynamically class loads and instantiates an object of type ReturnT&#xD;
@author Stephen Wong&#xD;
 *&#xD;
@param &lt;ReturnT>  The type of object to be created.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rcvgkMEPEeiQaYZfZQMLYg" name="primitiveTypes" visibility="private" type="_rbe8UMEPEeiQaYZfZQMLYg" association="_rexg4cEPEeiQaYZfZQMLYg">
                <qualifier xmi:id="_rcwus8EPEeiQaYZfZQMLYg" type="_rcwuscEPEeiQaYZfZQMLYg"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rcwHocEPEeiQaYZfZQMLYg" value="new HashMap&lt;Class&lt;?>, Class&lt;?>>() {&#xD;&#xA;&#x9;&#x9;private static final long serialVersionUID = 582688125217694628L;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;// Manually load the map with the primitive types and their wrapper classes&#xD;&#xA;&#x9;&#x9;&#x9;Class&lt;?>[][] type2Types = new Class&lt;?>[][]{&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{Boolean.TYPE, Boolean.class},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{Character.TYPE, Character.class},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{Byte.TYPE, Byte.class},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{Short.TYPE, Short.class},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{Integer.TYPE, Integer.class},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{Long.TYPE, Long.class},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{Float.TYPE, Float.class},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{Double.TYPE, Double.class},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{Void.TYPE, Void.class}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;};&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;for (Class&lt;?>[] typePair: type2Types) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;put(typePair[0], typePair[1]);&#xD;&#xA;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rcx80MEPEeiQaYZfZQMLYg" name="errorFac" visibility="private" type="_raDY8cEPEeiQaYZfZQMLYg" association="_reyH8cEPEeiQaYZfZQMLYg"/>
              <interfaceRealization xmi:id="_raEAAMEPEeiQaYZfZQMLYg" client="_rL0IoMEPEeiQaYZfZQMLYg" supplier="_rLy6gMEPEeiQaYZfZQMLYg" contract="_rLy6gMEPEeiQaYZfZQMLYg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdUvZMEPEeiQaYZfZQMLYg" name="ObjectLoader" specification="_rbfjYMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdUvZcEPEeiQaYZfZQMLYg" name="errorFac" type="_raDY8cEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rdUvZsEPEeiQaYZfZQMLYg" type="_rL0IoMEPEeiQaYZfZQMLYg" direction="return"/>
                <language>java</language>
                <body>this.errorFac = errorFac;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdUvZ8EPEeiQaYZfZQMLYg" name="loadInstance" specification="_rbhYkMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdUvaMEPEeiQaYZfZQMLYg" name="className">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdUvacEPEeiQaYZfZQMLYg" name="args" type="_rbduMMEPEeiQaYZfZQMLYg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdUvasEPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdUva8EPEeiQaYZfZQMLYg" type="_rbgxgMEPEeiQaYZfZQMLYg" direction="return"/>
                <language>java</language>
                <body>try {&#xD;
			return (ReturnT) getConstructor(Class.forName(className), args).newInstance(args);&#xD;
		&#xD;
		} catch (Exception ex) {&#xD;
			System.err.println(&quot;ObjectLoader.loadInstance(&quot; + className + &quot;, &quot; +(new ArrayList&lt;Object>(Arrays.asList(args)))+ &quot;):\n   Exception = &quot; + ex);&#xD;
			return errorFac.apply(args); // Make the error object&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdVWcMEPEeiQaYZfZQMLYg" name="getConstructor" specification="_rbjNwcEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdVWccEPEeiQaYZfZQMLYg" name="aClass" type="_rbe8UMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rdVWcsEPEeiQaYZfZQMLYg" name="args" type="_rbduMMEPEeiQaYZfZQMLYg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdVWc8EPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdVWdMEPEeiQaYZfZQMLYg" type="_rbh_pcEPEeiQaYZfZQMLYg" direction="return"/>
                <language>java</language>
                <body>// Get all the constructors of the given class&#xD;
		Constructor&lt;?> cs[] = aClass.getConstructors(); &#xD;
		&#xD;
		// search the constructors for the first one whose types allow the given input values.&#xD;
		for (int i = 0; i &lt; cs.length; i++) { &#xD;
			if (checkTypes(cs[i].getParameterTypes(), args)) {&#xD;
				return cs[i]; // Found one! Return the constructor.   note that there might be more that would fit, perhaps better than this one.&#xD;
			}&#xD;
		}&#xD;
		throw new IllegalArgumentException(&#xD;
				&quot;No constructor found that matches the arguments of the given input parameters.&quot;); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdVWdcEPEeiQaYZfZQMLYg" name="checkTypes" specification="_rblC8MEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdVWdsEPEeiQaYZfZQMLYg" name="paramTypes" type="_rbe8UMEPEeiQaYZfZQMLYg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdVWd8EPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdVWeMEPEeiQaYZfZQMLYg" name="args" type="_rbduMMEPEeiQaYZfZQMLYg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdVWecEPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdVWesEPEeiQaYZfZQMLYg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (args.length == paramTypes.length) {&#xD;
			for (int idx = 0; idx &lt; args.length; idx++) {&#xD;
				// Special case if the input parameter is a primitive.&#xD;
				// e.g.  Integer.TYPE is the type of int and even though int x = new Integer(42) is ok,&#xD;
				// Integer.TYPE.isAssignableFrom(Integer.class) will return false!!!&#xD;
				if (paramTypes[idx].isPrimitive()) { &#xD;
					// Substitute the boxing class of the primitive type, e.g. Integer for int&#xD;
					paramTypes[idx] = primitiveTypes.get(paramTypes[idx]); &#xD;
				}&#xD;
				// check if input parameter is an allowable subclass of the formal constructor parameter type.&#xD;
				if (!paramTypes[idx].isAssignableFrom(args[idx].getClass())) { &#xD;
					return false; // Types don't match&#xD;
				}&#xD;
			}&#xD;
			return true; // types match!&#xD;
		} else {&#xD;
			return false; // wrong number of input parameters&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rbfjYMEPEeiQaYZfZQMLYg" name="ObjectLoader" method="_rdUvZMEPEeiQaYZfZQMLYg">
                <eAnnotations xmi:id="_rbfjYsEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rbfjY8EPEeiQaYZfZQMLYg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rdiKycEPEeiQaYZfZQMLYg">
                  <body>Constructor for the class.   The given errorFac is used to generate instances when the loadInstance() method&#xD;
	 * is otherwise unable to do so because of a processing error.&#xD;
	 * @param errorFac A factory method that takes the same array of input parameters that loadInstance() &#xD;
	 * takes and returns an instance of ReturnT.</body>
                </ownedComment>
                <ownedParameter xmi:id="_rbfjYcEPEeiQaYZfZQMLYg" name="errorFac" type="_raDY8cEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rbfjZMEPEeiQaYZfZQMLYg" type="_rL0IoMEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rbhYkMEPEeiQaYZfZQMLYg" name="loadInstance" method="_rdUvZ8EPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rbhYkcEPEeiQaYZfZQMLYg" name="className">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rbhYksEPEeiQaYZfZQMLYg" name="args" type="_rbduMMEPEeiQaYZfZQMLYg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rbhYlcEPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rbhYk8EPEeiQaYZfZQMLYg" type="_rbgxgMEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rbjNwcEPEeiQaYZfZQMLYg" name="getConstructor" visibility="private" method="_rdVWcMEPEeiQaYZfZQMLYg" raisedException="_rbimscEPEeiQaYZfZQMLYg">
                <ownedComment xmi:id="_rdix0cEPEeiQaYZfZQMLYg">
                  <body>Proper form of Class.getConstructor(Class&amp;lt;?&amp;gt;[] parameterTypes) that&#xD;
	 * returns a constructor that will return a constructor of the given class&#xD;
	 * that will accept the given argument list.  Correctly finds a constructor&#xD;
	 * even if the constructor types are superclasses of the given arguments except &#xD;
	 * that it will not necessarily choose the more narrowed choice if more than one &#xD;
	 * possibility exists. &#xD;
	 * &#xD;
	 * @param aClass&#xD;
	 *            A class object whose constructor is being searched for.&#xD;
	 * @param args&#xD;
	 *            a list of input values for the constructor&#xD;
	 * @return a Constructor&amp;lt;?&amp;gt; that will work with the given set of input&#xD;
	 *         parameter values.&#xD;
	 * @throws IllegalArgumentException&#xD;
	 *             when no constructor can be found that would accept the given&#xD;
	 *             parameters.</body>
                </ownedComment>
                <ownedParameter xmi:id="_rbjNwsEPEeiQaYZfZQMLYg" name="aClass" type="_rbe8UMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rbjNw8EPEeiQaYZfZQMLYg" name="args" type="_rbduMMEPEeiQaYZfZQMLYg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rbkb4cEPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rbj00cEPEeiQaYZfZQMLYg" type="_rbh_pcEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rblC8MEPEeiQaYZfZQMLYg" name="checkTypes" visibility="private" method="_rdVWdcEPEeiQaYZfZQMLYg">
                <ownedComment xmi:id="_rdix0sEPEeiQaYZfZQMLYg">
                  <body>Utility method to check if the types of the elements in the given args&#xD;
	 * array match the types in the given paramTypes array. That is, if a method&#xD;
	 * takes input parameters of types paramTypes, would args be an allowable&#xD;
	 * input?&#xD;
	 * &#xD;
	 * @param paramTypes&#xD;
	 *            An array of Class objects representing an ordered list of&#xD;
	 *            types&#xD;
	 * @param args&#xD;
	 *            An array of input parameter values, whose types are being&#xD;
	 *            checked against paramTypes.&#xD;
	 * @return true if all arg elements are subclasses (assignable to) their&#xD;
	 *         corresponding paramTypes elements. Returns false otherwise.</body>
                </ownedComment>
                <ownedParameter xmi:id="_rblC8cEPEeiQaYZfZQMLYg" name="paramTypes" type="_rbe8UMEPEeiQaYZfZQMLYg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rblqAcEPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rblC8sEPEeiQaYZfZQMLYg" name="args" type="_rbduMMEPEeiQaYZfZQMLYg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rbmREcEPEeiQaYZfZQMLYg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rblqAMEPEeiQaYZfZQMLYg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_rbgxgMEPEeiQaYZfZQMLYg" name="ReturnT"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_rcwuscEPEeiQaYZfZQMLYg" name="Class"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_rexg4cEPEeiQaYZfZQMLYg" name="" memberEnd="_rexg4sEPEeiQaYZfZQMLYg _rcvgkMEPEeiQaYZfZQMLYg">
              <ownedEnd xmi:id="_rexg4sEPEeiQaYZfZQMLYg" name="" type="_rL0IoMEPEeiQaYZfZQMLYg" association="_rexg4cEPEeiQaYZfZQMLYg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_reyH8cEPEeiQaYZfZQMLYg" name="" memberEnd="_reyH8sEPEeiQaYZfZQMLYg _rcx80MEPEeiQaYZfZQMLYg">
              <ownedEnd xmi:id="_reyH8sEPEeiQaYZfZQMLYg" name="" type="_rL0IoMEPEeiQaYZfZQMLYg" association="_reyH8cEPEeiQaYZfZQMLYg"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_rLy6gMEPEeiQaYZfZQMLYg" name="IObjectLoader">
            <ownedComment xmi:id="_rdiKx8EPEeiQaYZfZQMLYg">
              <body>Abstraction of the dynamic class loading process for a particular type of &#xD;
entity (class or interface).  &#xD;
&#xD;
To maximally decouple the application from the implementation of the object loader, &#xD;
the object loader object should be typed to to this interface, e.g.&#xD;
IObjectLoader&amp;lt;IMyDesiredType&amp;gt; objLoader = new SomeConcreteObjectLoaderImplementation&amp;lt;IMyDesiredType&amp;gt;().   &#xD;
&#xD;
@author swong&#xD;
 *&#xD;
@param &lt;ReturnT>  The type of objects being instantiated.</body>
            </ownedComment>
            <ownedOperation xmi:id="_rbduMsEPEeiQaYZfZQMLYg" name="loadInstance">
              <ownedParameter xmi:id="_rbduM8EPEeiQaYZfZQMLYg" name="className">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbduNMEPEeiQaYZfZQMLYg" name="args" type="_rbduMMEPEeiQaYZfZQMLYg">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rbeVQsEPEeiQaYZfZQMLYg" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbeVQMEPEeiQaYZfZQMLYg" type="_rbdHIMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_rbdHIMEPEeiQaYZfZQMLYg" name="ReturnT"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_rGZdIMEPEeiQaYZfZQMLYg" name="valueGenerator">
          <packagedElement xmi:type="uml:Package" xmi:id="_rGZdIcEPEeiQaYZfZQMLYg" name="impl">
            <packagedElement xmi:type="uml:Class" xmi:id="_rL95ocEPEeiQaYZfZQMLYg" name="Randomizer">
              <ownedComment xmi:id="_rdjY4MEPEeiQaYZfZQMLYg">
                <body>Concrete implementation of IRandomizer</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rcyj4sEPEeiQaYZfZQMLYg" name="singleton" isStatic="true" type="_rL95ocEPEeiQaYZfZQMLYg" association="_reyvAcEPEeiQaYZfZQMLYg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rczK8MEPEeiQaYZfZQMLYg" value="new Randomizer()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_raF1MMEPEeiQaYZfZQMLYg" client="_rL95ocEPEeiQaYZfZQMLYg" supplier="_rL4aEMEPEeiQaYZfZQMLYg" contract="_rL4aEMEPEeiQaYZfZQMLYg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdVWe8EPEeiQaYZfZQMLYg" name="randomLoc" specification="_rbqigMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdVWfMEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rdVWfcEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
                <language>java</language>
                <body>return (new Point( randomInt(rect.x, rect.x+rect.width), randomInt(rect.y, rect.y+rect.height)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdVWfsEPEeiQaYZfZQMLYg" name="randomLoc" specification="_rbrJk8EPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdVWf8EPEeiQaYZfZQMLYg" name="dim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rdVWgMEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
                <language>java</language>
                <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdV9gMEPEeiQaYZfZQMLYg" name="randomInt" specification="_rL_u0MEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdV9gcEPEeiQaYZfZQMLYg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdV9gsEPEeiQaYZfZQMLYg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdV9g8EPEeiQaYZfZQMLYg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return (int)Math.floor((Math.random()*(1+max-min))+min);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdV9hMEPEeiQaYZfZQMLYg" name="randomDouble" specification="_rMA88sEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdV9hcEPEeiQaYZfZQMLYg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdV9hsEPEeiQaYZfZQMLYg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdV9h8EPEeiQaYZfZQMLYg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>return (Math.random()*(max-min))+min;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdV9iMEPEeiQaYZfZQMLYg" name="randomVel" specification="_rbsXsMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdV9icEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rdV9isEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
                <language>java</language>
                <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdV9i8EPEeiQaYZfZQMLYg" name="randomDim" specification="_rbs-wsEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdV9jMEPEeiQaYZfZQMLYg" name="maxDim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rdV9jcEPEeiQaYZfZQMLYg" type="_rX8gIMEPEeiQaYZfZQMLYg" direction="return"/>
                <language>java</language>
                <body>int x =  randomInt(maxDim.width/2,maxDim.width);&#xD;
		return new Dimension(x,x);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdV9jsEPEeiQaYZfZQMLYg" name="randomBounds" specification="_rbtl08EPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdV9j8EPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rdV9kMEPEeiQaYZfZQMLYg" name="maxDim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rdV9kcEPEeiQaYZfZQMLYg" type="_rX9HMcEPEeiQaYZfZQMLYg" direction="return"/>
                <language>java</language>
                <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdV9ksEPEeiQaYZfZQMLYg" name="randomColor" specification="_rMCLEMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdV9k8EPEeiQaYZfZQMLYg" type="_rXz9QMEPEeiQaYZfZQMLYg" direction="return"/>
                <language>java</language>
                <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdWkkMEPEeiQaYZfZQMLYg" name="randomChoice" specification="_rbxQMMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdWkkcEPEeiQaYZfZQMLYg" name="x" type="_rbduMMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rdWkksEPEeiQaYZfZQMLYg" name="y" type="_rbduMMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rdWkk8EPEeiQaYZfZQMLYg" name="probX">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdWklMEPEeiQaYZfZQMLYg" type="_rbduMMEPEeiQaYZfZQMLYg" direction="return"/>
                <language>java</language>
                <body>return (Math.random()&lt;probX) ? x: y;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rL-gsMEPEeiQaYZfZQMLYg" name="Randomizer" visibility="private">
                <eAnnotations xmi:id="_rL-gscEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rL-gssEPEeiQaYZfZQMLYg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rL_HwcEPEeiQaYZfZQMLYg" type="_rL95ocEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rL_u0MEPEeiQaYZfZQMLYg" name="randomInt" method="_rdV9gMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rL_u0cEPEeiQaYZfZQMLYg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL_u0sEPEeiQaYZfZQMLYg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL_u08EPEeiQaYZfZQMLYg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rMA88sEPEeiQaYZfZQMLYg" name="randomDouble" method="_rdV9hMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rMA888EPEeiQaYZfZQMLYg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMA89MEPEeiQaYZfZQMLYg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMBkAMEPEeiQaYZfZQMLYg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rMCLEMEPEeiQaYZfZQMLYg" name="randomColor" method="_rdV9ksEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rbuz8sEPEeiQaYZfZQMLYg" type="_rXz9QMEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rbqigMEPEeiQaYZfZQMLYg" name="randomLoc" method="_rdVWe8EPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rbqigcEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rbqigsEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rbrJk8EPEeiQaYZfZQMLYg" name="randomLoc" method="_rdVWfsEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rbrwoMEPEeiQaYZfZQMLYg" name="dim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rbrwocEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rbsXsMEPEeiQaYZfZQMLYg" name="randomVel" method="_rdV9iMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rbsXscEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rbsXssEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rbs-wsEPEeiQaYZfZQMLYg" name="randomDim" method="_rdV9i8EPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rbs-w8EPEeiQaYZfZQMLYg" name="maxDim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rbs-xMEPEeiQaYZfZQMLYg" type="_rX8gIMEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rbtl08EPEeiQaYZfZQMLYg" name="randomBounds" method="_rdV9jsEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rbuM4MEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rbuM4cEPEeiQaYZfZQMLYg" name="maxDim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rbuM4sEPEeiQaYZfZQMLYg" type="_rX9HMcEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rbxQMMEPEeiQaYZfZQMLYg" name="randomChoice" method="_rdWkkMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rbx3QMEPEeiQaYZfZQMLYg" name="x" type="_rbduMMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rbx3QcEPEeiQaYZfZQMLYg" name="y" type="_rbduMMEPEeiQaYZfZQMLYg"/>
                <ownedParameter xmi:id="_rbx3QsEPEeiQaYZfZQMLYg" name="probX">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rbx3Q8EPEeiQaYZfZQMLYg" type="_rbduMMEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_rMGcgMEPEeiQaYZfZQMLYg" name="SineMaker">
              <ownedComment xmi:id="_rdjY4cEPEeiQaYZfZQMLYg">
                <body>A utility class that can be used to create smoothly varying sinusoidal&#xD;
numerical data.&#xD;
Note that this is not a singleton class nor does it have static methods as&#xD;
its behavior depends on the minimum, maximum and delta values given to &#xD;
its constructor.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rczK8sEPEeiQaYZfZQMLYg" name="_mid" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rczyAcEPEeiQaYZfZQMLYg" name="_ampl" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rc0ZEMEPEeiQaYZfZQMLYg" name="_delta" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rc0ZEsEPEeiQaYZfZQMLYg" name="_theta" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rc0ZE8EPEeiQaYZfZQMLYg" value="-Math.PI / 2.0"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_raHqYMEPEeiQaYZfZQMLYg" client="_rMGcgMEPEeiQaYZfZQMLYg" supplier="_rL9SkMEPEeiQaYZfZQMLYg" contract="_rL9SkMEPEeiQaYZfZQMLYg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdWklcEPEeiQaYZfZQMLYg" name="SineMaker" specification="_rMHqoMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdWklsEPEeiQaYZfZQMLYg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdWkl8EPEeiQaYZfZQMLYg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdWkmMEPEeiQaYZfZQMLYg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rdWkmcEPEeiQaYZfZQMLYg" type="_rMGcgMEPEeiQaYZfZQMLYg" direction="return"/>
                <language>java</language>
                <body>_mid = (max + min) / 2.0;&#xD;
		_ampl = (max - min) / 2.0;&#xD;
		_delta = delta;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdWkmsEPEeiQaYZfZQMLYg" name="getDblVal" specification="_rMIRtMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdWkm8EPEeiQaYZfZQMLYg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>double result = _mid + _ampl * Math.sin(_theta);&#xD;
		_theta += _delta; // shorthand for _theta = _theta + _delta&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdWknMEPEeiQaYZfZQMLYg" name="getIntVal" specification="_rMJf0cEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rdWkncEPEeiQaYZfZQMLYg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return (int) Math.round(getDblVal());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rMHqoMEPEeiQaYZfZQMLYg" name="SineMaker" method="_rdWklcEPEeiQaYZfZQMLYg">
                <eAnnotations xmi:id="_rMIRscEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rMIRssEPEeiQaYZfZQMLYg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rdjY4sEPEeiQaYZfZQMLYg">
                  <body>The constructor takes several values to control the object's behavior.&#xD;
	 * @param min The minimum and initial value to produce.&#xD;
	 * @param max The maximum value to produce.&#xD;
	 * @param delta The amount in radians that the generating angle is incremented each time&#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_rMHqocEPEeiQaYZfZQMLYg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMHqosEPEeiQaYZfZQMLYg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMIRsMEPEeiQaYZfZQMLYg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMIRs8EPEeiQaYZfZQMLYg" type="_rMGcgMEPEeiQaYZfZQMLYg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rMIRtMEPEeiQaYZfZQMLYg" name="getDblVal" method="_rdWkmsEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rMI4wMEPEeiQaYZfZQMLYg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rMJf0cEPEeiQaYZfZQMLYg" name="getIntVal" method="_rdWknMEPEeiQaYZfZQMLYg">
                <ownedParameter xmi:id="_rMJf0sEPEeiQaYZfZQMLYg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_reyvAcEPEeiQaYZfZQMLYg" name="" memberEnd="_reyvAsEPEeiQaYZfZQMLYg _rcyj4sEPEeiQaYZfZQMLYg">
              <ownedEnd xmi:id="_reyvAsEPEeiQaYZfZQMLYg" name="" type="_rL95ocEPEeiQaYZfZQMLYg" association="_reyvAcEPEeiQaYZfZQMLYg"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_rL4aEMEPEeiQaYZfZQMLYg" name="IRandomizer">
            <ownedComment xmi:id="_rdix08EPEeiQaYZfZQMLYg">
              <body>Top-level abstraction of a utility to generate various random values.   &#xD;
&#xD;
To maximally decouple an application from the randomizer's implementation any variable representing a randomizer&#xD;
should be typed to this interface, not to any concrete implementation.  For example:&#xD;
IRandomizer myRandomizer = Randomizer.Singleton; &#xD;
 &#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedOperation xmi:id="_rL5oMMEPEeiQaYZfZQMLYg" name="randomInt">
              <ownedComment xmi:id="_rdix1sEPEeiQaYZfZQMLYg">
                <body>Returns a random integer greater than or equal to min and less than or equal to max.&#xD;
	 * @param min The minimum allowed value&#xD;
	 * @param max The maximum allowed value&#xD;
	 * @return an int subject to the given bounds</body>
              </ownedComment>
              <ownedParameter xmi:id="_rL5oMcEPEeiQaYZfZQMLYg" name="min">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rL5oMsEPEeiQaYZfZQMLYg" name="max">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rL5oM8EPEeiQaYZfZQMLYg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_rL6PQMEPEeiQaYZfZQMLYg" name="randomDouble">
              <ownedComment xmi:id="_rdix18EPEeiQaYZfZQMLYg">
                <body>Returns a random double greater than or equal to min and less than max.&#xD;
	 * @param min The minimum allowed value&#xD;
	 * @param max The maximum allowed value&#xD;
	 * @return a double subject to the given bounds</body>
              </ownedComment>
              <ownedParameter xmi:id="_rL6PQcEPEeiQaYZfZQMLYg" name="min">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rL6PQsEPEeiQaYZfZQMLYg" name="max">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rL6PQ8EPEeiQaYZfZQMLYg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_rL62UMEPEeiQaYZfZQMLYg" name="randomColor">
              <ownedComment xmi:id="_rdix28EPEeiQaYZfZQMLYg">
                <body>Generates a random color&#xD;
	 * @return a random Color object</body>
              </ownedComment>
              <ownedParameter xmi:id="_rbpUYcEPEeiQaYZfZQMLYg" type="_rXz9QMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbm4IMEPEeiQaYZfZQMLYg" name="randomLoc">
              <ownedComment xmi:id="_rdix1MEPEeiQaYZfZQMLYg">
                <body>Generates a random location point subject to the constraint that rect.x&amp;lt;=X&amp;lt;=rect.x+rect.width and rect.y&amp;lt;=Y&amp;lt;=rect.y+rect.height.   &#xD;
	 * Note that the definition of a Rectangle object requires that (x,y) be defined as the upper left corner and that width and height must both &#xD;
	 * be non-negative.&#xD;
	 * @param rect The bounds for the x and y values of the created Point&#xD;
	 * @return A Point object whose x and y are subject to the given bounds</body>
              </ownedComment>
              <ownedParameter xmi:id="_rbm4IcEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbnfMMEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbnfMcEPEeiQaYZfZQMLYg" name="randomLoc">
              <ownedComment xmi:id="_rdix1cEPEeiQaYZfZQMLYg">
                <body>Generates a random location point subject to the constraint that 0&amp;lt;=X&amp;lt;=dim.width and 0&amp;lt;=Y&amp;lt;=dim.height.&#xD;
	 * @param dim The bounds for the x and y values of the created Point&#xD;
	 * @return A Point object whose x and y are subject to the given bounds</body>
              </ownedComment>
              <ownedParameter xmi:id="_rbnfMsEPEeiQaYZfZQMLYg" name="dim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbnfM8EPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rboGQMEPEeiQaYZfZQMLYg" name="randomVel">
              <ownedComment xmi:id="_rdix2MEPEeiQaYZfZQMLYg">
                <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value of the velocity (speed) &#xD;
	 * within the bound (inclusive) defined by rect.   Thus the resultant velocity may be negative.   The given Rectangle&#xD;
	 * should use all positive values.   To create velocities or any Point with asymmetrical bounds, use the randomLoc(Rectangle rect) &#xD;
	 * method with the input rectangle set to the desired bounds.&#xD;
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  &#xD;
	 * @return a Point object with x and y subject to the given bounds.</body>
              </ownedComment>
              <ownedParameter xmi:id="_rboGQcEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rboGQsEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbotUMEPEeiQaYZfZQMLYg" name="randomDim">
              <ownedComment xmi:id="_rdix2cEPEeiQaYZfZQMLYg">
                <body>Returns a random square Dimension, whose width is maxDim.width/2&amp;lt;=width&amp;lt;=maxDim.width&#xD;
	 * @param maxDim  The bounds on the side of the created Dimension.&#xD;
	 * @return A random square Dimension subject to the given bound</body>
              </ownedComment>
              <ownedParameter xmi:id="_rbotUcEPEeiQaYZfZQMLYg" name="maxDim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbotUsEPEeiQaYZfZQMLYg" type="_rX8gIMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbotU8EPEeiQaYZfZQMLYg" name="randomBounds">
              <ownedComment xmi:id="_rdix2sEPEeiQaYZfZQMLYg">
                <body>Generates a randomly located and sized rectangle&#xD;
	 * @param rect  The bounds for the location of the created rectangle&#xD;
	 * @param maxDim  The bounds for the dimensions of the create rectangle&#xD;
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
              </ownedComment>
              <ownedParameter xmi:id="_rbotVMEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbotVcEPEeiQaYZfZQMLYg" name="maxDim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbpUYMEPEeiQaYZfZQMLYg" type="_rX9HMcEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rbpUYsEPEeiQaYZfZQMLYg" name="randomChoice">
              <ownedComment xmi:id="_rdix3MEPEeiQaYZfZQMLYg">
                <body>Returns a random choice of one of two objects, x and y, where probX is the probability &#xD;
	 * that x will be picked (0&amp;lt;=x&amp;lt;=1).&#xD;
	 * @param x The first of two choices&#xD;
	 * @param y The second of two choices&#xD;
	 * @param probX  The probability of the first choice&#xD;
	 * @return Either x or y as per the probability of choosing them.</body>
              </ownedComment>
              <ownedParameter xmi:id="_rbp7cMEPEeiQaYZfZQMLYg" name="x" type="_rbduMMEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbp7ccEPEeiQaYZfZQMLYg" name="y" type="_rbduMMEPEeiQaYZfZQMLYg"/>
              <ownedParameter xmi:id="_rbp7csEPEeiQaYZfZQMLYg" name="probX">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rbp7c8EPEeiQaYZfZQMLYg" type="_rbduMMEPEeiQaYZfZQMLYg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_rL9SkMEPEeiQaYZfZQMLYg" name="ISineMaker">
            <ownedComment xmi:id="_rdix3cEPEeiQaYZfZQMLYg">
              <body>Top-level abstraction of the generation of sinusoidally varying numerical values.  The range of values &#xD;
produced and the step between subsequent values are determined by the concrete implementation &#xD;
of the interface.&#xD;
&#xD;
To maximally decouple an application from the sine maker's implementation any variable representing a sine maker&#xD;
should be typed to this interface, not to any concrete implementation.  For example:&#xD;
ISineMaker mySineMaker = new SineMaker()&#xD;
 &#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_rL9SkcEPEeiQaYZfZQMLYg" name="dblVal" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_rL95oMEPEeiQaYZfZQMLYg" name="intVal" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rFh6cMEPEeiQaYZfZQMLYg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_rFh6ccEPEeiQaYZfZQMLYg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_rHjTsMEPEeiQaYZfZQMLYg" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_raQ0U8EPEeiQaYZfZQMLYg" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_raRbYcEPEeiQaYZfZQMLYg" name="TitledBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_raSCccEPEeiQaYZfZQMLYg" name="EtchedBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_raSpgcEPEeiQaYZfZQMLYg" name="LineBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rX9HM8EPEeiQaYZfZQMLYg" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_raNxAsEPEeiQaYZfZQMLYg" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_raO_IMEPEeiQaYZfZQMLYg" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_raO_IsEPEeiQaYZfZQMLYg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_raPmMcEPEeiQaYZfZQMLYg" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_raQNQcEPEeiQaYZfZQMLYg" name="JTextField"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_raQ0UcEPEeiQaYZfZQMLYg" name="SwingConstants"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rFihgMEPEeiQaYZfZQMLYg" name="util">
      <packagedElement xmi:type="uml:Class" xmi:id="_rMKt8MEPEeiQaYZfZQMLYg" name="Dispatcher">
        <generalization xmi:id="_rbzsdMEPEeiQaYZfZQMLYg" general="_rbzFYMEPEeiQaYZfZQMLYg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdWknsEPEeiQaYZfZQMLYg" name="notifyAll" specification="_rbzsccEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdWkn8EPEeiQaYZfZQMLYg" name="param" type="_rbduMMEPEeiQaYZfZQMLYg"/>
          <language>java</language>
          <body>setChanged();
		notifyObservers(param);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_rbzsccEPEeiQaYZfZQMLYg" name="notifyAll" method="_rdWknsEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdjY5MEPEeiQaYZfZQMLYg">
            <body>Immediately notifies all the Observers held.
	 * @param param An input parameter that is passed on to all the Observers.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rbzscsEPEeiQaYZfZQMLYg" name="param" type="_rbduMMEPEeiQaYZfZQMLYg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_rML8EMEPEeiQaYZfZQMLYg" name="IRandomizer">
        <ownedComment xmi:id="_rdjY5cEPEeiQaYZfZQMLYg">
          <body>Randomizer Interface.</body>
        </ownedComment>
        <ownedOperation xmi:id="_rMMjIMEPEeiQaYZfZQMLYg" name="randomInt">
          <ownedComment xmi:id="_rdjY6MEPEeiQaYZfZQMLYg">
            <body>Returns a random integer greater than or equal to min and less than or equal to max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return an int subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_rMMjIcEPEeiQaYZfZQMLYg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rMMjIsEPEeiQaYZfZQMLYg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rMMjI8EPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rMNKMMEPEeiQaYZfZQMLYg" name="randomDouble">
          <ownedComment xmi:id="_rdjY6cEPEeiQaYZfZQMLYg">
            <body>Returns a random double greater than or equal to min and less than max.
	 * @param min The minimum allowed value
	 * @param max The maximum allowed value
	 * @return a double subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_rMNKMcEPEeiQaYZfZQMLYg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rMNKMsEPEeiQaYZfZQMLYg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rMNKM8EPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rMNxQMEPEeiQaYZfZQMLYg" name="randomColor">
          <ownedComment xmi:id="_rdj_8cEPEeiQaYZfZQMLYg">
            <body>Generates a random color
	 * @return a random Color object</body>
          </ownedComment>
          <ownedParameter xmi:id="_rb1hpcEPEeiQaYZfZQMLYg" type="_rXz9QMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb0TgMEPEeiQaYZfZQMLYg" name="randomLoc">
          <ownedComment xmi:id="_rdjY5sEPEeiQaYZfZQMLYg">
            <body>Generates a random location point subject to the constraint that 0&amp;lt;=X&amp;lt;=rect.width and 0&amp;lt;=Y&amp;lt;=rect.height.
	 * @param rect The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_rb0TgcEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb0TgsEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb0Tg8EPEeiQaYZfZQMLYg" name="randomLoc">
          <ownedComment xmi:id="_rdjY58EPEeiQaYZfZQMLYg">
            <body>Generates a random location point subject to the constraint that 0&amp;lt;=X&amp;lt;=dim.width and 0&amp;lt;=Y&amp;lt;=dim.height.
	 * @param dim The bounds for the x and y values of the created Point
	 * @return A Point object whose x and y are subject to the given bounds</body>
          </ownedComment>
          <ownedParameter xmi:id="_rb0ThMEPEeiQaYZfZQMLYg" name="dim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb0ThcEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb06kMEPEeiQaYZfZQMLYg" name="randomVel">
          <ownedComment xmi:id="_rdjY6sEPEeiQaYZfZQMLYg">
            <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value of the velocity (speed) 
	 * within the bound (inclusive) defined by rect.   Thus the resultant velocity may be negative.   The given Rectangle
	 * should use all positive values.
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  
	 * @return a Point object with x and y subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rb06kcEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb06ksEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb06k8EPEeiQaYZfZQMLYg" name="randomDim">
          <ownedComment xmi:id="_rdjY68EPEeiQaYZfZQMLYg">
            <body>Returns a random square Dimension, whose width is maxDim.width/2&amp;lt;=width&amp;lt;=maxDim.width
	 * @param maxDim  The bounds on the side of the created Dimension.
	 * @return A random square Dimension subject to the given bound</body>
          </ownedComment>
          <ownedParameter xmi:id="_rb06lMEPEeiQaYZfZQMLYg" name="maxDim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb1hoMEPEeiQaYZfZQMLYg" type="_rX8gIMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb1hocEPEeiQaYZfZQMLYg" name="randomBounds">
          <ownedComment xmi:id="_rdj_8MEPEeiQaYZfZQMLYg">
            <body>Generates a randomly located and sized rectangle
	 * @param rect  The bounds for the location of the created rectangle
	 * @param maxDim  The bounds for the dimensions of the create rectangle
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rb1hosEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb1ho8EPEeiQaYZfZQMLYg" name="maxDim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb1hpMEPEeiQaYZfZQMLYg" type="_rX9HMcEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb2IsMEPEeiQaYZfZQMLYg" name="randomChoice">
          <ownedComment xmi:id="_rdj_8sEPEeiQaYZfZQMLYg">
            <body>Returns a random choice of one of two objects, x and y, where probX is the probability 
	 * that x will be picked (0&amp;lt;=x&amp;lt;=1).
	 * @param x The first of two choices
	 * @param y The second of two choices
	 * @param probX  The probability of the first choice
	 * @return Either x or y as per the probability of choosing them.</body>
          </ownedComment>
          <ownedParameter xmi:id="_rb2IscEPEeiQaYZfZQMLYg" name="x" type="_rbduMMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb2IssEPEeiQaYZfZQMLYg" name="y" type="_rbduMMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb2Is8EPEeiQaYZfZQMLYg" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rb2ItMEPEeiQaYZfZQMLYg" type="_rbduMMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_rMVtEMEPEeiQaYZfZQMLYg" name="Randomizer">
        <ownedComment xmi:id="_rdj_88EPEeiQaYZfZQMLYg">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_rc1AIcEPEeiQaYZfZQMLYg" name="singleton" isStatic="true" type="_rMVtEMEPEeiQaYZfZQMLYg" association="_reyvBMEPEeiQaYZfZQMLYg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rc1AIsEPEeiQaYZfZQMLYg" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_raI4gMEPEeiQaYZfZQMLYg" client="_rMVtEMEPEeiQaYZfZQMLYg" supplier="_rML8EMEPEeiQaYZfZQMLYg" contract="_rML8EMEPEeiQaYZfZQMLYg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdXLoMEPEeiQaYZfZQMLYg" name="randomLoc" specification="_rb2vwMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdXLocEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdXLosEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>return (new Point(randomInt(0, rect.width), randomInt(0, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdXLo8EPEeiQaYZfZQMLYg" name="randomLoc" specification="_rb2vw8EPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdXLpMEPEeiQaYZfZQMLYg" name="dim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdXLpcEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>return (new Point(randomInt(0, dim.width), randomInt(0, dim.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdXLpsEPEeiQaYZfZQMLYg" name="randomInt" specification="_rMW7MMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdXLp8EPEeiQaYZfZQMLYg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdXLqMEPEeiQaYZfZQMLYg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdXLqcEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.floor((Math.random() * (1 + max - min)) + min);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdXLqsEPEeiQaYZfZQMLYg" name="randomDouble" specification="_rMW7NMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdXLq8EPEeiQaYZfZQMLYg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdXLrMEPEeiQaYZfZQMLYg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdXLrcEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random() * (max - min)) + min;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdXLrsEPEeiQaYZfZQMLYg" name="randomVel" specification="_rb3W0MEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdXLr8EPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdXLsMEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>return (new Point(randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdXLscEPEeiQaYZfZQMLYg" name="randomDim" specification="_rb394MEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdXLssEPEeiQaYZfZQMLYg" name="maxDim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdXLs8EPEeiQaYZfZQMLYg" type="_rX8gIMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>int x = randomInt(maxDim.width / 2, maxDim.width);
		return new Dimension(x, x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdXysMEPEeiQaYZfZQMLYg" name="randomBounds" specification="_rb4k8MEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdXyscEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdXyssEPEeiQaYZfZQMLYg" name="maxDim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdXys8EPEeiQaYZfZQMLYg" type="_rX9HMcEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdXytMEPEeiQaYZfZQMLYg" name="randomColor" specification="_rMXiQ8EPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdXytcEPEeiQaYZfZQMLYg" type="_rXz9QMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>return new Color(randomInt(0, 255), randomInt(0, 255), randomInt(0, 255));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdXytsEPEeiQaYZfZQMLYg" name="randomChoice" specification="_rb5MAcEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdXyt8EPEeiQaYZfZQMLYg" name="x" type="_rbduMMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdXyuMEPEeiQaYZfZQMLYg" name="y" type="_rbduMMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rdXyucEPEeiQaYZfZQMLYg" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdXyusEPEeiQaYZfZQMLYg" type="_rbduMMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>return (Math.random() &lt; probX) ? x : y;

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_rMWUIMEPEeiQaYZfZQMLYg" name="Randomizer" visibility="private">
          <eAnnotations xmi:id="_rMWUIcEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_rMWUIsEPEeiQaYZfZQMLYg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_rMWUJMEPEeiQaYZfZQMLYg" type="_rMVtEMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rMW7MMEPEeiQaYZfZQMLYg" name="randomInt" method="_rdXLpsEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rMW7McEPEeiQaYZfZQMLYg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rMW7MsEPEeiQaYZfZQMLYg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rMW7M8EPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rMW7NMEPEeiQaYZfZQMLYg" name="randomDouble" method="_rdXLqsEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rMXiQMEPEeiQaYZfZQMLYg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rMXiQcEPEeiQaYZfZQMLYg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rMXiQsEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rMXiQ8EPEeiQaYZfZQMLYg" name="randomColor" method="_rdXytMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rb5MAMEPEeiQaYZfZQMLYg" type="_rXz9QMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb2vwMEPEeiQaYZfZQMLYg" name="randomLoc" method="_rdXLoMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rb2vwcEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb2vwsEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb2vw8EPEeiQaYZfZQMLYg" name="randomLoc" method="_rdXLo8EPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rb2vxMEPEeiQaYZfZQMLYg" name="dim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb2vxcEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb3W0MEPEeiQaYZfZQMLYg" name="randomVel" method="_rdXLrsEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rb3W0cEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb3W0sEPEeiQaYZfZQMLYg" type="_rX0kUcEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb394MEPEeiQaYZfZQMLYg" name="randomDim" method="_rdXLscEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rb394cEPEeiQaYZfZQMLYg" name="maxDim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb394sEPEeiQaYZfZQMLYg" type="_rX8gIMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb4k8MEPEeiQaYZfZQMLYg" name="randomBounds" method="_rdXysMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rb4k8cEPEeiQaYZfZQMLYg" name="rect" type="_rX9HMcEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb4k8sEPEeiQaYZfZQMLYg" name="maxDim" type="_rX8gIMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb4k88EPEeiQaYZfZQMLYg" type="_rX9HMcEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rb5MAcEPEeiQaYZfZQMLYg" name="randomChoice" method="_rdXytsEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rb5MAsEPEeiQaYZfZQMLYg" name="x" type="_rbduMMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb5MA8EPEeiQaYZfZQMLYg" name="y" type="_rbduMMEPEeiQaYZfZQMLYg"/>
          <ownedParameter xmi:id="_rb5MBMEPEeiQaYZfZQMLYg" name="probX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rb5MBcEPEeiQaYZfZQMLYg" type="_rbduMMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_rMZ-gMEPEeiQaYZfZQMLYg" name="SineMaker">
        <ownedComment xmi:id="_rdj_9MEPEeiQaYZfZQMLYg">
          <body>A utility class that can be used to create smoothly varying sinusoidal
numerical data.
Note that this is not a singleton class nor does it have static methods as
its behavior depends on the minimum, maximum and delta values given to 
its constructor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_rc1nMMEPEeiQaYZfZQMLYg" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rc1nMsEPEeiQaYZfZQMLYg" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rc1nNMEPEeiQaYZfZQMLYg" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rc2OQMEPEeiQaYZfZQMLYg" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rc2OQcEPEeiQaYZfZQMLYg" value="-Math.PI / 2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdXyu8EPEeiQaYZfZQMLYg" name="SineMaker" specification="_rMbMoMEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdXyvMEPEeiQaYZfZQMLYg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdXyvcEPEeiQaYZfZQMLYg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdXyvsEPEeiQaYZfZQMLYg" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdXyv8EPEeiQaYZfZQMLYg" type="_rMZ-gMEPEeiQaYZfZQMLYg" direction="return"/>
          <language>java</language>
          <body>_mid = (max + min) / 2.0;
		_ampl = (max - min) / 2.0;
		_delta = delta;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdXywMEPEeiQaYZfZQMLYg" name="getDblVal" specification="_rMbzscEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdXywcEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl * Math.sin(_theta);
		_theta += _delta; // shorthand for _theta = _theta + _delta
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rdXywsEPEeiQaYZfZQMLYg" name="getIntVal" specification="_rMcawcEPEeiQaYZfZQMLYg">
          <ownedParameter xmi:id="_rdXyw8EPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_rMbMoMEPEeiQaYZfZQMLYg" name="SineMaker" method="_rdXyu8EPEeiQaYZfZQMLYg">
          <eAnnotations xmi:id="_rMbMpMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_rMbMpcEPEeiQaYZfZQMLYg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_rdj_9cEPEeiQaYZfZQMLYg">
            <body>The constructor takes several values to control the object's behavior.
	 * @param min The minimum and initial value to produce.
	 * @param max The maximum value to produce.
	 * @param delta The amount in radians that the generating angle is incremented each time
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_rMbMocEPEeiQaYZfZQMLYg" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rMbMosEPEeiQaYZfZQMLYg" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rMbMo8EPEeiQaYZfZQMLYg" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rMbzsMEPEeiQaYZfZQMLYg" type="_rMZ-gMEPEeiQaYZfZQMLYg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rMbzscEPEeiQaYZfZQMLYg" name="getDblVal" method="_rdXywMEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdj_9sEPEeiQaYZfZQMLYg">
            <body>Returns a different value each time it is called.  The value varies smoothly in a 
	 * sinusoidal fashion, incrementing each time as per the above specified delta 
	 * angle increase.
	 * @return the next value as a double</body>
          </ownedComment>
          <ownedParameter xmi:id="_rMcawMEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rMcawcEPEeiQaYZfZQMLYg" name="getIntVal" method="_rdXywsEPEeiQaYZfZQMLYg">
          <ownedComment xmi:id="_rdj_98EPEeiQaYZfZQMLYg">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.
	 * Note that getDblVal and getIntVal are not independent as getIntVal merely calls
	 * getDblVal.
	 * @return the next value as an int</body>
          </ownedComment>
          <ownedParameter xmi:id="_rMcawsEPEeiQaYZfZQMLYg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reyvBMEPEeiQaYZfZQMLYg" name="" memberEnd="_reyvBcEPEeiQaYZfZQMLYg _rc1AIcEPEeiQaYZfZQMLYg">
        <ownedEnd xmi:id="_reyvBcEPEeiQaYZfZQMLYg" name="" type="_rMVtEMEPEeiQaYZfZQMLYg" association="_reyvBMEPEeiQaYZfZQMLYg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rGWZ0MEPEeiQaYZfZQMLYg" name="Ellipse2D">
      <packagedElement xmi:type="uml:Class" xmi:id="_rYrf8cEPEeiQaYZfZQMLYg" name="Double"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rGj1MMEPEeiQaYZfZQMLYg" name="Point2D">
      <packagedElement xmi:type="uml:Class" xmi:id="_rY6JcMEPEeiQaYZfZQMLYg" name="Double"/>
    </packagedElement>
    <profileApplication xmi:id="_pyXCY8EPEeiQaYZfZQMLYg">
      <eAnnotations xmi:id="_pyXCZMEPEeiQaYZfZQMLYg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_pyXpcMEPEeiQaYZfZQMLYg" base_Package="_ptESsMEPEeiQaYZfZQMLYg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_rJGy4MEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rJGL0MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rJJPIMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rJIoEcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rJLEUMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rJKdQ8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJPVwMEPEeiQaYZfZQMLYg" base_Element="_rJOusMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rJPVwcEPEeiQaYZfZQMLYg" base_Element="_rJOusMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rJPVwsEPEeiQaYZfZQMLYg" name="FunctionalInterface"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rJX4oMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rJXRkMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rJZt0MEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rJYfsMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rJaU4MEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rJZt0cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rJa78sEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rJaU4cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rJcKEMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rJbjAMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJcKEcEPEeiQaYZfZQMLYg" base_Element="_rJbjAMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rJcKEsEPEeiQaYZfZQMLYg" base_Element="_rJbjAMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rJcxIMEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rJdYM8EPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rJdYMMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rJemUMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rJd_QMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJemUcEPEeiQaYZfZQMLYg" base_Element="_rJd_QMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rJfNYMEPEeiQaYZfZQMLYg" base_Element="_rJd_QMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rJfNYcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKBY4cEPEeiQaYZfZQMLYg" base_Element="_rKAx0MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKB_9cEPEeiQaYZfZQMLYg" base_Element="_rKB_8MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rKCnAMEPEeiQaYZfZQMLYg" base_Element="_rKB_8MEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rKCnAcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKLJ4MEPEeiQaYZfZQMLYg" base_Element="_rKKi0MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rKLw8MEPEeiQaYZfZQMLYg" base_Element="_rKKi0MEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rKLw8cEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKONM8EPEeiQaYZfZQMLYg" base_Element="_rKONMMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKPbUMEPEeiQaYZfZQMLYg" base_Element="_rKO0QMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rKPbUcEPEeiQaYZfZQMLYg" base_Element="_rKO0QMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rKPbUsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKn108EPEeiQaYZfZQMLYg" base_Element="_rKn10MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rKsHQMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rKq5IMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLA3YMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLAQUMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLDToMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLCskMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLIMIMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLHlEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLKoYMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLKBUMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLQH8MEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLPg4MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLUZYMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLTyUMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLbHEMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLagAMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLdjUMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLc8QMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLfYgMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLexcMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLhNsMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLgmoMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLmtQMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLmGMMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLn7YMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLnUUMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLoicMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLn7YsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLpwkcEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLpwkMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLq-sMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLqXoMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLrlwsEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLq-scEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLsz4sEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLsM0MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rLta8MEPEeiQaYZfZQMLYg" base_Element="_rLsM0MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rLta8cEPEeiQaYZfZQMLYg" base_Element="_rLsM0MEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rLta8sEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rLupEMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLta88EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rLupEcEPEeiQaYZfZQMLYg" base_Element="_rLta88EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rLupEsEPEeiQaYZfZQMLYg" base_Element="_rLta88EPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rLupE8EPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rLxFUcEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLxFUMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLyTcMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rLxsYMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rLzhkMEPEeiQaYZfZQMLYg" genericsValue="ReturnT" base_Element="_rLy6gMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rL0vsMEPEeiQaYZfZQMLYg" genericsValue="ReturnT" base_Element="_rL0IoMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rL_HwMEPEeiQaYZfZQMLYg" base_Element="_rL-gsMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rMAV4MEPEeiQaYZfZQMLYg" base_Element="_rL_u0MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rMA88MEPEeiQaYZfZQMLYg" base_Element="_rL_u0MEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rMA88cEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rMBkAcEPEeiQaYZfZQMLYg" base_Element="_rMA88sEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rMBkAsEPEeiQaYZfZQMLYg" base_Element="_rMA88sEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rMBkA8EPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rMCyIMEPEeiQaYZfZQMLYg" base_Element="_rMCLEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rMCyIcEPEeiQaYZfZQMLYg" base_Element="_rMCLEMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rMCyIsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rMI4wcEPEeiQaYZfZQMLYg" base_Element="_rMIRtMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rMI4wsEPEeiQaYZfZQMLYg" base_Element="_rMIRtMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rMJf0MEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rMKG4MEPEeiQaYZfZQMLYg" base_Element="_rMJf0cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rMKG4cEPEeiQaYZfZQMLYg" base_Element="_rMJf0cEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rMKG4sEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rMLVAMEPEeiQaYZfZQMLYg" base_Element="_rMKt8MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rMLVAcEPEeiQaYZfZQMLYg" base_Element="_rMKt8MEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rMLVAsEPEeiQaYZfZQMLYg" name="SuppressWarnings">
      <annotationParameters xmi:id="_rMLVA8EPEeiQaYZfZQMLYg" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_rdjY48EPEeiQaYZfZQMLYg" value="&quot;deprecation&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rMWUI8EPEeiQaYZfZQMLYg" base_Element="_rMWUIMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rMdo4MEPEeiQaYZfZQMLYg" genericsValue="TDropListItem, TPaintDropListItem" base_Element="_rMdB0MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rMjIcMEPEeiQaYZfZQMLYg" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_rMihYMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rXyIEMEPEeiQaYZfZQMLYg" base_Element="_rXxhAMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rXyvIMEPEeiQaYZfZQMLYg" base_Element="_rXyIEcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rXyvIsEPEeiQaYZfZQMLYg" base_Element="_rXyvIcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rX0kUMEPEeiQaYZfZQMLYg" base_Element="_rXz9QMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rX0kUsEPEeiQaYZfZQMLYg" base_Element="_rX0kUcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rX1LYcEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rX1LYMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rX2Zg8EPEeiQaYZfZQMLYg" base_Element="_rX2ZgMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rX3AkMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rX2ZgcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rX3AkcEPEeiQaYZfZQMLYg" base_Element="_rX2ZgMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rX3AksEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rX4OsMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rX3nocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rX5c0MEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rX41wsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rX6D4MEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rX5c0sEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rX9HMMEPEeiQaYZfZQMLYg" base_Element="_rX8gIMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rX9HMsEPEeiQaYZfZQMLYg" base_Element="_rX9HMcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rX_jcMEPEeiQaYZfZQMLYg" base_Element="_rX9HM8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rYBYoMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rYAxk8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rYB_sMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rYBYosEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rYDN0MEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rYCmwsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rYD04MEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rYCmw8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rYEb8MEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rYCmxMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:StyledElement xmi:id="_rYGRIsEPEeiQaYZfZQMLYg" base_Element="_rYFqEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rYG4MMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rYGRIcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rYHfQsEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rYHfQMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rYKikMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rYJ7gcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rYLJoMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rYKiksEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rYLwssEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rYLwscEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rYM-0MEPEeiQaYZfZQMLYg" base_Element="_rYMXwcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rYPbEsEPEeiQaYZfZQMLYg" base_Element="_rYPbEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rYQCIMEPEeiQaYZfZQMLYg" base_Element="_rYPbEMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rYQCIcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rYTFcMEPEeiQaYZfZQMLYg" base_Element="_rYSeYMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rYTsgMEPEeiQaYZfZQMLYg" base_Element="_rYTFccEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rYUTkMEPEeiQaYZfZQMLYg" base_Element="_rYTsgcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rYU6oMEPEeiQaYZfZQMLYg" base_Element="_rYUTkcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rYVhsMEPEeiQaYZfZQMLYg" base_Element="_rYU6ocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rYVhssEPEeiQaYZfZQMLYg" base_Element="_rYVhscEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rYWv0sEPEeiQaYZfZQMLYg" base_Element="_rYWv0MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rYXW4MEPEeiQaYZfZQMLYg" base_Element="_rYWv0MEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rYXW4cEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rYZME8EPEeiQaYZfZQMLYg" base_Element="_rYYlAMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Array xmi:id="_rYZzIMEPEeiQaYZfZQMLYg" base_Element="_rYZMEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rYZzI8EPEeiQaYZfZQMLYg" base_Element="_rYZzIcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rYaaMMEPEeiQaYZfZQMLYg" base_Element="_rYZzIcEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rYaaMcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rYbBQcEPEeiQaYZfZQMLYg" base_Element="_rYbBQMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rYeEksEPEeiQaYZfZQMLYg" base_Element="_rYddgMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Array xmi:id="_rYeroMEPEeiQaYZfZQMLYg" base_Element="_rYddgcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rYlZUMEPEeiQaYZfZQMLYg" base_Element="_rYkyQMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rYn1kcEPEeiQaYZfZQMLYg" base_Element="_rYn1kMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rYsHAMEPEeiQaYZfZQMLYg" base_Element="_rYrf8cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rYsuEsEPEeiQaYZfZQMLYg" base_Element="_rYsuEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rYsuE8EPEeiQaYZfZQMLYg" base_Element="_rYsuEMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rYtVIMEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rY0C0MEPEeiQaYZfZQMLYg" base_Element="_rYzbwMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rY14BcEPEeiQaYZfZQMLYg" base_Element="_rY14AsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rY2fEMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rY14BMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rY2fEcEPEeiQaYZfZQMLYg" base_Element="_rY14AsEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rY2fEsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rY3tMMEPEeiQaYZfZQMLYg" base_Element="_rY3GIMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rY3tMsEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rY3tMcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rY4UQsEPEeiQaYZfZQMLYg" base_Element="_rY4UQMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rY47UMEPEeiQaYZfZQMLYg" base_Element="_rY4UQMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rY47UcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rY47VcEPEeiQaYZfZQMLYg" base_Element="_rY47UsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rY5iYMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rY47VMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rY5iYcEPEeiQaYZfZQMLYg" base_Element="_rY47UsEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rY5iYsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rY6JccEPEeiQaYZfZQMLYg" base_Element="_rY6JcMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rY7-oMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rY7XkcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rY9z08EPEeiQaYZfZQMLYg" base_Element="_rY9z0MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rY-a4MEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rY9z0sEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rY_B8MEPEeiQaYZfZQMLYg" base_Element="_rY9z0MEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rY_B8cEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZAQEMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rY_pBcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZEhgMEPEeiQaYZfZQMLYg" base_Element="_rZD6csEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZEhg8EPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rZD6dMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZFIkMEPEeiQaYZfZQMLYg" base_Element="_rZD6csEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZFIkcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZFvpMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rZFvo8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZIy88EPEeiQaYZfZQMLYg" base_Element="_rZIy8MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZJaAMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rZIy8sEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZJaAcEPEeiQaYZfZQMLYg" base_Element="_rZIy8MEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZJaAsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZKBEcEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZKBEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZKoIsEPEeiQaYZfZQMLYg" base_Element="_rZKoIMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZKoI8EPEeiQaYZfZQMLYg" base_Element="_rZKoIMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZKoJMEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZLPM8EPEeiQaYZfZQMLYg" base_Element="_rZLPMMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZL2QMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZLPMsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZL2QcEPEeiQaYZfZQMLYg" base_Element="_rZLPMMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZL2QsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZMdUMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZL2Q8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZNEYMEPEeiQaYZfZQMLYg" base_Element="_rZMdUcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZNEYcEPEeiQaYZfZQMLYg" base_Element="_rZMdUcEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZNEYsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZNrccEPEeiQaYZfZQMLYg" base_Element="_rZNEY8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZOSgMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZNrcMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZOSgcEPEeiQaYZfZQMLYg" base_Element="_rZNEY8EPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZOSgsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rZPgoMEPEeiQaYZfZQMLYg" base_Element="_rZO5kMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rZPgosEPEeiQaYZfZQMLYg" base_Element="_rZPgocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZQuwsEPEeiQaYZfZQMLYg" base_Element="_rZQHscEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZRV0MEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rZQuwcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZRV0cEPEeiQaYZfZQMLYg" base_Element="_rZQHscEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZRV0sEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZTyEcEPEeiQaYZfZQMLYg" base_Element="_rZTLAcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZUZIMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZTyEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZUZIcEPEeiQaYZfZQMLYg" base_Element="_rZTLAcEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZUZIsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZVnQcEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZVnQMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZW1YMEPEeiQaYZfZQMLYg" base_Element="_rZWOUsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZW1YcEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZWOVMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZW1YsEPEeiQaYZfZQMLYg" base_Element="_rZWOUsEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZW1Y8EPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZYDhcEPEeiQaYZfZQMLYg" base_Element="_rZYDgMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZYqkMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rZYDg8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZYqkcEPEeiQaYZfZQMLYg" base_Element="_rZYDgMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZYqksEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZZRoMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZYqk8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZZ4tcEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZZ4sMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZafwMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZZ4scEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZafxMEPEeiQaYZfZQMLYg" base_Element="_rZafwcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZbt4MEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZafw8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZbt4cEPEeiQaYZfZQMLYg" base_Element="_rZafwcEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZbt4sEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZcU8cEPEeiQaYZfZQMLYg" base_Element="_rZbt48EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZcU8sEPEeiQaYZfZQMLYg" base_Element="_rZbt48EPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZcU88EPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZdjEMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rZc8AMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZeKIsEPEeiQaYZfZQMLYg" base_Element="_rZeKIMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZexMMEPEeiQaYZfZQMLYg" base_Element="_rZeKIMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZexMcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZfYQMEPEeiQaYZfZQMLYg" base_Element="_rZexMsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZf_UMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rZexNMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZf_UcEPEeiQaYZfZQMLYg" base_Element="_rZexMsEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZf_UsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZh0gMEPEeiQaYZfZQMLYg" base_Element="_rZhNcMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZh0gcEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZhNcsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZibkMEPEeiQaYZfZQMLYg" base_Element="_rZhNcMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZibkcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZjpsMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rZjCosEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZkQwcEPEeiQaYZfZQMLYg" base_Element="_rZjpscEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZkQwsEPEeiQaYZfZQMLYg" base_Element="_rZjpscEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZk30MEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZmF8MEPEeiQaYZfZQMLYg" base_Element="_rZk30cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZmtAMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rZk308EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZmtAcEPEeiQaYZfZQMLYg" base_Element="_rZk30cEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZmtAsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZpJQMEPEeiQaYZfZQMLYg" base_Element="_rZoiMcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZpJQ8EPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rZoiM8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZpwUMEPEeiQaYZfZQMLYg" base_Element="_rZoiMcEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZpwUcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZq-cMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZqXYsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZrlgMEPEeiQaYZfZQMLYg" base_Element="_rZq-ccEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZrlgcEPEeiQaYZfZQMLYg" base_Element="_rZq-ccEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZrlgsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZrlhsEPEeiQaYZfZQMLYg" base_Element="_rZrlg8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZsMkMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZrlhcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZsMkcEPEeiQaYZfZQMLYg" base_Element="_rZrlg8EPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZsMksEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZszocEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZszoMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZtasMEPEeiQaYZfZQMLYg" base_Element="_rZszosEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZtascEPEeiQaYZfZQMLYg" base_Element="_rZszosEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZtassEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZuBwMEPEeiQaYZfZQMLYg" base_Element="_rZtas8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZuBwcEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZtatcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZuBwsEPEeiQaYZfZQMLYg" base_Element="_rZtas8EPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZuBw8EPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZuo0cEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZuo0MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZvP48EPEeiQaYZfZQMLYg" base_Element="_rZvP4MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZv28MEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZvP4sEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZv28cEPEeiQaYZfZQMLYg" base_Element="_rZvP4MEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZv28sEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZweAMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZv29MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZxFEsEPEeiQaYZfZQMLYg" base_Element="_rZxFEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZxFE8EPEeiQaYZfZQMLYg" base_Element="_rZxFEMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZxsIMEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rZyTMMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZxsIcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZyTM8EPEeiQaYZfZQMLYg" base_Element="_rZyTMcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZy6QMEPEeiQaYZfZQMLYg" base_Element="_rZyTMcEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZy6QcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZzhUMEPEeiQaYZfZQMLYg" base_Element="_rZy6QsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZ0IYMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZy6RMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZ0IYcEPEeiQaYZfZQMLYg" base_Element="_rZy6QsEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZ0IYsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZ19ksEPEeiQaYZfZQMLYg" base_Element="_rZ1WgcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZ2koMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rZ19kcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZ2kocEPEeiQaYZfZQMLYg" base_Element="_rZ1WgcEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZ2kosEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZ5n8MEPEeiQaYZfZQMLYg" base_Element="_rZ5A4cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZ6PAMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rZ5A48EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZ6PAcEPEeiQaYZfZQMLYg" base_Element="_rZ5A4cEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rZ6PAsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rZ7dIMEPEeiQaYZfZQMLYg" base_Element="_rZ62FMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZ8EMMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZ7dIsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZ8rQMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZ8EMcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZ9SUMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZ8EMsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rZ-gcMEPEeiQaYZfZQMLYg" base_Element="_rZ95YMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rZ-gcsEPEeiQaYZfZQMLYg" base_Element="_rZ-gccEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZ_HgMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZ-gc8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rZ_ukcEPEeiQaYZfZQMLYg" base_Element="_rZ_HgcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rZ_uksEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rZ_HgsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rZ_uk8EPEeiQaYZfZQMLYg" base_Element="_rZ_HgcEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_raAVoMEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_raAVo8EPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_raAVocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_raA8sMEPEeiQaYZfZQMLYg" base_Element="_raAVocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_raA8scEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_raAVosEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_raA8ssEPEeiQaYZfZQMLYg" base_Element="_raAVocEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_raA8s8EPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_raCK0MEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_raBjwMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_raCK0sEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_raCK0cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raCx4cEPEeiQaYZfZQMLYg" base_Element="_raCx4MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raDY8MEPEeiQaYZfZQMLYg" base_Element="_raCx4sEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raDY8sEPEeiQaYZfZQMLYg" base_Element="_raDY8cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_raEAAcEPEeiQaYZfZQMLYg" genericsValue="ReturnT" base_Element="_raEAAMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raNJ8cEPEeiQaYZfZQMLYg" base_Element="_raNJ8MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raNxAcEPEeiQaYZfZQMLYg" base_Element="_raNxAMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raOYEMEPEeiQaYZfZQMLYg" base_Element="_raNxAsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raO_IcEPEeiQaYZfZQMLYg" base_Element="_raO_IMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raPmMMEPEeiQaYZfZQMLYg" base_Element="_raO_IsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raQNQMEPEeiQaYZfZQMLYg" base_Element="_raPmMcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raQ0UMEPEeiQaYZfZQMLYg" base_Element="_raQNQcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raQ0UsEPEeiQaYZfZQMLYg" base_Element="_raQ0UcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raRbYMEPEeiQaYZfZQMLYg" base_Element="_raQ0U8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raSCcMEPEeiQaYZfZQMLYg" base_Element="_raRbYcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raSpgMEPEeiQaYZfZQMLYg" base_Element="_raSCccEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_raSpgsEPEeiQaYZfZQMLYg" base_Element="_raSpgcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_raVFwMEPEeiQaYZfZQMLYg" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_raT3ocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_ranZoMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_ramylsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ras5MMEPEeiQaYZfZQMLYg" base_Element="_rasSIMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_ras5McEPEeiQaYZfZQMLYg" base_Element="_rasSIMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_ras5MsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ratgRMEPEeiQaYZfZQMLYg" base_Element="_ratgQMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rauHUMEPEeiQaYZfZQMLYg" base_Element="_ratgQMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rauHUcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rav8gMEPEeiQaYZfZQMLYg" base_Element="_ravVcMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rav8gcEPEeiQaYZfZQMLYg" base_Element="_ravVcMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rav8gsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rayYwsEPEeiQaYZfZQMLYg" base_Element="_raxxtcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_ray_0MEPEeiQaYZfZQMLYg" base_Element="_raxxtcEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_ray_0cEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ra01AMEPEeiQaYZfZQMLYg" base_Element="_ra0N8MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_ra01AcEPEeiQaYZfZQMLYg" base_Element="_ra0N8MEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_ra01AsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ra2DIsEPEeiQaYZfZQMLYg" base_Element="_ra1cEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Array xmi:id="_ra2DJcEPEeiQaYZfZQMLYg" base_Element="_ra1cEsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ra3RQMEPEeiQaYZfZQMLYg" base_Element="_ra2qMMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_ra34UMEPEeiQaYZfZQMLYg" base_Element="_ra2qMMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_ra34UcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ra5thMEPEeiQaYZfZQMLYg" base_Element="_ra5tgMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_ra5thcEPEeiQaYZfZQMLYg" base_Element="_ra5tgMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_ra6UkMEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ra67oMEPEeiQaYZfZQMLYg" base_Element="_ra6UkcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_ra67ocEPEeiQaYZfZQMLYg" base_Element="_ra6UkcEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_ra67osEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ra7itcEPEeiQaYZfZQMLYg" base_Element="_ra7isMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Array xmi:id="_ra8JwcEPEeiQaYZfZQMLYg" base_Element="_ra7issEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ra8w0MEPEeiQaYZfZQMLYg" base_Element="_ra8JwsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_ra8w0cEPEeiQaYZfZQMLYg" base_Element="_ra8JwsEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_ra8w0sEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ra-mAMEPEeiQaYZfZQMLYg" base_Element="_ra9-9cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_ra-mAcEPEeiQaYZfZQMLYg" base_Element="_ra9-9cEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_ra-mAsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rbBpUMEPEeiQaYZfZQMLYg" base_Element="_rbBCQMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Array xmi:id="_rbBpU8EPEeiQaYZfZQMLYg" base_Element="_rbBCQ8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rbEFk8EPEeiQaYZfZQMLYg" base_Element="_rbEFkMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rbEsoMEPEeiQaYZfZQMLYg" base_Element="_rbEFkMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rbEsocEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rbUkQMEPEeiQaYZfZQMLYg" base_Element="_rbT9MMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rbVyYMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rbVLUcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rbXnkMEPEeiQaYZfZQMLYg" base_Element="_rbXAgMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rbYOoMEPEeiQaYZfZQMLYg" base_Element="_rbXnkcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rbYOocEPEeiQaYZfZQMLYg" base_Element="_rbXnkcEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rbYOosEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rbY1ssEPEeiQaYZfZQMLYg" base_Element="_rbY1sMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rbcgEMEPEeiQaYZfZQMLYg" base_Element="_rbY1sMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rbcgEcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rbdHIcEPEeiQaYZfZQMLYg" base_Element="_rbdHIMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rbduMcEPEeiQaYZfZQMLYg" base_Element="_rbduMMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rbeVQcEPEeiQaYZfZQMLYg" base_Element="_rbduMsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Array xmi:id="_rbeVQ8EPEeiQaYZfZQMLYg" base_Element="_rbduNMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rbe8UcEPEeiQaYZfZQMLYg" base_Element="_rbe8UMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rbgKcMEPEeiQaYZfZQMLYg" genericsValue="Object[], ReturnT" base_Element="_rbfjYcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rbgxgcEPEeiQaYZfZQMLYg" base_Element="_rbgxgMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rbhYlMEPEeiQaYZfZQMLYg" base_Element="_rbhYkMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Array xmi:id="_rbh_oMEPEeiQaYZfZQMLYg" base_Element="_rbhYksEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rbh_ocEPEeiQaYZfZQMLYg" base_Element="_rbhYkMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rbh_osEPEeiQaYZfZQMLYg" name="Override"/>
    <annotations xmi:id="_rbh_o8EPEeiQaYZfZQMLYg" name="SuppressWarnings">
      <annotationParameters xmi:id="_rbh_pMEPEeiQaYZfZQMLYg" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_rdix0MEPEeiQaYZfZQMLYg" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rbimsMEPEeiQaYZfZQMLYg" base_Element="_rbh_pcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rbjNwMEPEeiQaYZfZQMLYg" base_Element="_rbimscEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rbj00MEPEeiQaYZfZQMLYg" genericsValue="?" base_Element="_rbjNwcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rbkb4MEPEeiQaYZfZQMLYg" genericsValue="?" base_Element="_rbjNwsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Array xmi:id="_rbkb4sEPEeiQaYZfZQMLYg" base_Element="_rbjNw8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rbmREMEPEeiQaYZfZQMLYg" genericsValue="?" base_Element="_rblC8cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rbrJkMEPEeiQaYZfZQMLYg" base_Element="_rbqigMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rbrJkcEPEeiQaYZfZQMLYg" base_Element="_rbqigMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rbrJksEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rbrwosEPEeiQaYZfZQMLYg" base_Element="_rbrJk8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rbrwo8EPEeiQaYZfZQMLYg" base_Element="_rbrJk8EPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rbrwpMEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rbsXs8EPEeiQaYZfZQMLYg" base_Element="_rbsXsMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rbs-wMEPEeiQaYZfZQMLYg" base_Element="_rbsXsMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rbs-wcEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rbtl0MEPEeiQaYZfZQMLYg" base_Element="_rbs-wsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rbtl0cEPEeiQaYZfZQMLYg" base_Element="_rbs-wsEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rbtl0sEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rbuM48EPEeiQaYZfZQMLYg" base_Element="_rbtl08EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rbuz8MEPEeiQaYZfZQMLYg" base_Element="_rbtl08EPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rbuz8cEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rbyeUMEPEeiQaYZfZQMLYg" base_Element="_rbxQMMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Annotations xmi:id="_rbyeUcEPEeiQaYZfZQMLYg" base_Element="_rbxQMMEPEeiQaYZfZQMLYg">
    <annotations xmi:id="_rbyeUsEPEeiQaYZfZQMLYg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rbzscMEPEeiQaYZfZQMLYg" base_Element="_rbzFYMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:StyledElement xmi:id="_rbzsc8EPEeiQaYZfZQMLYg" base_Element="_rbzsccEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rb6aIMEPEeiQaYZfZQMLYg" base_Element="_rb5zEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rb7BMMEPEeiQaYZfZQMLYg" base_Element="_rb6aIsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcGnYMEPEeiQaYZfZQMLYg" genericsValue="IUpdateStrategyFac&lt;IBallCmd>, IPaintStrategyFac" base_Element="_rcGAUMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcGnYcEPEeiQaYZfZQMLYg" base_Element="_rcGAUMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcHOcMEPEeiQaYZfZQMLYg" base_Element="_rcGnYsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcH1gcEPEeiQaYZfZQMLYg" base_Element="_rcH1gMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcIckcEPEeiQaYZfZQMLYg" base_Element="_rcIckMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcJDoMEPEeiQaYZfZQMLYg" base_Element="_rcIcksEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcJqsMEPEeiQaYZfZQMLYg" base_Element="_rcJDocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcK40MEPEeiQaYZfZQMLYg" base_Element="_rcKRwMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcLf4MEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rcK40cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcNVEMEPEeiQaYZfZQMLYg" base_Element="_rcMuAMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcN8IMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rcNVEcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcN8IsEPEeiQaYZfZQMLYg" base_Element="_rcNVEcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcOjMMEPEeiQaYZfZQMLYg" base_Element="_rcN8I8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcOjM8EPEeiQaYZfZQMLYg" base_Element="_rcOjMcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcPKQMEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rcOjNMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcPKQsEPEeiQaYZfZQMLYg" base_Element="_rcOjNMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcPxUcEPEeiQaYZfZQMLYg" genericsValue="IBallCmd" base_Element="_rcPxUMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcQYYMEPEeiQaYZfZQMLYg" base_Element="_rcPxUMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcQYYsEPEeiQaYZfZQMLYg" genericsValue="IUpdateStrategy&lt;IBallCmd>" base_Element="_rcQYYcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcQ_ccEPEeiQaYZfZQMLYg" base_Element="_rcQYYcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcQ_dMEPEeiQaYZfZQMLYg" base_Element="_rcQ_csEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcRmgcEPEeiQaYZfZQMLYg" genericsValue="IPaintStrategy" base_Element="_rcRmgMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcSNkMEPEeiQaYZfZQMLYg" base_Element="_rcRmgMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcS0oMEPEeiQaYZfZQMLYg" base_Element="_rcSNkcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcUCwMEPEeiQaYZfZQMLYg" base_Element="_rcTbsMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcUCwsEPEeiQaYZfZQMLYg" base_Element="_rcUCwcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcUp0sEPEeiQaYZfZQMLYg" base_Element="_rcUp0MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcVQ4MEPEeiQaYZfZQMLYg" base_Element="_rcUp08EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcVQ4sEPEeiQaYZfZQMLYg" base_Element="_rcVQ4cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcV38MEPEeiQaYZfZQMLYg" base_Element="_rcVQ48EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcV38sEPEeiQaYZfZQMLYg" base_Element="_rcV38cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Array xmi:id="_rcWfAsEPEeiQaYZfZQMLYg" base_Element="_rcWfAMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcWfA8EPEeiQaYZfZQMLYg" base_Element="_rcWfAMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcXGEcEPEeiQaYZfZQMLYg" base_Element="_rcXGEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Array xmi:id="_rcXtI8EPEeiQaYZfZQMLYg" base_Element="_rcXtIcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcYUMsEPEeiQaYZfZQMLYg" base_Element="_rcYUMMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Array xmi:id="_rcYUNcEPEeiQaYZfZQMLYg" base_Element="_rcYUM8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcY7QsEPEeiQaYZfZQMLYg" base_Element="_rcY7QMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcZiUMEPEeiQaYZfZQMLYg" base_Element="_rcY7Q8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcZiU8EPEeiQaYZfZQMLYg" base_Element="_rcZiUcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcaJYMEPEeiQaYZfZQMLYg" base_Element="_rcZiVMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Array xmi:id="_rcawcMEPEeiQaYZfZQMLYg" base_Element="_rcaJY8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcawdMEPEeiQaYZfZQMLYg" base_Element="_rcawcsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcbXgcEPEeiQaYZfZQMLYg" base_Element="_rcbXgMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcbXg8EPEeiQaYZfZQMLYg" base_Element="_rcbXgsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcclocEPEeiQaYZfZQMLYg" base_Element="_rcb-kMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcdzwMEPEeiQaYZfZQMLYg" base_Element="_rcdMsMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcea0MEPEeiQaYZfZQMLYg" base_Element="_rcdzwcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcfB4MEPEeiQaYZfZQMLYg" base_Element="_rcea0cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcfo8MEPEeiQaYZfZQMLYg" base_Element="_rcfB4cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcfo88EPEeiQaYZfZQMLYg" base_Element="_rcfo8cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcgQAsEPEeiQaYZfZQMLYg" base_Element="_rcgQAMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcg3EMEPEeiQaYZfZQMLYg" base_Element="_rcgQA8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcheIMEPEeiQaYZfZQMLYg" base_Element="_rcg3EcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rciFMMEPEeiQaYZfZQMLYg" base_Element="_rcheIcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcisQMEPEeiQaYZfZQMLYg" base_Element="_rciFMcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rcjTUMEPEeiQaYZfZQMLYg" base_Element="_rcisQcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcj6YsEPEeiQaYZfZQMLYg" base_Element="_rcj6YMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rclIgMEPEeiQaYZfZQMLYg" base_Element="_rckhccEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rclIgsEPEeiQaYZfZQMLYg" base_Element="_rclIgcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rclvkcEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rclvkMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcmWoMEPEeiQaYZfZQMLYg" base_Element="_rclvkMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcm9sMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rcmWocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcnkwMEPEeiQaYZfZQMLYg" base_Element="_rcmWocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcoL0sEPEeiQaYZfZQMLYg" base_Element="_rcoL0MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcpZ8cEPEeiQaYZfZQMLYg" base_Element="_rcoy4cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcqBAcEPEeiQaYZfZQMLYg" base_Element="_rcpZ8sEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcrPIMEPEeiQaYZfZQMLYg" genericsValue="TMsg" base_Element="_rcqoEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcrPIsEPEeiQaYZfZQMLYg" base_Element="_rcqoEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcr2MsEPEeiQaYZfZQMLYg" base_Element="_rcr2MMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcsdQsEPEeiQaYZfZQMLYg" base_Element="_rcsdQMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rctrYMEPEeiQaYZfZQMLYg" genericsValue="IObserver&lt;TMsg>" base_Element="_rctEUMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rctrYsEPEeiQaYZfZQMLYg" base_Element="_rctEUMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcuScMEPEeiQaYZfZQMLYg" genericsValue="IObserver&lt;TMsg>" base_Element="_rctrY8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcu5gMEPEeiQaYZfZQMLYg" base_Element="_rctrY8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcwHoMEPEeiQaYZfZQMLYg" genericsValue="?" base_Element="_rcvgkMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcwusMEPEeiQaYZfZQMLYg" base_Element="_rcvgkMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rcwussEPEeiQaYZfZQMLYg" base_Element="_rcwuscEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcxVwMEPEeiQaYZfZQMLYg" genericsValue="?" base_Element="_rcwus8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rcyj4MEPEeiQaYZfZQMLYg" genericsValue="Object[], ReturnT" base_Element="_rcx80MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rcyj4cEPEeiQaYZfZQMLYg" base_Element="_rcx80MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rczK8cEPEeiQaYZfZQMLYg" base_Element="_rcyj4sEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rczyAMEPEeiQaYZfZQMLYg" base_Element="_rczK8sEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rczyAsEPEeiQaYZfZQMLYg" base_Element="_rczyAcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc0ZEcEPEeiQaYZfZQMLYg" base_Element="_rc0ZEMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc1AIMEPEeiQaYZfZQMLYg" base_Element="_rc0ZEsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc1AI8EPEeiQaYZfZQMLYg" base_Element="_rc1AIcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc1nMcEPEeiQaYZfZQMLYg" base_Element="_rc1nMMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc1nM8EPEeiQaYZfZQMLYg" base_Element="_rc1nMsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc1nNcEPEeiQaYZfZQMLYg" base_Element="_rc1nNMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc2OQsEPEeiQaYZfZQMLYg" base_Element="_rc2OQMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc21U8EPEeiQaYZfZQMLYg" base_Element="_rc21UsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc3cYcEPEeiQaYZfZQMLYg" base_Element="_rc3cYMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rc4DcMEPEeiQaYZfZQMLYg" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_rc3cYsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc4DccEPEeiQaYZfZQMLYg" base_Element="_rc3cYsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc4Dc8EPEeiQaYZfZQMLYg" base_Element="_rc4DcsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc4qgcEPEeiQaYZfZQMLYg" base_Element="_rc4qgMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc4qg8EPEeiQaYZfZQMLYg" base_Element="_rc4qgsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc5RkMEPEeiQaYZfZQMLYg" base_Element="_rc4qhMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rc5RksEPEeiQaYZfZQMLYg" genericsValue="TStrategyDropListItem" base_Element="_rc5RkcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc54oMEPEeiQaYZfZQMLYg" base_Element="_rc5RkcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rc54osEPEeiQaYZfZQMLYg" genericsValue="TStrategyDropListItem" base_Element="_rc54ocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc54o8EPEeiQaYZfZQMLYg" base_Element="_rc54ocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc6fscEPEeiQaYZfZQMLYg" base_Element="_rc6fsMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc6fs8EPEeiQaYZfZQMLYg" base_Element="_rc6fssEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc7GwMEPEeiQaYZfZQMLYg" base_Element="_rc6ftMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc7GwsEPEeiQaYZfZQMLYg" base_Element="_rc7GwcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc7GxMEPEeiQaYZfZQMLYg" base_Element="_rc7Gw8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc7t0MEPEeiQaYZfZQMLYg" base_Element="_rc7GxcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc7t0sEPEeiQaYZfZQMLYg" base_Element="_rc7t0cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc8U4cEPEeiQaYZfZQMLYg" base_Element="_rc8U4MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc8U48EPEeiQaYZfZQMLYg" base_Element="_rc8U4sEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Generics xmi:id="_rc878MEPEeiQaYZfZQMLYg" genericsValue="TPaintDropListItem" base_Element="_rc8U5MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc878cEPEeiQaYZfZQMLYg" base_Element="_rc8U5MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rd1FsMEPEeiQaYZfZQMLYg" base_Element="_rd0eoMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rd1Fs8EPEeiQaYZfZQMLYg" base_Element="_rd1FscEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rd1swsEPEeiQaYZfZQMLYg" base_Element="_rd1swMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rd2T0MEPEeiQaYZfZQMLYg" base_Element="_rd1sw8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rd264MEPEeiQaYZfZQMLYg" base_Element="_rd2T0cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rd3h8MEPEeiQaYZfZQMLYg" base_Element="_rd264cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rd4JAMEPEeiQaYZfZQMLYg" base_Element="_rd3h8cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rd4wEMEPEeiQaYZfZQMLYg" base_Element="_rd4JAcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rd5XIcEPEeiQaYZfZQMLYg" base_Element="_rd4wEcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reYfUMEPEeiQaYZfZQMLYg" base_Element="_rd5XIsEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reZGYMEPEeiQaYZfZQMLYg" base_Element="_reYfUcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reZtcMEPEeiQaYZfZQMLYg" base_Element="_reZGYcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reaUgMEPEeiQaYZfZQMLYg" base_Element="_reZtccEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rea7kMEPEeiQaYZfZQMLYg" base_Element="_reaUgcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rebioMEPEeiQaYZfZQMLYg" base_Element="_rea7kcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_recJsMEPEeiQaYZfZQMLYg" base_Element="_rebiocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_redX0MEPEeiQaYZfZQMLYg" base_Element="_recwwMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_red-4MEPEeiQaYZfZQMLYg" base_Element="_redX0cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_red-48EPEeiQaYZfZQMLYg" base_Element="_red-4cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reel8MEPEeiQaYZfZQMLYg" base_Element="_red-5MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_refNAMEPEeiQaYZfZQMLYg" base_Element="_reel8cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_refNA8EPEeiQaYZfZQMLYg" base_Element="_refNAcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_ref0EsEPEeiQaYZfZQMLYg" base_Element="_ref0EMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_regbIMEPEeiQaYZfZQMLYg" base_Element="_ref0E8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rehCMMEPEeiQaYZfZQMLYg" base_Element="_regbIcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rehpQMEPEeiQaYZfZQMLYg" base_Element="_rehCMcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reiQUMEPEeiQaYZfZQMLYg" base_Element="_rehpQcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rei3YMEPEeiQaYZfZQMLYg" base_Element="_reiQUcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rejecMEPEeiQaYZfZQMLYg" base_Element="_rei3YcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rekFgMEPEeiQaYZfZQMLYg" base_Element="_rejeccEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rekskMEPEeiQaYZfZQMLYg" base_Element="_rekFgcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reksk8EPEeiQaYZfZQMLYg" base_Element="_rekskcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_relToMEPEeiQaYZfZQMLYg" base_Element="_rekslMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rel6sMEPEeiQaYZfZQMLYg" base_Element="_relTocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_remhwMEPEeiQaYZfZQMLYg" base_Element="_rel6scEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reqzMMEPEeiQaYZfZQMLYg" base_Element="_reo-AMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reraQMEPEeiQaYZfZQMLYg" base_Element="_reqzMcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_resBUMEPEeiQaYZfZQMLYg" base_Element="_reraQcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_resoYMEPEeiQaYZfZQMLYg" base_Element="_resBUcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_retPcMEPEeiQaYZfZQMLYg" base_Element="_resoYcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_ret2gMEPEeiQaYZfZQMLYg" base_Element="_retPccEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_ret2g8EPEeiQaYZfZQMLYg" base_Element="_ret2gcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reudkMEPEeiQaYZfZQMLYg" base_Element="_ret2hMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reudk8EPEeiQaYZfZQMLYg" base_Element="_reudkcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_revEoMEPEeiQaYZfZQMLYg" base_Element="_reudlMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_revrsMEPEeiQaYZfZQMLYg" base_Element="_revEocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rewSwMEPEeiQaYZfZQMLYg" base_Element="_revrscEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rew50MEPEeiQaYZfZQMLYg" base_Element="_rewSwcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rexg4MEPEeiQaYZfZQMLYg" base_Element="_rew50cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reyH8MEPEeiQaYZfZQMLYg" base_Element="_rexg4cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reyvAMEPEeiQaYZfZQMLYg" base_Element="_reyH8cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_reyvA8EPEeiQaYZfZQMLYg" base_Element="_reyvAcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rezWEMEPEeiQaYZfZQMLYg" base_Element="_reyvBMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_rez9IMEPEeiQaYZfZQMLYg" base_Element="_rezWEcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re0kMMEPEeiQaYZfZQMLYg" base_Element="_rez9IcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re1LQMEPEeiQaYZfZQMLYg" base_Element="_re0kMcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re1LQ8EPEeiQaYZfZQMLYg" base_Element="_re1LQcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re2ZYMEPEeiQaYZfZQMLYg" base_Element="_re1yUMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re2ZY8EPEeiQaYZfZQMLYg" base_Element="_re2ZYcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re3AcMEPEeiQaYZfZQMLYg" base_Element="_re2ZZMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re3ngMEPEeiQaYZfZQMLYg" base_Element="_re3AccEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re4OkMEPEeiQaYZfZQMLYg" base_Element="_re3ngcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re41oMEPEeiQaYZfZQMLYg" base_Element="_re4OkcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re41o8EPEeiQaYZfZQMLYg" base_Element="_re41ocEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re5cssEPEeiQaYZfZQMLYg" base_Element="_re5csMEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re6DwMEPEeiQaYZfZQMLYg" base_Element="_re5cs8EPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re6q0MEPEeiQaYZfZQMLYg" base_Element="_re6DwcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re7R4MEPEeiQaYZfZQMLYg" base_Element="_re6q0cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re748MEPEeiQaYZfZQMLYg" base_Element="_re7R4cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re7488EPEeiQaYZfZQMLYg" base_Element="_re748cEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re8gAMEPEeiQaYZfZQMLYg" base_Element="_re749MEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_re8gA8EPEeiQaYZfZQMLYg" base_Element="_re8gAcEPEeiQaYZfZQMLYg"/>
  <UMLLabProfile:Reference xmi:id="_gSMOsMFGEei0Sok_Gsjhng" base_Element="_gSLnoMFGEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_gSM1wMFGEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_gSMOscFGEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_gSNc0MFGEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_gSM1wcFGEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_gSOq8MFGEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_gSOD4MFGEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_gSP5EMFGEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_gSPSAMFGEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_gSRHMMFGEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_gSQgIMFGEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_gSUKgMFGEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_gSTjcMFGEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_gSUxkcFGEei0Sok_Gsjhng" genericsValue="TMsg" base_Element="_gSUxkMFGEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_gSVYocFGEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_gSVYoMFGEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_gSWmwMFGEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_gSV_sMFGEei0Sok_Gsjhng"/>
  <UMLLabProfile:Generics xmi:id="_gSX04MFGEei0Sok_Gsjhng" genericsValue="IBallCmd" base_Element="_gSXN0MFGEei0Sok_Gsjhng"/>
  <UMLLabProfile:Reference xmi:id="_gSoTkMFGEei0Sok_Gsjhng" base_Element="_gSnFcMFGEei0Sok_Gsjhng"/>
</xmi:XMI>
