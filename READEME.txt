---------------------------------------------------------------------------------------------------------
Members: Peter Dulworth    psd2
         Rocky Wu          lw31

---------------------------------------------------------------------------------------------------------
Use the Eclipse Run capabilities from the Controller.java file in the Java Perspective
to open the GUI.

---------------------------------------------------------------------------------------------------------
This program demonstrates the capabilities of a command-dispatching architecture, 
especially in how it enables inter-ball communications and interactions.

---------------------------------------------------------------------------------------------------------
The following different types of strategies are available for use:

[General Strategies]
	Straight		-- no-op, ball goes straight.	
	Gravity			-- causes a ball to fall to the bottom and bounce.
	Grow			-- increases the radius to a certain point.
	Shrink			-- decreases the radius to a certain point.
	Teleporting		-- jumps to a random location.
	Zone			-- sets the color based on which quadrant the ball is in.

[Strategies that both collide and interact]
	Collide         -- elastic collision behavior. Uses nudging for rebound positioning.
	CollideExact    -- elastic collision behavior. Uses exact calculations for rebound positioning.
	Spawn           -- adds an identical ball whenever it overlaps with another ball.

[Interaction Criteria Strategies]
i.e.Strategies that just detect an interaction and invoke the interaction strategies of 
the interacting balls.
	Aligned 			-- detects if the ball is moving in the same direction as any other balls.
	Overlap				-- detects if the ball overlaps with any other balls.
	DelayedOverlap		-- detects if the ball overlaps with any other balls every x timer ticks.
	Similar 			-- detects if the ball possess a similar color to that of any other balls.

[Interaction Behaviors Strategies]
i.e. Strategies that only install interaction strategies and thus must at least be combined 
with a strategy that detects an interaction.
	Collide2  	-- elastic collision implemented purely as an interaction strategy.
	Eat       	-- kills whomever the ball collides with and increases its area by the killed ball's area. 
	Flash     	-- flashes between red and the original color.
	Kill	  	-- deletes the other ball in the interaction.
	TakeColor 	-- switches color to that of the other ball in the interaction.
	SwapColor 	-- swaps color with the other ball in the interaction.

[Paint Strategies] (NOTE: each strategy is marked with I-IV denoting which category it fits in from the key below)
	Ball (I) 				-- paints a filled circle with the Ball's radius.
	BirdSheepImage (IV) 	-- randomly picks one of two animated image files (a bird and a sheep) to display.
	BoxAndBall (III) 		-- Paints a filled ellipse and a rectangle that move together.
	Duck (IV) 				-- Paints a duck that always stays upright.
	Ellipse (II) 			-- Paint strategy to paint an ellipse shape.
	Fish1 (II) 				-- Paints a fish-shaped Polygon generated by a Fish1PolygonFactory.
	Fish2 (II) 				-- Paints a fish-shaped Polygon generated by a Fish2PolygonFactory.
	MarioSonicImage (IV) 	-- Paints either an animated Mario or Sonic image.
	NiceFish (III) 			-- Paints a fish shape that has an eye.
	PlanetImage (IV) 		-- Randomly picks one image from an array of images of planets to use.
	Rectangle (II) 			-- Paints a rectangular shape scaled to the size of the ball.
	SoccerImage (IV) 		-- Paints a FIFA soccer ball as its image.
	SpaceShuttle (II) 		-- Paints a space-shuttle-shaped Polygon.
	Square (I) 				-- Paints a filled square with the Ball's radius.
	
Categories:
	I: Non-affine transform-based paint strategy, i.e. directly implements IPaintStrategy.
	II: Simple geometric shape and/or polygon (Affine transform-based paint strategy).
	III: Composite shape that stays upright (Affine transform-based paint strategy).
	IV: Image (Affine transform-based paint strategy).

[3 Required Ball-to-ball Interaction for HW05]
	Overlap-Kill
	Overlap-SwapColor
	Aligned-Flash
	
	
---------------------------------------------------------------------------------------------------------	
UML Diagrams
Please see UML Diagrams folder for images of generated UML diagrams, including (from more inclusive to more specific):

BallWorld
MVC
ModelStrategy
Paint
Shape